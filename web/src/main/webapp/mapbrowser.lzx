<?xml version="1.0" encoding="utf-8"?>
<!--============================================================================
 * Copyright Â© 2005 Markus Reinhardt - All Rights Reserved.
 *
=============================================================================-->
<!--<canvas bgcolor="silver" proxied="true" debug="false"-->
<canvas debug="true" width="100%" height="100%" maxtextheight="10000">

  <!--<resource name="waitcursor" src="resources/lzwaitcursor_rsc.swf"/>-->
  <resource name="dragcursor" src="images/icons/drag_cursor.png"/>
  <resource name="icon_save" src="images/icons/floppy.png"/>
  <resource name="icon_print" src="images/icons/print.png"/>
  <resource name="icon_drag" src="images/icons/drag.png"/>

  <include href="includes/loadbar.lzx"/>

  <include href="includes/parameters.lzx"/>
  <include href="includes/periodparameter.lzx"/>
  <include href="includes/errorwindow.lzx"/>
  <include href="includes/layertabelement.lzx"/>

  <include href="includes/borderview.lzx"/>
  <include href="includes/stableborder.lzx"/>

  <splash persistent="true">
  </splash>

  <debug y="500" width="600" height="200"/>
  <method event="oninit">
    Debug.write("Init");
    Debug.write(getBaseUrl());
  </method> 

  <dataset type="http" request="true" name="mapserverData" src="${getBaseUrl()+'Map.do'+'?width='+(canvas.width-4-240-190)+'&amp;height='+(canvas.height-4-40)}"/>
  <dataset type="http" name="SetParameter" src="${getBaseUrl()+'SetParameter.do'}" />
  <dataset type="http" name="MoveMap" src="${getBaseUrl()+'MoveMap.do'}"/>
  <dataset type="http" name="GetFeatureInfo" src="${getBaseUrl()+'GetFeatureInfo.do'}"/>
  <script src="scripts/global_functions.js"/>

  <alert height="300" width="600" layout="spacing:10" name="flashVersionAlert">
    <text height="200" visible="$once{lz.Browser.getVersion() &lt; 7}">
      <font size='16' color='#ff0000'><b>TIP:</b>
        Ihr Flash-Player hat die falsche Version.<br />
        Bitte installieren Sie die neueste Version!
      </font><br />
      <font size='16' color='#ff0000'><b>TIP:</b>
            Your Flash-Player Version is wrong.<br />
            Please install the latest Flash-Player:
      </font><br />
      <font color="#0000ff">
         <u>
           <a target="_blank" href="http://www.adobe.com/go/getflashplayer">http://www.adobe.com/go/getflashplayer</a>
          </u>
      </font>
    </text>
  </alert>

  <class name="mapview" bgcolor="0xeeeeee" extends="view">
    <attribute name="maplayerview" type="expression"
      value="$once{mainArea.mapview.layers}"/>
    <attribute name="maplayersettings"
      value="$once{sidebar.content.layers.layerlist}"/>
    <attribute name="mapparams" value="" type="string"/>
    <attribute name="allLayerTabsConstructed" value="false"/>

    <method event="oninit">
      this.pendingSPs = new Array();
      this.setParameterDelegate = new lz.Delegate( this, "processSPs" );
      this.sessionTimeoutDelegate = new lz.Delegate( this, "sessionTimeout" );
      this.updateTimoutTimer();
    </method>

    <method name="updateTimoutTimer">
      lz.Timer.removeTimer( this.sessionTimeoutDelegate );
      lz.Timer.addTimer( this.sessionTimeoutDelegate, 1750000 );
    </method>

    <method name="sessionTimeout">
      Debug.write("TIMEOUT");
      this.timeoutAlert.open();
    </method>

    <method name="getLayer" args="layername"><![CDATA[
      var ret;
      if( layername != undefined && layername.length > 0 )
      {
        ret = this.maplayerview.searchSubviews("name",layername);
      }
      if( ret == undefined ) {
        Debug.write("Warning: requested unknown layer: " + layername);
      }
      return ret;
      ]]></method>

    <method name="getLayerParameter" args="name"><![CDATA[
      var ret;
      if( name != undefined && name.length > 0 )
      {
        ret = this.maplayersettings.searchSubviews("name",name);
      }
      return ret;
      ]]></method>

    <method name="getMapUrl"><![CDATA[
      this.updateTimoutTimer();
      var url = new String();
      url = getBaseUrl() + "PrintMap.do";
      return url;
      ]]></method>

    <method name="setMapparam" args="name, value"><![CDATA[
      this.updateTimoutTimer();
      var needsUpdate=true;
      var strName = "";
      var strValue = "";
      if( !(typeof(name) == "undefined")
        && !(typeof(value) == "undefined") )
      {
        strName = new String(name);
        strValue = new String(value);
      }
      if( strName.length > 0 && strValue.length > 0 && needsUpdate ) {
        Debug.write("Setting Mapparam: " + strName + "=" + strValue);

        var p=new lz.Param();
        p.addValue("name", strName, true);
        p.addValue("value", strValue, true);
        this.pendingSPs.push(p);
        if( pendingSPs.length > 3 ) {
          lz.Timer.addTimer( setParameterDelegate, 200 );
        }
        else {
          lz.Timer.addTimer( setParameterDelegate, 0 );
        }
      }
      ]]></method>
    <method name="processSPs"><![CDATA[
      var d= canvas.SetParameter;
      d.setQueryString(this.pendingSPs.pop());
      d.doRequest();
      if( pendingSPs.length == 0 ) {
        lz.Timer.removeTimer( setParameterDelegate );
      }
    ]]></method>
    <method name="refreshAllLayers"><![CDATA[
      this.updateTimoutTimer();
      for ( var layer in this.maplayerview.subviews )
      {
        this.maplayerview.subviews[layer].refresh();
      }
      //var set = this.maplayersettings.content.subviews;
      //var smp = 0;
      //for(smp=0; smp < set.length; smp++) {
      //set[smp].refreshLayer();
      //}
      ]]></method>

    <alert name="timeoutAlert">
      Your session probably timed out due to inactivity during the last
      30 minutes. Press 'OK' to reload the application...
      <method event="onresult">
        if( this.result )
        {
          lz.Browser.loadURL(lz.Browser.getLoadURL());
        }
      </method>
    </alert>


    <view name="toolbar" width="100%" height="40">
      <view x="10" height="100%" align="left">
        <view valign="middle">
          <simplelayout axis="x" spacing="20"/>
          <iconbutton icon_resource="icon_print" width="40" height="40">
            <method event="onclick"><![CDATA[
              var url = classroot.getMapUrl();
              lz.Browser.loadURL(url, "_blank");
            ]]></method>
          </iconbutton>
          <text x="${classroot.sidebar.width + ((classroot.mainArea.width-this.width)/2)}" height="30">
            <font size="24">EpiScanGIS</font>
          </text>
        </view>
      </view>
    </view>
    <!-- SIDEBAR -->
    <view name="loadsidebar" width="240" height="60"
      y="${(parent.height-classroot.toolbar.height-32)/2}"
      visible="${!classroot.sidebar.visible}">
      <simplelayout axis="y" spacing="20"/>
      <text x="$once{(240-this.width)/2}">Loading...</text>
      <loadwheel width="32" height="32" x="104" />
    </view>

    <view y="${classroot.toolbar.height}" width="240"
      height="${parent.height-classroot.toolbar.height}"
      name="sidebar" visible="true">
      <stableborderlayout axis="x"/>
      <!-- left border -->
      <view width="5" height="100%"/>
      <!-- sidebar content -->
      <view name="content" height="100%">
        <simplelayout axis="y" spacing="0"/>
        <!-- REQUEST MAP FORM -->
        <view name="mapform" layout="spacing:10" height="30%"
          width="100%">
          <text name="heading" fontstyle="bold">
            <u>Query</u>
          </text>
          <view x="5" name="formview" layout="spacing:10"
            height="${parent.height-parent.heading.height-10}"
            width="${parent.width-5}">
            <view width="100%" layout="spacing:5">
              <selectparameter width="${parent.width}"
                datapath="mapserverData:/map/composite[1]/selectparameter"
                mapview="${classroot}"/>
            </view>
            <periodparameter width="100%"
              datapath="mapserverData:/map/composite[1]/periodparameter"
              mapview="${classroot}"/>
          </view>
        </view>
        <!-- LAYER CHECKBOXES -->
        <view name="layers" layout="spacing:5" height="70%" width="100%">
          <text name="heading" fontstyle="bold"><u>Layers</u></text>
          <tabslider name="layerlist" height="${parent.height-parent.heading.height-10}" width="100%">
            <method name="showLoadBar" args="layername,show">
              var layerTab =
              this.content.searchSubviews("layername", layername);
              layerTab.top.header.subviews[1].loadbar.setVisible(show);
            </method>
            <layertabelement visible="true" layername="$path{'@name'}"
              text="$path{'@title'}"
              layout="spacing:5" mapview="${classroot}" initstage="late">
	      <datapath xpath="mapserverData:/map/layer">
                <method event="onclones"><![CDATA[
                  if(!this['doneDel']) {
                  this.doneDel =
                  new lz.Delegate( this, 'lastCloneInit');
                  this.doneDel.
                  register(clones[clones.length -1], 'oninit');
                  }
                  ]]></method>
                <method name="lastCloneInit"><![CDATA[
                  this.doneDel = new lz.Delegate( this, "allDone" );
                  lz.Timer.addTimer( this.doneDel, 0 );
                  ]]></method>
                <method name="allDone"><![CDATA[
                  Debug.write("ALL DONE");
                  parent.classroot.sidebar.setAttribute("visible", true);
                  parent.selectItemAt(0);
                  parent.classroot.setAttribute(
                  "allLayerTabsConstructed",true);
                  //parent.classroot.refreshAllLayers();
                ]]></method>
              </datapath>
            </layertabelement>
          </tabslider>
        </view>
      </view>
      <!-- right border -->
      <view height="100%" width="5"/>
    </view>
    <!-- SIDEBAR END -->

    <!-- INFO PANEL -->
    <view width="250" height="${this.border.height}"
      datapath="GetFeatureInfo:/result" bgcolor="0xffffe1"
      name="infopanel" opacity="0"
      onmouseout="this.fadeOut.doStart()">
      <method name="open" args="x,y">
        <![CDATA[
          if( typeof x == "number" && typeof y == "number" )
          {
            this.setAttribute("opacity",0);
            this.setX(x);
            this.setY(y);
            this.bringToFront();
            this.fadeOut.stop();
            this.setVisible(true);
            this.fadeIn.doStart();
            for ( var view in this.border.content.subviews )
            {
              this.border.content.subviews[view].setVisible(false);
            }
            this.loadbar.setVisible(true);
          }
        ]]>
      </method>
      <method event="ondata">
        <![CDATA[
        var features = datapath.xpathQuery('./layer/feature');
	var featureLength = 1;
	if(features.length) {
      	  featureLength = features.length;
        }
        var layers = datapath.xpathQuery('./layer');
        var layerLength = 1;
        if(layers.length) {
	  layerLength = layers.length;
	}
	Debug.write('Features: ' + featureLength);
        Debug.write('Layers: ' + layerLength);
        var totalHeight = featureLength*21;
        totalHeight += layerLength*21;
        totalHeight -= 9;
        for ( var view in this.border.content.subviews )
        {
          this.border.content.subviews[view].setVisible(true);
        }
        var yEnd = y+totalHeight;
        Debug.write('Total height: ' + totalHeight + ', yEnd: ' + yEnd + ', Canvas height: ' + canvas.height);
        
        if( yEnd > canvas.height ) {
        	setY(y-yEnd+canvas.height);
        }
        this.loadbar.setVisible(false);
        ]]>
      </method>
      <loadstar x="10" y="10" name="loadbar"/>
      <animatorgroup name="fadeIn" duration="1000" start="false">
        <animator attribute="opacity" to="1" />
      </animatorgroup>
      <animatorgroup name="fadeOut" duration="1000" start="false">
        <method event="onstop">
          <![CDATA[
                parent.setVisible(false);
              ]]>
        </method>
        <animator attribute="opacity" to="0" />
      </animatorgroup>
      <stableborder name="border" width="100%"
        height="${Math.max(50,this.content.height)}">
        <view name="content" width="100%" layout="spacing:4">
          <view width="100%" datapath="./layer/" layout="spacing:2">
            <text fontstyle="bold" width="100%" text="$path{'@title'}" />
            <text width="100%" x="3" datapath="./feature"
              text="$path{'text()'}" />
          </view>
        </view>
      </stableborder>
    </view>
    <!-- INFO PANEL END -->

    <!-- MAINAREA -->
    <view
      width="${parent.width-parent.sidebar.width-parent.legendbar.width}"
      x="${parent.sidebar.width}" y="${classroot.toolbar.height}"
      height="${parent.height-classroot.toolbar.height}"
      name="mainArea">
      <simplelayout axis="y"/>
      <borderview name="mapview" clip="true" width="100%"
        height="100%" bordersize="2" bgcolor="navy">
        <!-- VIEW HOLDING ALL MAPLAYERS -->
        <view clip="true" name="layers" bgcolor="white"
          width="100%" height="100%" focusable="true">
          <attribute name="mouseOver" value="false"/>
          <attribute name="mapJustMoved" value="false"/>
          <method event="onmouseover"><![CDATA[
            this.mouseOver = true;
            ]]></method>
          <method event="onmouseout"><![CDATA[
            this.mouseOver = false;
            ]]></method>
          <method event="oninit"><![CDATA[
            //del = new lz.Delegate(this, "pressCtrl");
            //lz.Keys.callOnKeyCombo(del, ["control"]);
            ]]></method>
          <method event="onmousedown"><![CDATA[
            moveMap.apply();
          ]]></method>
          <method event="onmouseup"><![CDATA[
            var x = Math.round(this.x);
            var y = Math.round(this.y);
            if(moveMap.isapplied && (Math.abs(x) > 3 || Math.abs(y) > 3) )
            {
              moveMap.remove();
              var d=canvas.MoveMap;
              var p=new lz.Param();
              p.addValue("xoffset", -x/width, true);
              p.addValue("yoffset", y/height, true);
              d.setQueryString(p);
              d.doRequest();
              this.mapJustMoved=true;
            }
            else {
              moveMap.remove();
              setX(0);
              setY(0);
            }


            ]]></method>
          <method event="onclick"><![CDATA[
            if( this.mouseOver && !this.mapJustMoved ) {
              moveMap.remove();
              var d=canvas.GetFeatureInfo;
              var p=new lz.Param();
              var x = Math.round(getMouse('x'));
              var y = Math.round(getMouse('y'));
              p.addValue("x", x, true);
              p.addValue("y", y, true);
              d.setQueryString(p);
              d.doRequest();
              classroot.infopanel.open(x-5,y-5);
            }
            else {
              this.mapJustMoved=false;
            }
            ]]></method>
          <datapointer id="mydp" xpath="SetParameter:/result">
            <method event="ondata" args="d"><![CDATA[
              if(classroot.allLayerTabsConstructed) {
                var upd;
                var childs = d.childNodes;
                for( upd=0; upd < childs.length; upd++ ) {
                  if(childs[upd].nodeName == "update") {
                    var updateLayer = childs[upd].childNodes[0].data;
                    parent.searchSubviews("name",updateLayer).refresh();
                  }
                }
              }
              ]]></method>
          </datapointer>
          <datapointer id="moveMapPtr" xpath="MoveMap:/result">
            <method event="ondata" args="d"><![CDATA[
              //TODO check for result success
              classroot.refreshAllLayers();
              parent.setX(0);
              parent.setY(0);
              ]]></method>
          </datapointer>
          <dragstate name="moveMap"
            drag_min_x="$once{-width+width/10}"
            drag_max_x="$once{width-width/10}"
            drag_min_y="$once{-height+height/10}"
            drag_max_y="$once{height-height/10}"/>
          <!-- MAPLAYER -->
          <view visible="false" width="100%" height="100%"
            datapath="mapserverData:/map[1]/layer/">
            <attribute name="title" type="string"/>
            <attribute name="mapurl" type="string"/>
            <attribute name="currentBuffer" type="number" value="0"/>
            <attribute name="nextBuffer" type="number" value="1"/>
            <attribute name="isloading" type="boolean"
              value="false"/>
            <attribute name="changed" type="boolean"
              value="true"/>
            <method event="ondata"><![CDATA[
              var title = this.datapath.xpathQuery('@title');
              this.setAttribute('title',title);
              this.name = this.datapath.xpathQuery('@name');
              var mapurl = getBaseUrl() + 'GetMapLayer.do';
              mapurl += "?layer=" + this.name;

              this.setAttribute('mapurl',mapurl);
              var active =  this.datapath.xpathQuery('@active');
              ]]></method>
            <method name="activate"><![CDATA[
              this.setVisible(true);
              if( typeof this.getAttribute("resource") == "undefined"
                || this.changed) {
                this.refresh();
                this.changed=false;
              }
              ]]></method>
            <method name="deactivate"><![CDATA[
              this.setVisible(false);
              ]]></method>
            <method name="refresh">
              if( this.visible ) {
                subviews[nextBuffer].setSource(mapurl, "none","");
                this.isloading = "true";
                classroot.maplayersettings.showLoadBar(this.name,true);
              }
              else {
                Debug.write( 'Layer ' + this.title + ' not refreshed (invisible)');
                this.changed = true;
              }
            </method>
            <method name="bufferLoaded">
              Debug.write("LOADED " + this.title);
              this.isloading = false;
              classroot.maplayersettings.showLoadBar(this.name,false);
              subviews[currentBuffer].hide.doStart();
              subviews[nextBuffer].show.doStart();
              currentBuffer = (currentBuffer+1)%2;
              nextBuffer = (nextBuffer+1)%2;
            </method>

            <view name="buffer1" visible="true" opacity="0"
              width="100%" height="100%">
              <animator name="show"
                 attribute="opacity" to="1"  duration="300" start="false"/>
              <animator name="hide"
                 attribute="opacity" to="0"  duration="300" start="false"/>
              <method event="onload">
                parent.bufferLoaded();
              </method>
            </view>
            <view name="buffer2" visible="true" opacity="0"
              width="100%" height="100%">
              <animator name="show"
                 attribute="opacity" to="1"  duration="300" start="false"/>
              <animator name="hide"
                 attribute="opacity" to="0"  duration="300" start="false"/>
              <method event="onload">
                parent.bufferLoaded();
              </method>
            </view>

          </view>
        </view>
        <!--<scrollbar axis="x"/>-->
        <!--<scrollbar axis="y"/>-->
      </borderview>

    </view>
    <view width="190"
      x="${parent.sidebar.width+parent.mainArea.width}"
      y="${classroot.toolbar.height}"
      height="${parent.height-classroot.toolbar.height}"
      name="legendbar" clip="true">
      <view width="190" layout="spacing:5">
        <view x="10" datapath="mapserverData:/map[1]/layer/legend">
          <!--
          <text name="title" clickable="true"
            x="${(this.width-this.getTextWidth())/2}"
            text="$path{'../@title'}"
            width="100%"/>
          -->
          <view visible="true" width="100%"
            height="${this.img.height+2}"
            name="legendgraphic">
            <!--
            <method event="onvisible"> if(this.visible) {
              this.open.doStart(); } else this.setOpacity(0);
            </method>
            <animatorgroup name="open" duration="1000"
              start="false">
              <animator attribute="opacity" to="0.7"/>
            </animatorgroup>
            -->
            <view name="img">
              <method event="oninit">
                if( parent.parent.datapath.xpathQuery('../@name') != null )
                {
                  setSource(getBaseUrl() + 'GetLegendGraphic.do?layer='
                    + parent.parent.datapath.xpathQuery('../@name'), "both","");
                }
              </method>
              <!--
              <method event="onload">
                <![CDATA[
                parent.parent.title.setText(
                "<u>" + parent.parent.title.text + "</u>");
                ]]>
              </method>
              -->
            </view>
          </view>
        </view>
      </view>
      <vscrollbar/>
    </view>
  </class>

  <mapview datapath="mapserverData:/map" name="mapviewer"
    width="${parent.width}" height="${parent.height}"/>
  <errorwindow name="errorviewer" datapath="mapserverData:/result" width="100%" height="100%"/>
</canvas>
