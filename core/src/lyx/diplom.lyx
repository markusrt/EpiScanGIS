#LyX 1.4.2 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass scrbook
\begin_preamble
\newcommand{\clearemptydoublepage}{\newpage{\pagestyle{empty}\cleardoublepage}}
\usepackage{umlaut}
\usepackage{url}
\usepackage{doc}
\usepackage{makeidx}
\usepackage{parskip}
\usepackage{natbib}
\usepackage{caption}
\usepackage{listings}
\usepackage{color}
\usepackage{keyval}
\lstset{tabsize=2,rulesepcolor=\color{sourcebg}, frame=shadowbox,numbers=left, stepnumber=2, numbersep=5pt, breaklines=true, basicstyle=\ttfamily}
\definecolor{sourcebg}{gray}{.90}
\hyphenation{Web-an-wen-dung}

% Different font in captions
\newcommand{\captionfonts}{\small}

\makeatletter  % Allow the use of @ in command names
\long\def\@makecaption#1#2{%
  \vskip\abovecaptionskip
  \sbox\@tempboxa{{\captionfonts #1: #2}}%
  \ifdim \wd\@tempboxa >\hsize
    {\captionfonts #1: #2\par}
  \else
    \hbox to\hsize{\hfil\box\@tempboxa\hfil}%
  \fi
  \vskip\belowcaptionskip}
\makeatother   % Cancel the effect of \makeatletter

\usepackage[ngerman]{babel}
 
\addto\captionsngerman{%
\renewcommand{\bibname}{Literatur- und Quellenverzeichnis}
} 
\end_preamble
\language ngerman
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize 12
\spacing single
\papersize a4paper
\use_geometry true
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 3cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 2
\paperpagestyle headings
\tracking_changes false
\output_changes true
\end_header

\begin_body

\begin_layout Standard
\begin_inset Include \input{titlep_f.lyx}
preview false

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Include \input{titlep.lyx}
preview false

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\begin_inset ERT
status open

\begin_layout Standard


\backslash
frontmatter
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Web-an-wen-dung}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{EpiDeGIS}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{PostgreSQL}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{In-stal-la-tions-be-schrei-bung}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Fine-type}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Punkt-er-eig-nis-se}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Häu-fun-gen}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{rück-blickend}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Maven}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Test-er-geb-nis-se}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Vor-gänge}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Quell-code}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Apache}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Linux}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Servlet}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{USGS}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{multiline}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Geo-in-for-ma-tions-sys-tem-en}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Geo-in-for-ma-tions-sys-tem}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{MapServer}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{MapServers}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{AbstractWmsMap}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{miny}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Ty-pi-sie-rungs-er-geb-nis-da-ten}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Pfad-angaben}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Aus-füh-run-gen}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Web-ober-flä-che}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Mostashari}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Meningococcal}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Längen-kreis}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Soft-ware-sys-tems}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Beta}
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
hyphenation{Web-app-li-ka-tion}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset LatexCommand \tableofcontents{}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard


\backslash
mainmatter
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\begin_inset LatexCommand \label{cha:Intro}

\end_inset

Einleitung
\end_layout

\begin_layout Section
Einführung
\end_layout

\begin_layout Standard
Das Jahr 2005 steht ganz im Zeichen der Entwicklung eines neuen Abschnitts
 des Informationszeitalters.
 Mit 
\begin_inset Quotes eld
\end_inset

Google Earth
\begin_inset Quotes erd
\end_inset

 und 
\begin_inset Quotes eld
\end_inset

NASA World Wind
\begin_inset Quotes erd
\end_inset

 entstehen völlig neuartige Formen von Informationssystemen 
\begin_inset LatexCommand \cite{wilk:2005}

\end_inset

.
 Sie bieten dem Anwender Geoinformatik zum Anfassen.
 
\end_layout

\begin_layout Standard
Die Geoinformatik beschäftigt sich als Teilgebiet der Informatik schon lange
 mit der Aufgabe, geografische Daten zu visualisieren.
 So genannte Geoinformationssysteme (GIS) bieten dabei vielfältige Möglichkeiten
 zur Bewertung von Informationen mit räumlichem Bezug.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/google_earth.png
	lyxscale 50
	width 50col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Darstellung-der-Weltkugel}

\end_inset

Darstellung der Weltkugel als Informationsquelle in 
\begin_inset Quotes eld
\end_inset

Google Earth
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Quotes eld
\end_inset

Google Earth
\begin_inset Quotes erd
\end_inset

 und 
\begin_inset Quotes eld
\end_inset

NASA World Wind
\begin_inset Quotes erd
\end_inset

 sind in der Entwicklung von GIS jedoch die ersten Software-Produkte, die
 Geoinformatik zum Anfassen bieten.
 Anfassen ist dabei durchaus wörtlich zu nehmen.
 Die am ehesten als 
\begin_inset Quotes eld
\end_inset

Planetenbrowser
\begin_inset Quotes erd
\end_inset

 bezeichneten Programme erlauben es, die Erdkugel in einer dreidimensionalen
 Visualisierung zu drehen und zu zoomen, um darauf Informationen zu lokalisieren
 (siehe Abbildung 
\begin_inset LatexCommand \ref{fig:Darstellung-der-Weltkugel}

\end_inset

).
 Die Firma Google strebt mit dieser Software den Aufbau von neuen Märkten
 in der Informationstechnik an.
 Diese nutzt das ureigene menschliche Verständnis für räumliche Zusammenhänge.
\end_layout

\begin_layout Standard
Die vorliegende Arbeit befasst sich jedoch nicht mit den Märkten, die GI-Systeme
 bieten.
 Sie betrachtet die Möglichkeiten, wie einem Anwender mittels Karten Information
en aus dem Bereich der Epidemiologie präsentiert werden können.
 Der Zugang zu Informationen, welche die öffentliche Gesundheit betreffen,
 ist für Vertreter des öffentlichen Gesundheitsdienstes und (politische)
 Entscheidungsträger, aber auch für die Öffentlichkeit von großem Wert.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/vogelgrippe_welt.png
	lyxscale 50
	width 50col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Ausbreitung-der-Geflügelpest/Vogelgrippe}

\end_inset

Ausbreitung der Geflügelpest/Vogelgrippe (aviäre Influenza Subtyp A/H5N1),
 Stand: Oktober 2005 
\begin_inset LatexCommand \cite{vogelgrippe:2005}

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Wichtigkeit solcher Informationen zeigt sich beispielsweise an der Ausbreitu
ng der 
\begin_inset Quotes eld
\end_inset

Vogelgrippe
\begin_inset Quotes erd
\end_inset

.
 Dieser Begriff bezeichnet im aktuellen Zusammenhang die durch den Subtyp
 A/H5N1 verursachte Geflügelpest (aviäre Influenza).
 Diese hat sich - ausgehend von China im Jahr 1997 - bis heute in großen
 Teilen Asiens verbreitet 
\begin_inset LatexCommand \cite{h5n1-timeline:2005}

\end_inset

.
 Abbildung 
\begin_inset LatexCommand \ref{fig:Ausbreitung-der-Geflügelpest/Vogelgrippe}

\end_inset

 zeigt die Verbreitung anhand einer Karte.
 Durch die Berichterstattung der Medien zu diesem Thema wird deutlich, dass
 unter der Bevölkerung ein großer Informationsbedarf an epidemiologischen
 Daten herrscht.
\end_layout

\begin_layout Standard
Bis dato gibt es kaum ein System, das anhand von Karten einer großen Benutzergru
ppe eingängig epidemiologische Daten vermitteln kann.
 Dabei könnte so eine Lösung durch Aktualität und eine entsprechende Visualisier
ung intuitiv über die geografische Verteilung von Erkrankungsfällen aufklären.
 
\end_layout

\begin_layout Standard
Neben der reinen Visualisierung könnte das System auch eine automatisierte
 statistische Analyse der Falldaten durchführen.
 Anhand dieser ließen sich potenzielle Erkrankungsausbrüche frühzeitig erkennen.
\end_layout

\begin_layout Section
Aufgabenstellung
\end_layout

\begin_layout Subsubsection
Web-basierter, einer breiten Benutzergruppe zugänglicher, epidemiologischer
 GIS-Service
\end_layout

\begin_layout Standard
Die Aufgabe der vorliegenden Diplomarbeit ist es, einen Web-basierten GIS-Servic
e zur Überwachung von Infektionen zu implementieren.
 Dieser soll es dem Anwender in einer über das Internet ausführbaren Applikation
 erlauben, Karten zu generieren, welche die geografische Verteilung von
 Erkrankungsfällen eines Erregers aufzeigen.
\end_layout

\begin_layout Standard
Anhand dieser Karten sind Epidemiologen, Vertreter des öffentlichen Gesundheitsd
ienstes, (politische) Entscheidungsträger und die Öffentlichkeit in der
 Lage, Informationen über die Verteilung von Krankheitsfällen zu erlangen.
 Die Web-basierte Anwendung soll hierbei so ausgelegt sein, dass sie möglichst
 wenig Anforderungen an die Konfiguration des clientseitigen Rechners stellt.
 Nur so ist eine weit reichende Zugänglichkeit zu den Informationen gesichert.
\end_layout

\begin_layout Subsubsection
Ausbruchsanalyse
\end_layout

\begin_layout Standard
Zusätzlich hat die Arbeit zum Ziel, eine automatisierte Risikoanalyse anhand
 der im System gespeicherten Erkrankungsinformationen durchzuführen.
 Ein in das Softwaresystem integriertes Statistikwerkzeug führt hierzu regelmäßi
ge Tests durch, deren Ergebnisse Hinweise auf Kartenregionen mit einer überdurch
schnittlichen Häufung von Erkrankungsfällen geben.
 Anhand entsprechender Darstellungen werden die Risikoregionen visualisiert.
 
\end_layout

\begin_layout Standard
Durch diesen neuartigen Ansatz nimmt das System die Stellung eines Web-basierten
 Frühwarnsystems ein, das mögliche Erkrankungsausbrüche vorhersagen kann.
\end_layout

\begin_layout Subsubsection
Übertragbarkeit auf andere Krankheitserreger und Länder
\end_layout

\begin_layout Standard
Ein wichtiges Kriterium dieser Arbeit ist es, den Entwurf der Software auf
 Erweiterbarkeit auszulegen.
 Das zu entwickelnde System soll sich auf verschiedene Krankheitserreger
 anwenden und auch in anderen Ländern einsetzen lassen können.
\end_layout

\begin_layout Subsubsection
Kooperationen
\end_layout

\begin_layout Standard
Diese Arbeit ist in Kooperation mit dem Nationalen Referenzzentrum für Meningoko
kken 
\begin_inset LatexCommand \cite{nrzm:2005}

\end_inset

 des Instituts für Hygiene und Mikrobiologie der Universität Würzburg und
 der Firma Ridom GmbH 
\begin_inset LatexCommand \cite{ridom:2005}

\end_inset

 aus Würzburg entstanden.
\end_layout

\begin_layout Standard
Das Nationale Referenzzentrum für Meningokokken ermittelt seit mehreren
 Jahren detaillierte Informationen zu in Deutschland aufgetretenen Meningokokken
-Erkrankungen.
 Das zu entwickelnde System soll diese Daten beispielhaft integrieren.
\end_layout

\begin_layout Standard
Die Firma Ridom ist an einer Machbarkeitsstudie zur Entwicklung eines Web-basier
ten epidemiologischen GIS interessiert.
\end_layout

\begin_layout Subsubsection
Projektname
\end_layout

\begin_layout Standard
Das für diese Diplomarbeit entwickelte Softwaresystem trägt den Arbeitstitel
 
\series bold
EpiDeGIS
\series default
.
 
\end_layout

\begin_layout Section
Aufbau der vorliegenden Arbeit
\end_layout

\begin_layout Standard
Diese Diplomarbeit gliedert sich in folgende Kapitel:
\end_layout

\begin_layout Description
Kapitel\InsetSpace ~
2 vermittelt alle Grundlagen aus den Bereichen Epidemiologie und
 Geoinformationssysteme, die für das Verständnis dieser Arbeit erforderlich
 sind.
\end_layout

\begin_layout Description
Kapitel\InsetSpace ~
3 gibt das anhand der Lastenhefte des Nationalen Referenzzentrums
 für Meningokokken und der Firma Ridom GmbH erstellte Pflichtenheft zur
 Softwareentwicklung wieder.
\end_layout

\begin_layout Description
Kapitel\InsetSpace ~
4 untersucht die Voraussetzungen, die an einen Web-basierten GIS-Service
 zur Überwachung von Infektionen gestellt werden und beschreibt anwendungsreleva
nte Open-Source-Software, die in diesem Projekt Verwendung findet.
\end_layout

\begin_layout Description
Kapitel\InsetSpace ~
5 zeigt Konzepte, die bei dem Entwurf des Softwaresystems EpiDeGIS
 angewendet wurden.
\end_layout

\begin_layout Description
Kapitel\InsetSpace ~
6 veranschaulicht anhand von ausgesuchten Implementierungsbeispielen
 die Umsetzung der Entwurfskonzepte.
\end_layout

\begin_layout Description
Kapitel\InsetSpace ~
7 fasst alle Ergebnisse zusammen.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Grundlagen
\end_layout

\begin_layout Standard
Das folgende Kapitel vermittelt die Grundlagen, die für das Verständnis
 dieser Arbeit notwendig sind.
 Es gibt einen Einblick in die Epidemiologie und die Geografischen Informationss
ysteme (GIS).
 Die Inhalte der einzelnen Abschnitte beschränken sich dabei auf die Teilbereich
e dieser Disziplinen, die in der vorliegenden Diplomarbeit verwendet werden.
\end_layout

\begin_layout Section
Epidemiologie
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "90col%"
special "none"
height "1pt"
height_special "totalheight"
status open

\begin_layout Subparagraph
Definition
\end_layout

\begin_layout Standard
Die Epidemiologie ist die Lehre der Verbreitung und Ursachen von gesundheitsrele
vanten Zuständen und Ereignissen in Bevölkerungsgruppen.
 Das epidemiologische Wissen wird im Allgemeinen angewandt, um Gesundheitsproble
me der Bevölkerung zu beobachten und so gut wie möglich zu kontrollieren.
 
\begin_inset LatexCommand \cite{last:2000}

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset

Diese Wissenschaft erfasst und bewertet Erkrankungshäufungen.
 Epidemiologen berücksichtigen hierzu verschiedene Faktoren.
 Neben dem Alter und Geschlecht eines Erkrankten spielen auch das soziale
 Umfeld und Umwelteinflüsse eine Rolle.
 Häufungen von Krankheitsfällen haben immer eine räumliche und zeitliche
 Komponente.
 Diese Informationen sind eine wichtige Bewertungshilfe.
 
\end_layout

\begin_layout Standard
Die Epidemiologie entwickelt mathematische Methoden und Modelle um die erfassten
 Daten zueinander in Beziehung zu bringen.
 Ein einfaches Mittel sind Kennzahlen.
 Diese helfen einem Beobachter dabei, aufgetretene Fälle objektiver zu beurteile
n.
\end_layout

\begin_layout Subsection
Epidemiologische Kennzahlen und Definitionen
\end_layout

\begin_layout Subsubsection
Prävalenz
\end_layout

\begin_layout Standard
Diese Größe gibt die Anzahl der Erkrankungsfälle in einer Population an.
 Sie berechnet sich mit folgender Formel:
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\frac{Anzahl\, der\, Erkrankten}{Anzahl\, der\, Mitglieder\, einer\, Population}\]

\end_inset


\end_layout

\begin_layout Subsubsection
Inzidenz 
\end_layout

\begin_layout Standard
Dieser Wert bezeichnet die Anzahl der Neuerkrankungen einer Population während
 eines bestimmten Zeitraumes.
 Die Jahresinzidenz bezieht sich dabei üblicherweise auf 100.000 Einwohner.
 Anhand der Inzidenz lässt sich die Rate der Neuerkrankungen in einem Gebiet
 unabhängig von der Bevölkerungsdichte betrachten.
 In Ballungszentren gibt es immer mehr Fälle als in einem kleinen Dorf.
 Diese Kennzahl schafft die Vergleichbarkeit zwischen einer Großstadt und
 einer 1000-Seelen-Gemeinde.
 Bei Krankheiten mit einer langen Erkrankungsdauer ist die Inzidenz niedriger
 als die Prävalenz.
\end_layout

\begin_layout Subsubsection
Cluster
\end_layout

\begin_layout Standard
Dieser Begriff bezeichnet in der Epidemiologie eine zeitlich und örtlich
 verstärkt auftretende Häufungen von Erkrankungen des gleichen Typs.
 
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Epidemiologie-in-Deutschland}

\end_inset

Epidemiologie in Deutschland
\end_layout

\begin_layout Standard
Das Infektionsschutzgesetz (IfSG) 
\begin_inset LatexCommand \cite{ifsg:2000}

\end_inset

 regelt in Deutschland die Zusammenarbeit von Behörden des Bundes, der Länder
 und der Kommunen, Ärzten, Tierärzten, Krankenhäusern, wissenschaftlichen
 Einrichtungen sowie sonstigen Beteiligten in allen Bereichen der Epidemiologie.
 Abschnitt 3 dieses Gesetzes beschreibt das Meldewesen.
 Abbildung 
\begin_inset LatexCommand \ref{fig:Meldewege}

\end_inset

 gibt einen Überblick.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/meldewege.eps
	lyxscale 30
	width 10cm
	keepAspectRatio
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Meldewege}

\end_inset

Erfassung von Infektionserkrankungen in Deutschland.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Feststellende Ärzte, Krankenhäuser und andere Personen
\begin_inset Foot
status collapsed

\begin_layout Standard
siehe auch IfSG § 8: zur Meldung verpflichtete Personen
\end_layout

\end_inset

 müssen meldepflichtige Krankheiten
\begin_inset Foot
status collapsed

\begin_layout Standard
siehe auch IfSG § 6: meldepflichtige Krankheiten
\end_layout

\end_inset

 bzw.
 Nachweise von Krankheitserregern
\begin_inset Foot
status collapsed

\begin_layout Standard
siehe auch IfSG § 7: meldepflichtige Nachweise von Krankheitserregern
\end_layout

\end_inset

 an das zuständige Gesundheitsamt übermitteln.
 Dieses erhält auch personenbezogene Patientendaten
\begin_inset Foot
status collapsed

\begin_layout Standard
siehe auch IfSG § 9: namentliche Meldung
\end_layout

\end_inset

.
 Das Amt muss die gesammelten Daten in anonymisierter Form
\begin_inset Foot
status collapsed

\begin_layout Standard
siehe auch IfSG § 10: nichtnamentliche Meldung
\end_layout

\end_inset

 an die zuständige Landesbehörde melden
\begin_inset Foot
status open

\begin_layout Standard
siehe auch IfSG § 11: Übermittlungen durch das Gesundheitsamt und die zuständige
 Landesbehörde
\end_layout

\end_inset

.
 Die für Bayern zuständige Behörde ist beispielsweise das Bayerisches Landesamt
 für Gesundheit und Lebensmittelsicherheit (LGL).
\end_layout

\begin_layout Standard
Die zentrale Einrichtung der Bundesregierung auf dem Gebiet der Krankheitsüberwa
chung und -prävention ist das Robert Koch-Institut (RKI).
 Die Länder übermitteln dieser Behörde laufend die aktuellen Erkrankungsdaten
 (in der vorliegenden nichtnamentlichen Form).
 Nach dem IfSG hat das RKI folgende Aufgaben
\begin_inset Foot
status open

\begin_layout Standard
siehe auch IfSG § 4: Aufgaben des Robert Koch-Institutes
\end_layout

\end_inset

:
\end_layout

\begin_layout Standard
Entwicklung von 
\begin_inset Quotes eld
\end_inset

Konzeptionen zur Vorbeugung übertragbarer Krankheiten sowie zur frühzeitigen
 Erkennung und Verhinderung der Weiterverbreitung von Infektionen.
 Dies schließt die Entwicklung und Durchführung epidemiologischer und laborgestü
tzter Analysen sowie Forschung zu Ursache, Diagnostik und Prävention übertragbar
er Krankheiten ein.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Das Robert Koch-Institut
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

erstellt [...] Richtlinien, Empfehlungen, Merkblätter und sonstige Informationen
 zur Vorbeugung, Erkennung und Verhinderung der Weiterverbreitung übertragbarer
 Krankheiten
\begin_inset Quotes erd
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

hat [...] Kriterien (Falldefinitionen) für die Übermittlung eines Erkrankungs-
 oder Todesfalls und eines Nachweises von Krankheitserregern zu erstellen
\begin_inset Quotes erd
\end_inset

,
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

fasst [...] [übermittelte] Meldungen zusammen, um sie infektionsepidemiologisch
 auszuwerten
\begin_inset Quotes erd
\end_inset

,
\end_layout

\begin_layout Itemize
veröffentlicht regelmäßig 
\begin_inset Quotes eld
\end_inset

die Zusammenfassungen und die Ergebnisse der infektionsepidemiologischen
 Auswertungen [...].
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Das RKI benennt seit 1995 bei besonders wichtigen übertragbaren Krankheitserrege
rn wie 
\emph on
Mycobacterium tuberculosis
\emph default
, Meningokokken oder Salmonellen Nationale Referenzzentren (NRZ) zu deren
 Überwachung 
\begin_inset LatexCommand \cite{rki_nrz:05}

\end_inset

.
 Die Berufung erfolgt durch das Bundesministerium für Gesundheit und Soziale
 Sicherung (BMGS) für jeweils drei Jahre.
 
\end_layout

\begin_layout Standard
Diese Zentren haben unter anderem Beratungsaufgaben, erstellen Gutachten
 und führen Laboruntersuchungen von Erkrankungsfällen durch.
 Sie übernehmen Aufgaben in der Qualitätssicherung und kooperieren mit dem
 RKI und internationalen Organisationen.
 Das RKI empfiehlt Krankenhäusern und Primärlaboratorien diese Dienstleistungen
 in Anspruch zu nehmen und entnommene Proben von Patienten an das entsprechende
 Referenzzentrum zu schicken.
\end_layout

\begin_layout Subsection
Meningokokken
\end_layout

\begin_layout Standard
Meningokokken
\begin_inset Foot
status collapsed

\begin_layout Standard
wissenschaftlicher Name: 
\emph on
Neisseria meningitidis
\end_layout

\end_inset

 sind gefährliche übertragbare Krankheitserreger des Menschen.
 Es handelt sich dabei um gramnegative Bakterien, die in 12 verschiedene
 Serogruppen unterteilt werden.
 Die Mikrobiologie teilt Variationen von Bakterien oder Viren anhand von
 Merkmalen auf deren Oberfläche in so genannte Serogruppen, Serotypen oder
 Serovare ein, wenn sich diese anhand spezifischer Antikörper unterscheiden
 lassen.
 In Deutschland kommen von diesen seit Jahren fast ausschließlich die Serogruppe
 B und C vor.
 Altersabhängig besiedeln die Bakterien bei bis zu über 30% der Gesunden
 die Schleimhäute im Nasen-Rachenraum 
\begin_inset LatexCommand \cite{epibul34:05}

\end_inset

.
 Die Besiedelung löst jedoch in den wenigsten Fällen eine Erkrankung aus.
\end_layout

\begin_layout Standard
Die Jahresinzidenz lag 2003 in Deutschland bei ca.
 1,1 Fällen pro 100.000 Einwohner 
\begin_inset LatexCommand \cite{schrauder:2005}

\end_inset

.
 Im Jahr 2004 sind insgesamt 603 Fälle von Meningokokkenerkrankungen gemeldet
 worden.
 Zu den verursachten Krankheiten zählen Hirnhautentzündung und Blutvergiftung
 (Sepsis).
 5-10% der Erkrankungsfälle enden tödlich.
\end_layout

\begin_layout Standard
Säuglinge und Kleinkinder bis zwei Jahren sind am häufigsten von der Krankheit
 betroffen.
 Gegen die häufige Serogruppe B gibt es bis heute noch keinen generell verfügbar
en Impfstoff.
 Die Krankheit kann in Einzelfällen von den ersten Anzeichen bis zum Tod
 innerhalb eines Tages verlaufen.
 Diese Tatsachen erfordern bei Meningokokken trotz der geringen Inzidenz
 eine sorgfältige Überwachung.
\end_layout

\begin_layout Subsection
Arbeit des Nationalen Referenzzentrums für Meningokokken
\end_layout

\begin_layout Standard
Das Nationale Referenzzentrum für Meningokokken (NRZM) überwacht im Auftrag
 des Robert Koch-Instituts Meningokokkenerkrankungen in Deutschland.
 Es erfüllt die unter 
\begin_inset LatexCommand \ref{sub:Epidemiologie-in-Deutschland}

\end_inset

 angegebenen Aufgaben.
 Dazu gehört ein großes Leistungsangebot in der molekularen Epidemiologie.
 Zwei Bereiche aus der Arbeit des Referenzzentrums werden im Folgenden näher
 beschrieben.
\end_layout

\begin_layout Subsubsection
Typisierung von Meningokokken-Erkrankungsfällen
\end_layout

\begin_layout Standard
Das NRZM führt mehrere verschiedene Typisierungsarten bei eingesandten Meningoko
kkenstämmen durch:
\end_layout

\begin_layout Itemize

\emph on
serologische Typisierung
\emph default

\newline
Bestimmung der Serogruppe (definiert durch die Zuckerreste der Polysaccharidkaps
el).
\end_layout

\begin_layout Itemize

\emph on
molekularbiologische Typisierung
\end_layout

\begin_deeper
\begin_layout Itemize
mittels PorA- und FetA-Sequenzierung 
\newline
Typisierungsverfahren, das zunehmend
 für die serologische Bestimmung von einem Serotyp und Serosubtyp eingesetzt
 wird.
 Diese Werte erlauben eine viel feinere Typisierung als die Serogruppe allein.
\end_layout

\begin_layout Itemize
mittels Multi-Locus-Sequenz-Typisierung (MLST) ausgewählter Isolate
\end_layout

\end_deeper
\begin_layout Standard
Die Mitarbeiter des Referenzzentrums bestimmen mittels der PorA- und FetA-Sequen
zierung einen genauen Typ für jede eingesandte Probe.
 Die Nomenklatur benennt diesen mit der Zeichenkette 
\emph on
{Serogruppe}:P1.{PorA}:F{FetA}
\emph default
.
 Der so genannte Feintyp identifiziert einen bestimmten Meningokokkenerreger
 eindeutig.
 Die Feintypisierung hilft unter anderem bei folgenden Aufgaben:
\end_layout

\begin_layout Itemize

\emph on
Erfassung der epidemiologischen Dynamik auf 
\newline
nationaler und internationaler
 Ebene
\emph default

\newline
Meningokokken verändern sich nur marginal bei einer Übertragung von Mensch
 zu Mensch.
 Wenn sich Person A an Person B ansteckt, tragen beide den selben Feintyp
 in sich.
 Hierdurch ist es möglich, dass einzelne Feintypen zu einem Zeitpunkt örtlich
 verstärkt auftreten oder komplett verschwinden.
\end_layout

\begin_layout Itemize

\emph on
Analyse von epidemiologisch verknüpften Fällen (Ausbruchsanalyse)
\emph default

\newline
Person A und B werden aufgrund eines Verdachts auf Meningokokken-Meningitis
 zur stationären Behandlung in ein Kreiskrankenhaus eingewiesen.
 Dort entnommene Proben werden an das NRZM geschickt, um anhand des Feintyps
 feststellen zu lassen, ob die beiden Fälle in einem Zusammenhang stehen.
\end_layout

\begin_layout Itemize

\emph on
Ermittlung von Daten für die Entwicklung von Impfstoffen
\emph default

\newline
Die Hersteller von Impfstoffen benötigen genaue Informationen über die Oberfläch
enproteine eines Erregers.
 Die Feintypisierung liefert dieses Wissen.
\end_layout

\begin_layout Subsubsection
Computergestützte Clusteridentifizierung am NRZM
\end_layout

\begin_layout Standard
Die Epidemiologen des Referenzzentrums nutzen die Feintypisierungsergebnisse
 zu weiteren statistischen Analysen.
 Bei der computergestützten Clusteridentifizierung handelt es sich um ein
 Verfahren, das mittels einer von Kulldorff et al.
 
\begin_inset LatexCommand \cite{kulldorff:1997}

\end_inset

 entwickelten Software durchgeführt wird.
 Das Programm SaTScan 
\begin_inset LatexCommand \cite{kulldorff_satscan:2005}

\end_inset

 kann anhand der spatio-temporalen
\begin_inset Foot
status collapsed

\begin_layout Standard
raum-zeitlichen
\end_layout

\end_inset

 Informationen von Ereignissen erkennen, ob diese in einem Zusammenhang
 stehen (siehe 
\begin_inset LatexCommand \ref{sec:Identifizierung-von-Clustern}

\end_inset

).
 
\end_layout

\begin_layout Standard
Bezogen auf die Feintypen erkennt die Clusteridentifizierung, im Gegensatz
 zu der im vorherigen Abschnitt genannten Ausbruchsanalyse, selbstständig
 zusammengehörige Fälle eines Feintyps.
 Das NRZM entdeckt damit frühzeitig potenzielle Ausbrüche von Meningokokken-Erkr
ankungen.
 Anhand dieser Information sind die Landesbehörden und das Robert Koch-Institut
 in der Lage, z.B.
 Impfempfehlungen für die betroffenen Landkreise auszusprechen.
\end_layout

\begin_layout Subsubsection
Informationsfluss und Arbeitsabläufe
\end_layout

\begin_layout Standard
Der Informationsfluss und die Arbeitsabläufe im NRZM sind in Abbildung 
\begin_inset LatexCommand \ref{fig:Informationsfluss-im-NRZM}

\end_inset

 schematisch dargestellt.
 
\end_layout

\begin_layout Enumerate
Ein Krankenhaus oder Primärlabor schickt eine Probe an das Referenzzentrum.
\end_layout

\begin_layout Enumerate
Ein Mitarbeiter erfasst die Probe mit Eingangsdatum und weiteren Patientendaten
 (u.
 a.
 Alter, Initialen, Wohnort) in einer Access-Datenbank.
\end_layout

\begin_layout Enumerate
Das Labor führt die oben genannten Typisierungsmethoden durch.
 Der Datenbankeintrag einer Probe wird um den Feintyp ergänzt.
\end_layout

\begin_layout Enumerate
Das Referenzzentrum schickt einen Befund mit allen Informationen zu dem
 gefundenen Meningokokken-Stamm an den Auftraggeber und das zuständige Gesundhei
tsamt.
\end_layout

\begin_layout Enumerate
Die Epidemiologen führen spatio-temporale Clusteridentifizierungen auf Basis
 der gefundenen Feintypen durch und
\end_layout

\begin_layout Enumerate
erzeugen mit Regiograph
\begin_inset Foot
status collapsed

\begin_layout Standard
Desktop GIS-Anwendung von der Firma GfK MACON
\end_layout

\end_inset

 Clusterkarten.
\end_layout

\begin_layout Enumerate
Das RKI erhält diese Karten zusammen mit einem Clusterbericht und stimmt
 evtl.
 zu treffende Maßnahmen mit den Landesbehörden und dem Gesundheitsamt ab.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/nrzm_ablauf_alt.eps
	lyxscale 50
	width 100col%
	keepAspectRatio
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Informationsfluss-im-NRZM}

\end_inset

Bisheriger Informationsfluss bei der Typisierung von eingesandten Proben
 im NRZM
\end_layout

\end_inset


\end_layout

\begin_layout Section
Geografische Informationssysteme
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "90col%"
special "none"
height "1pt"
height_special "totalheight"
status open

\begin_layout Subparagraph
Definition
\end_layout

\begin_layout Standard
Ein Geografisches Informationssystem (GIS) ist ein Computersystem (Hard-
 und Software).
 Es hilft dem Benutzer dabei, Daten mit räumlichem Bezug zu verwalten und
 zueinander in Beziehung zu setzen.
 GIS kann als eine Art von einem räumlichen Entscheidungsfindungssystem
 beschrieben werden.
 (Heywood at al.
 
\begin_inset LatexCommand \cite{heywood:99}

\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Das erste landesweite Geoinformationssystem hat die Firma ESRI
\begin_inset Foot
status collapsed

\begin_layout Standard
Environmental Systems Research Institute
\end_layout

\end_inset

 1973 
\begin_inset LatexCommand \cite{gss07:05}

\end_inset

 unter dem Titel 
\begin_inset Quotes eld
\end_inset

The Maryland Automated Geographic System
\begin_inset Quotes erd
\end_inset

 erstellt.
 Seit dem gewinnt GIS in vielen Behörden, Firmen und auch bei Privatpersonen
 immer mehr an Bedeutung.
 
\end_layout

\begin_layout Standard
So hat zum Beispiel die Gemeinde Oerlenbach bei Bad Kissingen im Jahr 2005
 eine gesplittete Abwassergebühr eingeführt.
 Mitarbeiter teilen mittels Orthofotos
\begin_inset Foot
status collapsed

\begin_layout Standard
verzerrungsfreie und maßstabsgetreue Luftbildaufnahmen
\end_layout

\end_inset

 und einer GIS-Software alle Grundstücke der Gemeinde in die verschiedenen
 Versiegelungsarten (Dachflächen, Betonflächen, Hofpflaster, etc.) auf.
 Die Abwassergebühr errechnet sich u.
 a.
 nach dem Versiegelungsgrad und somit nach der Menge von Regenwasser, das
 in die Kanalisation gelangt.
 Ohne die Hilfe eines Geoinformationssystems wäre diese per Gerichtsurteil
 vorgeschriebene Maßnahme mit erheblich mehr Aufwand verbunden gewesen.
\end_layout

\begin_layout Subsection
Räumliches Datenmodell
\end_layout

\begin_layout Standard
Der Benutzer eines Geoinformationssystems möchte bestimmte Bereiche der
 Realität modellieren.
 Das Modell soll so einfach wie möglich und so komplex wie nötig sein.
 GI-Systeme wandeln mit verschiedenen Methoden die vorhandenen Daten in
 digitale Karten um.
 
\end_layout

\begin_layout Subsubsection
\begin_inset LatexCommand \label{sub:Grundlegende-Geo-Komponenten}

\end_inset

Grundlegende Komponenten zur Abbildung der Realität
\end_layout

\begin_layout Standard
GI-Systeme bilden die Realität mittels einfacher geometrischer Elemente
 ab:
\end_layout

\begin_layout Itemize

\emph on
Punkte
\emph default

\newline
Punkte werden, abhängig von dem benötigten Detailgrad der Karte, für unterschied
liche Informationen eingesetzt.
 Ein Stadtplan verwendet sie beispielsweise, um die Position einer Touristeninfo
rmation zu markieren.
 Auf Landkarten können andererseits ganze Städte nur anhand ihrer Mittelpunktkoo
rdinaten platziert sein.
 
\end_layout

\begin_layout Itemize

\emph on
Linien
\emph default

\newline
Linien repräsentieren eine geordnete Menge von Punkten.
 Flüsse oder Straßen sind in GI-Systemen oft in dieser Form gespeichert.
\end_layout

\begin_layout Itemize

\emph on
Flächen
\emph default

\newline
Flächen können zum Beispiel Landesgrenzen darstellen.
 GI-Systeme speichern sie als Polygone.
 Wenn mehrere Einzelflächen eine Einheit bilden (z.B.
 ein Staat und seine Inseln), werden diese als Gruppe von Polygonen gespeichert.
\end_layout

\begin_layout Itemize

\emph on
Rasterdaten
\emph default

\newline
Rasterdaten sind spalten- und zeilenweise in einzelne Bildpunkte aufgeteilte
 Vektordaten.
 Im Vergleich zu den obigen punktgenauen geometrischen Daten gehen Informationen
 verloren (siehe Abbildung 
\begin_inset LatexCommand \ref{fig:Polygons-vs-Raster}

\end_inset

).
 Eine nützliche Einsatzmöglichkeit von Rasterdaten in Geoinformationssystemen
 sind Luft- oder Satellitenbilder.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/vektor_vs_raster.eps
	lyxscale 30
	width 30page%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Polygons-vs-Raster}

\end_inset

Vergleich eines Polygons in Vektor- und Rasterdarstellung
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Koordinaten und Kartenprojektionen
\end_layout

\begin_layout Standard
Jeder Punkt auf der Erdoberfläche und somit jede Koordinate in einem GIS
 ist exakt durch die geografische Länge und Breite definiert.
 Die Erde ist in 360 Längenkreise und 180 Breitenkreise aufgeteilt.
 Die Länge definiert sich dabei als Winkelmaß bis je 180° östlich (E) oder
 westlich (W) des Nullmeridians, der durch die Sternwarte von Greenwich
 verläuft; die Breite bis je 90° nördlich (N) oder südlich (S) des Äquators.
 Eine bestimmte Position auf dem Globus lässt sich am einfachsten mit Hilfe
 von geografischen Koordinaten beschreiben.
\end_layout

\begin_layout Standard
GI-Systeme stehen vor der Aufgabe, die gekrümmte Erdoberfläche auf eine
 flache Karte zu übertragen (Kartenprojektion).
 Dieser Vorgang lässt sich nach Heywood et al.
 am einfachsten folgendermaßen veranschaulichen: 
\end_layout

\begin_layout Standard
Ein Globus ist am Nordpol an der Decke eines Raumes aufgehängt und von innen
 beleuchtet.
 Das Licht projiziert ein Bild der Erdoberfläche auf die Wände.
 Das Experiment wird mit drei verschiedenen Räumen durchgeführt.
 Einer ist quadratisch (flache Wände), einer zylinderförmig (runde Wände)
 und der dritte kegelförmig (vergleichbar mit einem Tipi).
 Die Wände lassen sich theoretisch auf eine Fläche ausbreiten.
 Die resultierenden Karten haben, abhängig vom der Form des Raumes, verschiedene
 Eigenschaften (siehe Abbildung 
\begin_inset LatexCommand \ref{fig:Projektionen}

\end_inset

).
\end_layout

\begin_layout Subsubsection
Vergleich der grundlegenden Kartenprojektionen
\end_layout

\begin_layout Itemize
Zylinderprojektion
\end_layout

\begin_deeper
\begin_layout Itemize
kontinuierliche Abbildung der Erde
\end_layout

\begin_layout Itemize
die dem Zylinder am nächsten liegenden Punkte werden unverzerrt abgebildet
\end_layout

\begin_layout Itemize
gut geeignet, um Karten von kleinen Gebieten zu erzeugen
\end_layout

\begin_layout Itemize
Flächen bleiben weit gehend erhalten
\end_layout

\end_deeper
\begin_layout Itemize
Azimutalprojektion (Ebene)
\end_layout

\begin_deeper
\begin_layout Itemize
nur ein Teil der Erdoberfläche (maximal die Hälfte) ist sichtbar
\end_layout

\begin_layout Itemize
Verzerrungen an allen vier Seiten
\end_layout

\begin_layout Itemize
Abstände bleiben weit gehend erhalten
\end_layout

\end_deeper
\begin_layout Itemize
Kegelprojektion
\end_layout

\begin_deeper
\begin_layout Itemize
Flächen stimmen nicht mehr überein
\end_layout

\begin_layout Itemize
die Abstände im unteren Bereich des Bildes sind stark verzerrt
\end_layout

\begin_layout Itemize
Größenverhältnisse bleiben weit gehend erhalten
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Float figure
placement b
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/zylinderprojektion.jpg
	lyxscale 50
	height 20page%
	keepAspectRatio

\end_inset


\begin_inset Graphics
	filename figures/azimutalprojektion.jpg
	lyxscale 50
	height 20page%
	keepAspectRatio

\end_inset


\begin_inset Graphics
	filename figures/kegelprojektion.jpg
	lyxscale 50
	height 20page%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Projektionen}

\end_inset

Beispiele für das erzeugte Bild der Erdoberfläche bei einer Zylinder-, Azimutal-
 oder Kegelprojektion 
\begin_inset LatexCommand \cite{kuehn:2005}

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Viele Kartografen und Mathematiker haben sich dem Thema Kartenprojektion
 angenommen und die oben genannten Projektionsarten gemäß bestimmter Anforderung
en umgesetzt.
\end_layout

\begin_layout Subsubsection
Mercator-Projektion
\end_layout

\begin_layout Standard
Diese Projektion wurde von Gerhard Mercator 1569 vorgestellt.
 Sie ist winkeltreu und wird häufig zur Navigation in der Schifffahrt eingesetzt.
 Die Mercator-Projektion gehört zu den Zylinderprojektionen.
 Der Zylinder berührt die Erde entlang des Äquators.
 Seefahrer haben durch die Winkeltreue den Vorteil, dass Kurse mit konstanter
 Richtung als gerade Linien auf der Karte erscheinen.
 Ein Nachteil dieser Projektion ist die starke Größenverzerrung in Richtung
 der Pole.
 Grönland (2,2 Mio.
 km²) erscheint beispielsweise in Abbildung 
\begin_inset LatexCommand \ref{fig:Mercator-Projektion}

\end_inset

 größer als Südamerika (17,8 Mio.
 km²).
\end_layout

\begin_layout Subsubsection
Traversale Mercator-Projektion
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
width "50col%"
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/mercator.png
	lyxscale 30
	width 30col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Mercator-Projektion}

\end_inset

Mercator-Projektion 
\begin_inset LatexCommand \cite{kuehn:2005}

\end_inset


\end_layout

\end_inset

Carl Friedrich Gauß und Johann Heinrich Louis Krüger haben diese Projektion
 entwickelt.
 Sie wird auch als Gauß-Krüger-Projektion bezeichnet und ist eine konforme,
 d.h.
 in kleinsten Bereichen winkeltreue, Abbildung.
 
\end_layout

\begin_layout Standard
Im Gegensatz zur Mercatorprojektion ist der die Erde umgebende Zylinder
 hier um 90° gedreht und berührt somit einen Längenkreis.
 Weiterhin bildet Gauß-Krüger die Erde nicht im Ganzen, sondern streifenweise
 ab.
 
\end_layout

\begin_layout Standard
Die Längenkreise, an denen der Zylinder die Erde berührt, werden Bezugsmeridiane
 genannt.
 Dort ist die Projektion verzerrungsfrei.
 Viele Koordinatensysteme verwenden die traversale Mercator-Projektion nach
 diesem Prinzip.
 Die zwei wichtigsten für Deutschland sind:
\end_layout

\begin_layout Itemize

\emph on
Gauß-Krüger-Koordinatensystem
\emph default

\newline
Das Gauß-Krüger-Koordinatensystem teilt die Erde in 3° breite Meridianstreifen
 auf.
 Jeder Streifen wird anhand seines Bezugsmeridians, der genau in der Mitte
 des Streifens liegt, von eins bis sieben durchnummeriert.
 Die sieben verwendeten Längenkreise sind 3°E, 6°E, 9°E, 12°E, 15°E, 18°E
 und 21°E 
\begin_inset LatexCommand \cite{panitzki:05}

\end_inset

.
 Dieses Koordinatensystem bildet nur ein Teilgebiet der nördlichen Hemisphäre
 ab.
 Deutschland setzt Gauß-Krüger seit 1927 als amtliche Vermessungsmethode
 ein.
 Zur Zeit findet eine Umstellung auf das UTM-System statt.
\end_layout

\begin_layout Itemize

\emph on
UTM-Koordinatensystem
\emph default

\newline
UTM steht für den englischen Ausdruck 
\begin_inset Quotes eld
\end_inset

Universal Transverse Mercator
\begin_inset Quotes erd
\end_inset

.
 Im Gegensatz zu dem Gauß-Krüger-System setzt das UTM-System 6° breite Meridians
treifen ein.
 Das ergibt bei 360 Längenkreisen 60 Bezugsmeridiane.
 Diese überspannen in der geografischen Breite ein Gebiet von 80°S bis 84°N.
 Bis auf die Polregionen wird die ganze Welt abgedeckt.
 Jeder Bezugsmeridian wird wieder nummeriert (Zone).
 Deutschland liegt in den Zonen 32 und 33.
\end_layout

\begin_layout Standard
Durch die Verwendung von Koordinatensystemen lassen sich Punkte auf der
 Erdoberfläche in einem rechtwinkligem Gitter markieren.
 Dies erleichtert, im Gegensatz zu den geografischen Koordinaten, das Eintragen
 und Ausmessen von Positionen.
\end_layout

\begin_layout Subsection
Topologie
\end_layout

\begin_layout Standard
Topologie beschreibt die Beziehung von geometrischen Informationen zueinander.
 Diese ist - unabhängig vom Koordinatensystem - immer gleich.
 Folgende Beispiele sind topologische Fakten:
\end_layout

\begin_layout Itemize
Würzburg liegt in Unterfranken
\end_layout

\begin_layout Itemize
Unterfranken liegt in Bayern
\end_layout

\begin_layout Itemize
Hessen grenzt an Unterfranken
\end_layout

\begin_layout Itemize
Der Main mündet in den Rhein (ist mit ihm verbunden)
\end_layout

\begin_layout Itemize
Berlin liegt nicht in Bayern
\end_layout

\begin_layout Standard
Topologie spielt in GIS eine große Rolle.
 Viele Fragen lassen sich nur mit Hilfe dieser Beziehungen beantworten.
 Routenplanung wäre zum Beispiel unmöglich, wenn das System nicht erkennen
 könnte, welche Straßen miteinander verbunden sind.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sec:Identifizierung-von-Clustern}

\end_inset

Einsatz von Geoinformationen und Statistik in der Epidemiologie
\end_layout

\begin_layout Standard
Für die Epidemiologie sind Ort und Zeit neben den Daten zu dem Krankheitserreger
 und der Person (Alter, Geschlecht, etc.) die wichtigsten Zusatzinformationen
 zur Aufdeckung von Gesundheitsproblemen in der Bevölkerung.
\end_layout

\begin_layout Standard
Chung et al.
 untersuchten, inwieweit GI-Systeme in Verbindung mit statistischer Datenanalyse
 in Studien der Epidemiologie und des öffentlichen Gesundheitswesens Anwendung
 finden 
\begin_inset LatexCommand \cite{chung:2004}

\end_inset

.
 Die Hauptaufgabe der Geoinformationssysteme ist dabei die Visualisierung
 der Ergebnisse.
 Die statistische Analyse führen in den betrachteten Beispielen oft eigenständig
e, außerhalb des GI-Systems stehenden Werkzeuge durch.
 
\end_layout

\begin_layout Subsubsection
Räumliche Analysen
\end_layout

\begin_layout Standard
Die räumliche Analyse nutzt zur Bewertung von Gesundheitsrisiken Standard-GIS-Op
erationen.
 Diese führen unter anderem auf der Topologie basierende Abfragen durch.
 Der Anwender muss das Ergebnis selbst bewerten.
\end_layout

\begin_layout Standard
Eine bei Chung et al.
 genannte Studie analysiert beispielsweise mittels einer auf Verkehrswege
 spezialisierten GIS-Software die Zeiten für Krankentransporte.
 Sie errechnet mittels GIS den schnellsten Weg von allen Städten zum jeweils
 nächsten Krankenhaus.
 Anhand dieser Zeiten schätzt eine separate Statistiksoftware u.
 a.
 die Wahrscheinlichkeit für das Versterben eines Patienten im Krankenhaus
 ab.
\end_layout

\begin_layout Subsubsection
Visualisierung von räumlicher Unsicherheit
\end_layout

\begin_layout Standard
Insbesondere bei der Darstellung von Punktdaten in einem GIS gehen bestimmte
 Informationen verloren.
 Durch die Auflösung der Datenerhebung (Postleitzahlen) wird beispielsweise
 die Position eines Erkrankungsfalles genau auf eine Koordinate diskretisiert.
\end_layout

\begin_layout Standard
So genannte 
\begin_inset Quotes eld
\end_inset

kernel-density maps
\begin_inset Quotes erd
\end_inset

 erlauben eine bessere Darstellung dieser diskreten Daten, indem Punktinformatio
nen in unregelmäßige Flächen umgewandelt werden.
 Deren Form und Einfärbung wird durch die Nachbarschaften und Dichte der
 Punkte in einem Bereich beeinflusst (siehe auch Abbildung 
\begin_inset LatexCommand \vref{fig:Kernel}

\end_inset

).
 
\end_layout

\begin_layout Standard
Diese Art der Darstellung zieht damit die Unsicherheit mit in Betracht,
 dass ein Erkrankungsfall beispielsweise in einer Stadt nicht genau an der
 geografischen Länge und Breite deren Zentrums aufgetreten ist.
 Norström et al.
 visualisieren mittels dieser 
\begin_inset Quotes eld
\end_inset

kernel-density maps
\begin_inset Quotes erd
\end_inset

 die Entwicklung eines Erkrankungsausbruchs unter norwegischen Rinderherden
 
\begin_inset LatexCommand \cite{norstrom:2000}

\end_inset

.
 Die Karten von aufeinander folgenden Zeiträumen zeigen dabei sehr anschaulich,
 wie sich das Zentrum der Krankheit über administrative Grenzen hinweg 
\begin_inset Quotes eld
\end_inset

bewegt
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsubsection
Clusteridentifizierung mit der räumlichen 
\begin_inset Quotes eld
\end_inset

Scan Statistic
\begin_inset Quotes erd
\end_inset

 nach Kulldorff
\end_layout

\begin_layout Standard
Die Methode der räumlichen 
\begin_inset Quotes eld
\end_inset

Scan Statistic
\begin_inset Quotes erd
\end_inset

 von Kulldorff 
\begin_inset LatexCommand \cite{kulldorff:1997}

\end_inset

 kann feststellen, ob Häufungen von punktuellen Ereignissen durch Zufall
 verursacht sind oder nicht.
 
\end_layout

\begin_layout Standard
Dazu stellt sie die maximale Anzahl von Ereignissen fest, die in einem über
 die Karte bewegten räumlichen Fenster variabler, nach oben begrenzter,
 Größe liegen.
 Das in der Epidemiologie eingesetzte kreisförmige Fenster nimmt dabei nur
 Positionen ein, die vorher definiert wurden und von denen die Bevölkerungsdaten
 bekannt sind.
 Das sind beispielsweise die Zentren von Landkreisen.
\end_layout

\begin_layout Standard
Für die Fallverteilung im Fenster mit der maximalen Anzahl wird die Nullhypothes
e aufgestellt, dass sie einer bestimmten Wahrscheinlichkeitsverteilung folgt
 (Monte-Carlo-Methode).
 Der aus mehreren Wiederholungen dieses Versuchs hervorgehende P-Wert drückt
 die Wahrscheinlichkeit aus, dass die beobachtete Verteilung von Ereignissen
 reiner Zufall war.
 
\end_layout

\begin_layout Standard
Kann beispielsweise bei 999 Wiederholungen nur einmal die vorgefundene geografis
che Konstellation von Erkrankungsfällen mittels einer Poisson-Verteilung
 angenähert werden, beträgt der P-Wert 0,001.
 Die beobachteten Ereignisse sind also nur mit einer Wahrscheinlichkeit
 von einem Promille durch Zufall entstanden.
 Die Methode von Kulldorff hat hier einen sehr wahrscheinlichen räumlichen
 Cluster entdeckt.
\end_layout

\begin_layout Subsubsection
Clusteridentifizierung mit der spatio-temporalen 
\begin_inset Quotes eld
\end_inset

Scan Statistic
\begin_inset Quotes erd
\end_inset

 nach Kulldorff
\end_layout

\begin_layout Standard
Die Epidemiologie nutzt zur Identifizierung von Clustern oft nicht nur die
 räumliche, sondern auch die zeitliche Dimension.
 Kulldorff hat auch für diese Aufgabe eine statistische Methode entwickelt
 
\begin_inset LatexCommand \cite{kulldorff:2001}

\end_inset

.
\end_layout

\begin_layout Standard
Das Grundprinzip gleicht dem der räumlichen 
\begin_inset Quotes eld
\end_inset

Scan Statistic
\begin_inset Quotes erd
\end_inset

.
 Allerdings handelt es sich bei dem bewegten Fenster nicht um einen zweidimensio
nalen Kreis, sondern um einen Zylinder.
 Die dritte Dimension drückt dabei aus, welche Zeit zwischen zwei Ereignissen
 liegt.
 Durch Kombination aller möglichen Kreisradien und Zylinderhöhen stellt
 die Methode fest, ob hier eine Konstellation aufgetreten ist, die mit bestimmte
r Wahrscheinlichkeit kein Zufall sein kann.
\end_layout

\begin_layout Standard
Ein erfolgreicher Fund bezeichnet dann einen spatio-temporalen Cluster.
 Dieser hat eine bestimmte Ausdehnung (Radius) und ein Start- und Enddatum.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\begin_inset LatexCommand \label{cha:Definition-der-Anforderungen}

\end_inset

Definition der Anforderungen
\end_layout

\begin_layout Standard
Das vorliegende Kapitel gibt das mit dem Nationalen Referenzzentrum für
 Meningokokken und der Firma Ridom GmbH abgestimmte Pflichtenheft wieder.
 Es behandelt alle Kriterien, die das Softwaresystem erfüllen muss, die
 Einsatzbereiche, Daten, Funktionen und weitere Anforderungen.
 Das System ist während der Entwicklung auf zwei getrennte Rechner aufgeteilt.
 Diese werden im Folgenden als 
\series bold
Daten-/Kartenserver
\series default
 und 
\series bold
Webserver
\series default
 unterschieden.
 
\end_layout

\begin_layout Standard
Der Daten- und Kartenserver speichert alle Daten und führt die GIS-spezifischen
 Aufgaben, wie z.B.
 die Kartenerzeugung aus.
 Der Webserver liefert die Website und damit vorrangig den Kartenbetrachter
 an den Benutzer.
\end_layout

\begin_layout Section
Zielbestimmungen 
\end_layout

\begin_layout Subsection
Musskriterien
\end_layout

\begin_layout Subsubsection
Datenbankschnittstelle zur Entgegennahme von Meldedaten
\end_layout

\begin_layout Standard
Die von den Laboratorien erzeugten Daten müssen auf den Daten-Server übertragen
 werden.
 Das Labor schickt die Typisierungsdaten in einem vereinbarten Format an
 den Server.
 Auf diesem läuft eine Anwendung, die als Schnittstelle zu dem Labor dient.
 Sie stimmt die ankommenden Daten auf das einheitliche interne Datenbankformat
 ab.
 Hierdurch werden die Daten frühzeitig in eine normierte Form gebracht,
 die es erlaubt, das Programm einfach an andere Laboratorien oder Krankheitserre
ger anzupassen.
\end_layout

\begin_layout Subsubsection
Webserver mit JSP
\end_layout

\begin_layout Standard
Die Website, die dem Benutzer die Daten präsentiert, wird dynamisch mit
 JavaServer Pages (JSP) generiert.
 Das Interface sollte leicht zu erfassen sein.
\end_layout

\begin_layout Subsubsection
Datenschutz auf dem Webserver
\end_layout

\begin_layout Standard
Aus Gründen des Datenschutzes muss auf dem Webserver eine Zugriffsregelung
 möglich sein.
 Von Seiten des RKI bedeutet Datenschutz, dass es nicht möglich sein darf,
 weniger als vier komplett typisierte Erkrankungen zu einem Landkreis zuordnen
 zu können.
 Die öffentlich zugänglichen Bereiche müssen so ausgelegt sein, das diese
 Vorgabe immer erfüllt ist.
\end_layout

\begin_layout Subsubsection
Dynamische serverseitige Erzeugung von Karten
\end_layout

\begin_layout Standard
Auf dem Kartenserver läuft eine Anwendung, die auf Anfrage des Webservers
 dynamisch epidemiologische Karten in Form von Bilddateien generiert.
 Das soll für verschiedene Auflösungen (z.B.
 Landkreis, Bundesland etc.) geschehen.
 Die zugrunde liegenden geografischen Daten sind in der Datenbank gespeichert.
\end_layout

\begin_layout Subsubsection
Statistische Analyse
\end_layout

\begin_layout Standard
Zur Clusterdetektion muss auf dem Datenserver eine statistische Analyse
 der gemeldeten Erkrankungsfälle durchgeführt werden.
 Das Labor muss grundlegende Parameter dieser Analyse anpassen können.
\end_layout

\begin_layout Subsection
Wunschkriterien 
\end_layout

\begin_layout Subsubsection
Keine festgelegten Auflösungsebenen
\end_layout

\begin_layout Standard
Um das Produkt so universell wie möglich zu halten, wäre es wünschenswert,
 die unterschiedlichen Kartenauflösungen nicht an speziellen Informationen
 wie z.B.
 Kreisnummern oder Bundesländern zu verankern.
 Bei einem Einsatz in Kliniken sind z.B.
 kleinere Gebiete wie Gebäude und Abteilungen relevant.
 Daher ist es besser, mit Koordinaten und universellen Hierarchien zu arbeiten.
\end_layout

\begin_layout Subsection
Abgrenzungskriterien
\end_layout

\begin_layout Standard
Bei der Software handelt es sich um ein System zur Entscheidungshilfe.
 Sie hat nicht zum Ziel, eine künstliche Intelligenz zu integrieren, die
 eigenmächtig die Signifikanz der erfassten Daten bewertet.
 Das Hauptziel liegt vielmehr in der Kombination aller nötigen Komponenten
 zu einem homogenen und benutzbaren Gesamtsystem.
\end_layout

\begin_layout Section
Produkt-Einsatz
\end_layout

\begin_layout Subsection
Anwendungsbereiche
\end_layout

\begin_layout Standard
Der Anwender möchte mit dem Produkt eine automatisierte Analyse der spatio-tempo
ralen Daten durchführen.
 Die einzige Anforderung an die Daten ist daher, dass sie eine zeitliche
 und örtliche Komponente haben und sich verschiedene Ereignisse unterscheiden
 lassen.
 Ein Webserver soll die Ergebnisse der Analysen einer breit gefächerten
 Personengruppe zugänglich machen.
\end_layout

\begin_layout Subsection
Zielgruppen
\end_layout

\begin_layout Paragraph
\begin_inset Quotes eld
\end_inset

Käufer
\begin_inset Quotes erd
\end_inset

-Zielgruppen
\end_layout

\begin_layout Standard
des Systems sind auf nationaler Ebene Referenzzentren (speziell das NRZM),
 Landes- bzw.
 Bundesgesundheitsbehörden (z.B.
 RKI), Krankenhäuser oder Militär.
 Auch supranationale Behörden wie das ECDC
\begin_inset Foot
status collapsed

\begin_layout Standard
European Centre for Disease Prevention and Control
\end_layout

\end_inset

 gehören zu den potenziellen Zielgruppen.
 Das System ist daher gänzlich in Englisch zu realisieren.
\end_layout

\begin_layout Paragraph
Benutzer-Zielgruppen 
\end_layout

\begin_layout Standard
sind die interessierte Öffentlichkeit, (politische) Entscheidungsträger
 und die Vertreter des öffentlichen Gesundheitsdienstes (Gesundheitsämter
 und RKI).
\end_layout

\begin_layout Subsection
Betriebsbedingungen
\end_layout

\begin_layout Standard
Das Produkt wird komplett serverseitig realisiert und daher nur über die
 Weboberfläche bedient.
 Diese soll rund um die Uhr erreichbar sein.
\end_layout

\begin_layout Section
Produktfunktionen
\end_layout

\begin_layout Description
/F10/ Datenbankmodell zur Speicherung epidemiologischer Daten
\end_layout

\begin_deeper
\begin_layout Standard
Es wird ein Datenbankmodell benötigt, welches so generisch wie möglich gestaltet
 ist.
 Ziel hiervon ist es, das Produkt mit möglichst geringen Anpassungen auch
 für die epidemiologischen Daten anderer Erkrankungen nutzen zu können.
\end_layout

\end_deeper
\begin_layout Description
/F11/ Entgegennahme von Typisierungsergebnisdaten
\end_layout

\begin_deeper
\begin_layout Standard
Die vom Benutzer erzeugten Typisierungsergebnisdaten müssen über eine Schnittste
lle entgegen genommen werden.
 Hierbei ist darauf zu achten, dass ein proprietäres Datenbankformat wie
 beispielsweise Access auf die interne PostgreSQL Datenbank abgebildet wird.
 Das NRZM überträgt die Daten mittels einer CSV
\begin_inset Foot
status collapsed

\begin_layout Standard
Character Separated Values bzw.
 Comma Separated Values
\end_layout

\end_inset

 Datei.
 Unter Linux lassen sich Access Datenquellen nicht direkt nutzen.
\end_layout

\end_deeper
\begin_layout Description
/F12/ Datenschutzaspekte
\end_layout

\begin_deeper
\begin_layout Standard
Neben dem sicheren Transfer der Daten zum Server muss auch gewährleistet
 sein, dass die Datenbank vor unberechtigtem Zugriff ausreichend geschützt
 ist.
\end_layout

\end_deeper
\begin_layout Description
/F20/ Universeller GIS-Service für epidemiologische Daten
\end_layout

\begin_deeper
\begin_layout Standard
Auf Grundlage der Typisierungsergebnisse wird ein GIS-Service entwickelt,
 welcher die epidemiologischen Daten (Person, Ort, Zeit, (Sub)Typen) auf
 Landkarten visualisiert.
 Hierbei ist es wichtig, dass Karten mit verschiedenen Detailgraden (5-stellige
 PLZ, Kreis, Bundesland, Land) angezeigt werden können.
\end_layout

\begin_layout Description
/F21/ Webservice zur Präsentation des Kartenmaterials
\end_layout

\begin_deeper
\begin_layout Standard
Eine Flash-Anwendung präsentiert den Benutzern die erzeugten Landkarten.
 Sie muss klar gestaltet sein, damit die Informationen leicht zugänglich
 sind.
\end_layout

\end_deeper
\begin_layout Description
/F22/ Kartenarten
\end_layout

\begin_deeper
\begin_layout Standard
Es werden verschiedene Arten von Karten benötigt.
 Um die Inzidenz für einzelne Bereiche darzustellen, sollen diese eingefärbt
 werden.
 Für Punktereignisse (Einzelfälle) werden verschiedene Symbole (z.B.
 Kreis, Dreieck, Stern) in unterschiedlichen Farben verwendet.
\end_layout

\begin_layout Standard
Es wäre wünschenswert, Punktinformationen ähnlich wie bei der Arbeitsgemeinschaf
t Influenza 
\begin_inset LatexCommand \cite{agi:05}

\end_inset

 darzustellen.
\end_layout

\end_deeper
\end_deeper
\begin_layout Description
/F30/ Durchführung der spatio-temporalen Analyse mit SaTScan
\end_layout

\begin_deeper
\begin_layout Standard
SaTScan wird als Werkzeug aus Java heraus aufgerufen.
 Es benötigt verschiedene Dateien als Eingabe und schreibt die Ergebnisse
 in Ausgabedateien.
 Das Dateiformat ist vorgegeben.
\end_layout

\begin_layout Description
/F31/ Erstellung von Falldaten zur Übergabe an SaTScan
\end_layout

\begin_deeper
\begin_layout Standard
Über Abfragen aus der Datenbank werden mittels Java die von SaTScan benötigten
 Falldateien erstellt.
 Bei diesen handelt es sich um Textdateien, welche folgende Informationen
 über aufgetretene Fälle enthalten:
\end_layout

\begin_layout Itemize

\emph on
location id
\emph default
 
\newline
eine eindeutige Zahl oder zusammenhängende Zeichenkette, die einen Ort
 kennzeichnet
\end_layout

\begin_layout Itemize

\emph on
#cases
\emph default

\newline
die Anzahl der Fälle, welche zur angegebenen Zeit an diesem Ort aufgetreten
 sind
\end_layout

\begin_layout Itemize

\emph on
time (optional)
\emph default

\newline
eine Zeitangabe in Jahren, Monaten oder Tagen
\end_layout

\begin_layout Itemize

\emph on
covariates (optional)
\emph default

\newline
beliebige Menge an Zusatzwerten, welche die erfassten Fälle näher spezifizieren
 (z.B.
 männlich oder weiblich)
\end_layout

\begin_layout Standard
Bei den Meningokokken-Daten des NRZM muss für jeden Feintyp eine Falldatei
 erstellt werden.
 SaTScan bearbeitet jede dieser Dateien einzeln und erzeugt jeweils Ergebnisdate
ien.
\end_layout

\end_deeper
\begin_layout Description
/F32/ Integration der SaTScan Ergebnisse in die Datenbank
\end_layout

\begin_deeper
\begin_layout Standard
Die Ergebnisdateien enthalten verschiedene berechnete Werte.
 Sie müssen eingelesen und in die Datenbank übertragen werden.
 Ein mögliches Ausgabeformat von SaTScan sind durch Leerzeichen getrennte
 Werte, dieses ist am besten für die Weiterverarbeitung geeignet.
\end_layout

\begin_layout Standard
Listing 
\begin_inset LatexCommand \vref{lst:satscan_out}

\end_inset

 zeigt an einem Beispiel das kommentierte Format, anhand dessen ersichtlich
 ist, welche Werte von SaTScan berechnet werden.
\end_layout

\end_deeper
\begin_layout Description
/F33/W Konfiguration der SaTScan Parameter über eine Webschnittstelle
\end_layout

\begin_deeper
\begin_layout Standard
In der Parameterdatei von SaTScan lassen sich alle Optionen der Analyse
 anpassen.
 Die wichtigsten Parameter sollten sich über ein Web-Interface verändern
 lassen.
\end_layout

\end_deeper
\end_deeper
\begin_layout Description
/F40/ Ausgabe der Ergebnisse der spatio-temporalen Analyse
\end_layout

\begin_deeper
\begin_layout Standard
Die Ergebnisse der Analysen von SaTScan werden mit Hilfe der GIS-Komponente
 auf Landkarten angezeigt.
 Insbesondere muss es möglich sein, die Position und geografische Ausdehnung
 von Clustern zu erkennen und über eine Zeitspanne zu verfolgen.
\end_layout

\begin_layout Description
/F41/W Animationen zur Darstellung von zeitlichen Verläufen
\end_layout

\begin_deeper
\begin_layout Standard
Eine mögliche Art der Präsentation von zeitlichen Entwicklungen der Fallzahlen
 und Clusterpositionen sind Animationen.
 Diese könnten direkt in Flash dargestellt werden.
\end_layout

\end_deeper
\end_deeper
\begin_layout Description
/F50/ Errechnung und geografische Visualisierung von Inzidenzen
\end_layout

\begin_deeper
\begin_layout Standard
Inzidenzen haben eine besondere Bedeutung bei der epidemiologischen Beobachtung.
 Bei dieser Analyse sind größere geografische Regionen interessant (in Deutschla
nd z.B.
 Landkreise und Bundesländer).
 Die Inzidenz soll dynamisch anhand der vorhandenen Fälle errechnet werden.
\end_layout

\end_deeper
\begin_layout Description
/F60/W Dynamische Durchführung anderer, von SaTScan unabhängigen, Abfragen
\end_layout

\begin_deeper
\begin_layout Standard
Neben dem Kartenmaterial sollten auch herkömmliche Statistiken in Form von
 Kreuztabellen auf dem Webserver präsentiert werden.
 Die folgenden Abfragen werden vom NRZM bisher durchgeführt:
\end_layout

\begin_layout Itemize
Feintypverteilung in Deutschland bzw.
 einzelnen Bundesländern
\end_layout

\begin_layout Itemize
Serogruppenverteilung nach Bundesländern bzw.
 Alter
\end_layout

\begin_layout Itemize
Häufigste Feintypen nach Alter
\end_layout

\begin_layout Itemize
Inzidenztabellen 
\end_layout

\end_deeper
\begin_layout Description
/F70/ Alle Daten werden fortschreitend jährlich zusammengefasst
\end_layout

\begin_deeper
\begin_layout Standard
Die SaTScan Analyse wird einmal wöchentlich ausgeführt.
 Sie bezieht rückblickend vom aktuellen Datum alle Erkrankungsfälle der
 letzten 100 Tage mit ein.
 Zusätzlich erfolgt für jedes halbe Jahr eine 
\begin_inset Quotes eld
\end_inset

historische
\begin_inset Quotes erd
\end_inset

 Berechnung.
\end_layout

\end_deeper
\begin_layout Section
Produkt-Daten
\end_layout

\begin_layout Subsection
Eingabedaten
\end_layout

\begin_layout Description
/D10/ epidemiologische Daten
\end_layout

\begin_deeper
\begin_layout Standard
Die epidemiologischen Daten (Person, Ort, Zeit, (Sub)Typen) und weitere
 untergegliederte Werte (Alter, Geschlecht, Koordinate, Erkrankungsbeginn,
 Erreger-Isolationsdatum) müssen in der Datenbank abgelegt und für statistische
 Analysen zugänglich sein.
\end_layout

\end_deeper
\begin_layout Description
/D20/ Populationsdaten
\end_layout

\begin_deeper
\begin_layout Standard
Die Anwendung benötigt Populationsdaten, um die Inzidenzen in /F50/ zu berechnen
 und spatio-temporale Analysen durchführen zu können.
\end_layout

\end_deeper
\begin_layout Description
/D30/ räumliche Daten
\end_layout

\begin_deeper
\begin_layout Standard
PostgreSQL bietet die Möglichkeit, alle grundlegenden geografischen Datenformen
 (siehe Abschnitt 
\begin_inset LatexCommand \ref{sub:Grundlegende-Geo-Komponenten}

\end_inset

) zu speichern.
\end_layout

\end_deeper
\begin_layout Subsection
Ausgabedaten
\end_layout

\begin_layout Description
/D40/ verschiedene Karten
\end_layout

\begin_deeper
\begin_layout Standard
Das System gibt Karten in unterschiedlicher geografischer Auflösung (z.B.
 Kreis, Bundesland etc.) aus.
 Epidemiologische Daten sollen in verschiedener Weise visualisiert werden
 (siehe /F22/).
 Bei den Karten sind ggf.
 die Lizenzbestimmungen der Kartenhersteller zu berücksichtigen.
\end_layout

\end_deeper
\begin_layout Description
/D50/ errechnete Inzidenzen
\end_layout

\begin_layout Description
/D60/ alle Ergebnisse aus der statistischen Analyse von SaTScan
\end_layout

\begin_layout Section
Produkt-Leistungen
\end_layout

\begin_layout Description
/L10/ wöchentliche Batch-Prozessierungen der spatio-temporalen Analysen
\end_layout

\begin_layout Description
/L20/ Die Ausgabe von dynamischen Abfrageergebnissen bzw.
 Landkarten auf dem Webserver sollte so schnell wie möglich erfolgen.
 
\end_layout

\begin_layout Section
Qualitätsanforderungen
\end_layout

\begin_layout Standard
Tabelle 
\begin_inset LatexCommand \ref{tab:Geforderte-Produktqualität}

\end_inset

 definiert die Anforderungen an die Produktqualität in den Kategorien Funktional
ität, Zuverlässigkeit, Benutzbarkeit, Effizienz, Änderbarkeit und Übertragbarkei
t.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="5">
<features>
<column alignment="left" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Produktqualität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
sehr gut
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
gut
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
normal
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
irrelevant
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Funktionalität
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Zuverlässigkeit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Benutzbarkeit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Effizienz
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Änderbarkeit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Übertragbarkeit
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
X
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Geforderte-Produktqualität}

\end_inset

Geforderte Produktqualität nach Kategorien
\end_layout

\end_inset


\end_layout

\begin_layout Section
Technische Produktumgebung
\end_layout

\begin_layout Standard
Dieser Abschnitt beschreibt die technischen Voraussetzungen zum Einsatz
 des Softwaresystems 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

.
 Wie in diesem Kapitel eingangs erwähnt, wird hier zwischen dem Daten-/Kartenser
ver und Webserver unterschieden.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sec:Hardware-Umgebung}

\end_inset

Hardware-Umgebung
\end_layout

\begin_layout Standard
Es ist schwierig, die Anforderungen an die Hardware für die jeweiligen Server
 in konkreten Zahlen zu bestimmen.
 Gerade im Serverbetrieb hat die Anzahl der simultanen Anfragen einen entscheide
nden Einfluss auf die benötigte Leistung bzw.
 Speicherausstattung.
 Die geografischen Abfragen und die Bilderzeugung auf dem Kartenserver,
 erfordern grundsätzlich eine höhere Rechenleistung als die Auslieferung
 der Daten durch den Webserver.
\end_layout

\begin_layout Standard
Die nachfolgende Übersicht stellt eine mögliche Konfiguration dar:
\end_layout

\begin_layout Subsubsection
Daten- und Kartenserver
\end_layout

\begin_layout Itemize
Minimales System
\end_layout

\begin_deeper
\begin_layout Itemize
Prozessor der Intel Pentium/Celeron-Produktfamilie, der AMD Athlon/Duron-Produkt
familie oder kompatible mit 2 GHz
\end_layout

\begin_layout Itemize
512 MB Arbeitsspeicher
\end_layout

\end_deeper
\begin_layout Itemize
Empfohlenes System
\end_layout

\begin_deeper
\begin_layout Itemize
Prozessor der Intel Pentium/Celeron-Produktfamilie, der AMD Athlon/Duron-Produkt
familie oder kompatible mit 3 GHz
\end_layout

\begin_layout Itemize
1 GB Arbeitsspeicher
\end_layout

\end_deeper
\begin_layout Subsubsection
Webserver
\end_layout

\begin_layout Itemize
Minimales System
\end_layout

\begin_deeper
\begin_layout Itemize
Prozessor der Intel Pentium/Celeron-Produktfamilie, der AMD Athlon/Duron-Produkt
familie oder kompatible mit 800 MHz
\end_layout

\begin_layout Itemize
256 MB Arbeitsspeicher
\end_layout

\end_deeper
\begin_layout Itemize
Empfohlenes System
\end_layout

\begin_deeper
\begin_layout Itemize
Prozessor der Intel Pentium/Celeron-Produktfamilie, der AMD Athlon/Duron-Produkt
familie oder kompatible mit 2 GHz
\end_layout

\begin_layout Itemize
512 MB Arbeitsspeicher
\end_layout

\end_deeper
\begin_layout Subsection
Software-Umgebung
\end_layout

\begin_layout Standard
Die Software-Umgebung bezeichnet alle auf dem jeweiligen Server benötigten
 Programme.
 Der folgend Abschnitt listet diese auf.
\end_layout

\begin_layout Subsubsection
Grundvoraussetzungen
\end_layout

\begin_layout Standard
Beide Server benötigen folgende Software:
\end_layout

\begin_layout Itemize
Betriebssystem Linux
\newline
Linux bezeichnet den freien Kern eines Betriebssystems.
 Es wurde ursprünglich von Linus Torvalds entwickelt und bildet heute die
 Grundlage für mehrere Distributionen.
 Die als Basissystem für 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 eingesetzte Linux-Distribution muss als einzige Voraussetzung zulassen,
 dass sich alle benötigten Softwarekomponenten installieren lassen.
\end_layout

\begin_layout Itemize
Java Runtime Environment
\newline
Der Tomcat Webserver 
\begin_inset LatexCommand \cite{tomcat:05}

\end_inset

 und alle Werkzeugprogramme von 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 sind in Java implementiert.
 Aus diesem Grund ist ein installiertes Java Runtime Environment, Version
 5.0 
\begin_inset LatexCommand \cite{java:05}

\end_inset

 Grundvoraussetzung für die Serversysteme und auch den Client, der die Daten
 überträgt.
\end_layout

\begin_layout Subsubsection
Daten- und Kartenserver
\end_layout

\begin_layout Standard
Für die Datenbank und Kartenerzeugung müssen folgende Programme installiert
 sein.
\end_layout

\begin_layout Itemize
GNU C Compiler (
\emph on
gcc
\emph default
) und GNU make (
\emph on
gmake
\emph default
 oder 
\emph on
make
\emph default
) 
\end_layout

\begin_layout Itemize
GEOS geometrische Bibliothek 
\begin_inset LatexCommand \cite{geos:05}

\end_inset


\end_layout

\begin_layout Itemize
PROJ.4 Kartenprojektions-Bibliothek 
\begin_inset LatexCommand \cite{proj4:05}

\end_inset


\end_layout

\begin_layout Itemize
PostgreSQL (Version 8.x) 
\begin_inset LatexCommand \cite{postgresql:05}

\end_inset


\end_layout

\begin_layout Itemize
PostGIS für PostgreSQL 
\begin_inset LatexCommand \cite{postgis:05}

\end_inset


\end_layout

\begin_layout Itemize
UMN MapServer (Version 4.6x) 
\begin_inset LatexCommand \cite{mapserver:05}

\end_inset


\end_layout

\begin_layout Itemize
SaTScan (Die Entwickler verschicken eine Internetadresse zum Download der
 Linux-Version auf Anfrage.)
\end_layout

\begin_layout Subsubsection
Webserver
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 verwendet den Apache Tomcat Servlet Container in der Version 5.x als Webserver.
 
\end_layout

\begin_layout Section
Entwicklungsumgebung
\end_layout

\begin_layout Subsection
Programmiersprache
\end_layout

\begin_layout Standard
Alle Softwarekomponenten für diese Diplomarbeit sind in Java realisiert.
 Diese von Sun entwickelte Programmiersprache ist mittlerweile in der Version
 5.0 verfügbar.
 Die Apache Software Foundation 
\begin_inset LatexCommand \cite{apachesf:05}

\end_inset

 fördert mit vielen freien Projekten die Verwendung von Java bei der Softwareent
wicklung.
 So stellt z.B.
 die durch das Jakarta Projekt 
\begin_inset LatexCommand \cite{jakarta:05}

\end_inset

 entwickelte Commons-Bibliothek 
\begin_inset LatexCommand \cite{commons:05}

\end_inset

 eine Vielzahl von Java-Standardlösungen bereit 
\begin_inset LatexCommand \cite{wartala:2005}

\end_inset

.
 Sie werden in diesem Projekt unter anderem für den Datenbankzugriff und
 die Ein-/Ausgabe eingesetzt.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Entwicklungswerkzeuge}

\end_inset

Entwicklungswerkzeuge
\end_layout

\begin_layout Subsubsection
Integrierte Entwicklungsumgebung
\end_layout

\begin_layout Standard
Als integrierte Entwicklungsumgebung hat sich für Java das frei erhältliche
 Programm Eclipse 
\begin_inset LatexCommand \cite{eclipse:05}

\end_inset

 durchgesetzt.
 Dieses Plugin-basierte Softwareentwicklungs-Framework besteht auch den
 Vergleich mit kommerziellen Produkten.
 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 ist mit Hilfe von Eclipse entwickelt.
 Dank eines vorgeschalteten Projektverwaltungssystems können die Quellen
 jedoch auch mit allen anderen integrierten Entwicklungsumgebungen bearbeitet
 werden.
 
\end_layout

\begin_layout Subsubsection
Projektverwaltung
\end_layout

\begin_layout Standard
Eine Projektverwaltung vereinfacht den Entwicklungsprozess im Hinblick auf
 die Organisation des Quellcodes.
 Die Software Maven 
\begin_inset LatexCommand \cite{maven:05}

\end_inset

 ist eine Projektverwaltung für Java-Entwickler.
 Sie ist ebenfalls aus dem Jakarta-Projekt hervorgegangen und erleichtert
 den Entwicklungsprozess in mehreren Bereichen 
\begin_inset LatexCommand \cite{maven_guide:05}

\end_inset

:
\end_layout

\begin_layout Itemize
Der Entwicklungsvorgang (kompilieren, testen, verteilen) ist standardisiert.
 Maven verbirgt unnötige Details.
\end_layout

\begin_layout Itemize
Alle Software-Projekte sind einheitlich organisiert.
 Ein Entwickler findet sich in unbekannten Projekten schneller zurecht.
\end_layout

\begin_layout Itemize
Das System erzeugt ausführliche Projektinformationen (Changelog, Javadoc,
 Testergebnisse, Abhängigkeiten, Metriken, etc.).
 
\end_layout

\begin_layout Itemize
Maven bietet dem Entwickler eine Hilfestellung für das Einhalten von bewährten
 Praktiken
\end_layout

\begin_layout Itemize
Externe Abhängigkeiten (Bibliotheken) lassen sich gut organisieren.
\end_layout

\begin_layout Standard
Maven ist unabhängig von einer zusätzlich verwendeten Entwicklungsumgebung.
 Der Entwickler kann zum Beispiel die Projektdefinitionsdatei für Eclipse
 mit dem Befehl 
\family typewriter
maven eclipse
\family default
 erzeugen lassen.
 Selbst umfangreiche Projekte mit vielen Abhängigkeiten lassen sich durch
 einen Befehl sofort in Eclipse öffnen und bearbeiten.
 
\end_layout

\begin_layout Standard
Die Projektverwaltung unterstützt den Anwender auch bei der Versionsverwaltung.
 Dateien, die ein Projekt beschreiben, liegen im XML-Format vor.
 Der Entwickler kann dadurch die Änderungen im Projekt über verschiedenen
 Versionen hinweg leicht verfolgen.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Untersuchung der Voraussetzungen
\end_layout

\begin_layout Standard
Dieses Kapitel dokumentiert die der Softwareentwicklung vorausgegangenen
 Vorgänge.
 Es präsentiert Beispiele von bereits über das Internet zugänglichen Systemen
 zur Infektionsüberwachung.
 
\end_layout

\begin_layout Standard
Weiterhin definiert es die grundlegenden Anforderungen für das zu entwickelnde
 Web-basierte epidemiologische GIS mit integrierter Ausbruchsanalyse.
 Dieses stellt eine neuartige Kombination von Einzelkomponenten dar, deren
 Voraussetzungen näher betrachtet werden.
 
\end_layout

\begin_layout Standard
Der letzte Teil diese Kapitels gibt einen Überblick über verfügbare Open
 Source Software, die sich zur Lösung der gegebenen Problemstellung eignet.
 Jedes der in Betracht gezogenen freien Produkte wird vorgestellt und hinsichtli
ch der Verwendbarkeit bewertet.
 
\end_layout

\begin_layout Section
\begin_inset LatexCommand \label{sec:Web-basierte-Systeme}

\end_inset

Web-basierte Systeme zur Überwachung von Infektionen
\end_layout

\begin_layout Standard
Die Epidemiologen haben dank des Internets die Möglichkeit, die Ergebnisse
 ihrer Arbeit einer größeren Benutzerzahl zur Verfügung zu stellen.
 Abbildung 
\begin_inset LatexCommand \ref{fig:Neuer-Informationsfluss-NRZM}

\end_inset

 veranschaulicht diese Möglichkeit am Beispiel des NRZM.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/nrzm_ablauf_neu.eps
	lyxscale 30
	width 100col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Neuer-Informationsfluss-NRZM}

\end_inset

Neuer Informationsfluss, ermöglicht durch den Einsatz eines Web-basierten
 Systems (am Beispiel des NRZM, vgl.
 Abbildung 
\begin_inset LatexCommand \vref{fig:Informationsfluss-im-NRZM}

\end_inset

) 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ein Web-basiertes Informationssystem hat neben der einfachen Zugänglichkeit
 über ein Netzwerk weitere Vorteile:
\end_layout

\begin_layout Itemize
Der Benutzer kann die angezeigten Informationen nach eigenen Kriterien filtern.
\end_layout

\begin_layout Itemize
Das System kann sehr aktuell sein.
\end_layout

\begin_layout Itemize
Das Internetangebot übernimmt einen Teil der Öffentlichkeitsarbeit durch
 Bereitstellung von Informationen.
\end_layout

\begin_layout Standard
Im weltweiten Datennetz finden sich viele solcher epidemiologischer Informations
portale.
 Die oft auf Landesebene eingesetzten Webangebote sind von unterschiedlicher
 Komplexität.
 Manche bieten nur eine Zusammenfassung von Statistiken in Jahresberichten
 an, andere präsentieren Daten interaktiv in Form von Zahlen und Diagrammen.
 Fortgeschrittene Systeme nutzen auch Karten zur Präsentation der geografischen
 Verteilung von Erregern.
 Drei dieser Systeme werden im Folgenden vorgestellt.
\end_layout

\begin_layout Subparagraph
SurvStat vom Robert Koch-Institut 
\begin_inset LatexCommand \cite{survstat:05}

\end_inset


\end_layout

\begin_layout Standard
Dieses System erlaubt den Zugriff auf die vom RKI erfassten Krankheitsfälle
 und Erregernachweise.
 Es ergänzt die bisher in Form des 
\begin_inset Quotes eld
\end_inset

Epidemiologischen Bulletins
\begin_inset Quotes erd
\end_inset

 und des 
\begin_inset Quotes eld
\end_inset

Infektionsepidemiologischen Jahrbuchs
\begin_inset Quotes erd
\end_inset

 vom Institut angebotenen Informationen.
 Der Anwender des Systems kann über die Benutzeroberfläche verschiedene
 Parameter einstellen (siehe Abbildung 
\begin_inset LatexCommand \ref{fig:Benutzeroberfläche-von-SurvStat}

\end_inset

, linke Seite).
 SurvStat erlaubt das Filtern der Daten nach spezifischen Krankheiten bzw.
 Erregern, Zeiträumen, Orten, Personendaten und Falldefinitionen.
 Die Abfrageergebnisse lassen sich anhand eines unter diesen Kategorien
 verfügbaren Merkmals (Geschlecht, Altersgruppe, Quartal, Landkreis, etc.)
 gruppieren.
 Weiterhin kann der Anwender ein zusätzliches zweites Merkmal für eine kreuztabe
llarische Abfrage angeben.
 
\end_layout

\begin_layout Standard
In dem Kreisdiagramm auf der rechten Seite von Abbildung 
\begin_inset LatexCommand \ref{fig:Benutzeroberfläche-von-SurvStat}

\end_inset

 sind die Meningokokkenfälle im Jahr 2005 gruppiert nach den Serogruppen
 B, C und Y dargestellt.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/survstat.eps
	width 100col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Benutzeroberfläche-von-SurvStat}

\end_inset

Benutzeroberfläche von SurvStat.
 Das System erzeugt anhand der in der Maske eingestellten Parameter unter
 anderem Kreisdiagramme.
 (Bildschirmfoto, Stand: 05.
 Dezember 2005)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
SurvStat ist ein sehr umfangreiches System.
 Es kann auf den vereinfachten Datenbestand des RKI zugreifen.
 Die Daten sind sehr aktuell (wöchentliche Aktualisierung).
 Ein Nachteil ist die clientseitige Umsetzung mittels JavaScript und HTML.
 Nahezu jeder Mausklick führt zu einer kompletten Aktualisierung der Website.
 Zudem zeigt eine durchgeführte Anfrage das Ergebnis in einem separaten
 Browser-Fenster an.
 Diese beiden Faktoren hemmen den Arbeitsfluss.
\end_layout

\begin_layout Paragraph
Arbeitsgemeinschaft Influenza 
\begin_inset LatexCommand \cite{agi:05}

\end_inset


\end_layout

\begin_layout Standard
Die Arbeitsgemeinschaft Influenza (AGI) informiert die Bevölkerung während
 der Wintersaison über die Aktivität der auch unter dem Namen 
\begin_inset Quotes eld
\end_inset

Grippe
\begin_inset Quotes erd
\end_inset

 bekannten Influenza.
 Dieses Projekt ermöglicht es dem Anwender nicht, Filter einzustellen, um
 ausführliche Tabellen und Diagramme zu erzeugen.
 Zudem beschränkt es sich im Vergleich zu SurvStat auf lediglich einen Erreger.
 Der Grund dafür, dass es trotzdem hier als Beispiel angebracht wird, ist
 die gute Präsentation der aktuellen Erkrankungssituation.
 
\end_layout

\begin_layout Standard
Die AGI verwendet in ihrem Internetangebot übersichtliche Karten (Abbildung
 
\begin_inset LatexCommand \ref{fig:Aktivität-der-Influenza}

\end_inset

), um die Verteilung von Erkrankungsfällen in Deutschland intuitiv zu vermitteln.
 Sie veranschaulicht zudem die Dynamik der Erregeraktivität durch Animationen
 mit einem Bild pro Kalenderwoche.
 Der Benutzer kann neben dieser Darstellung noch eine vorgegebene Menge
 von Diagrammen anfordern.
 Diese zeigen die zeitliche Verteilung verschiedener Messwerte für das Bundesgeb
iet und die Länder.
 Das Angebot der AGI bietet keine interaktiv änderbaren Karten oder Diagramme.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/agi1.png
	lyxscale 20
	width 40col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Aktivität-der-Influenza}

\end_inset

Aktivität der Influenza in der 6.
 Kalenderwoche 2005 (AGI-Website, Stand: 05.
 Dezember 2005)
\end_layout

\end_inset


\end_layout

\begin_layout Paragraph
Swedish Institute for Infectious Disease Control (SMI) 
\begin_inset LatexCommand \cite{smi:05}

\end_inset


\end_layout

\begin_layout Standard
Das SMI ist eine schwedische Behörde, die mit der Epidemiologie von Infektionskr
ankheiten betraut ist.
 Das Institut bietet auf seiner Website ausführliche Statistiken zu meldepflicht
igen Erkrankungsfällen in Schweden.
 Die Menge der unterschiedlichen erfassten Krankheitserreger ist mit der
 von SurvStat vergleichbar.
 Rolfhamre et al.
 
\begin_inset LatexCommand \cite{rolfhamre:04}

\end_inset

 beschreiben den Web-basierten Dienst, welcher der Öffentlichkeit seit Mai
 2003 Zugriff auf die Daten des SMI ermöglicht.
 Das System präsentiert die Statistik zu den erfassten meldepflichtigen
 Krankheiten in verschiedener Weise:
\end_layout

\begin_layout Itemize
Tabellen zeigen die Anzahl der Fälle und Inzidenz nach Kreisen als Monats-
 und Jahresstatistik und die Altersverteilung nach Gruppen, oder die Geschlechte
rverteilung als Jahresstatistik an.
\end_layout

\begin_layout Itemize
Grafen informieren über die gesamte Anzahl der Fälle pro Woche und deren
 Trend.
\end_layout

\begin_layout Itemize
Karten veranschaulichen die geografische Verteilung der Erkrankungszahlen
 und die Inzidenz anhand der Einfärbung von Kreisen (Abbildung 
\begin_inset LatexCommand \ref{fig:SMI-Inzidenz-Meningokokkenerkrankungsfälle}

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/smi1.png
	lyxscale 30
	width 90col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:SMI-Inzidenz-Meningokokkenerkrankungsfälle}

\end_inset

Inzidenz der Meningokokken-Erkrankungsfälle in Schweden von Januar bis Oktober
 2005 (Bildschirmfoto, Stand: 06.
 Dezember 2005)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die schwedischen Wissenschaftler haben mit diesem Onlineangebot eine Möglichkeit
 geschaffen, Interessenten mit Hilfe von GIS online über die epidemiologische
 Situation in ihrem Land zu informieren.
 Das Angebot an Statistiken ist, die Anzahl der erfassten Erkrankungen betreffen
d, sehr umfangreich.
 Im Vergleich zu SurvStat behandelt es allerdings alle verschiedenen Krankheitse
rreger gleich.
 Unter den Meningokokkenerkrankungen tauchen zum Beispiel keine Serogruppen
 auf.
 Die Interaktionsmöglichkeiten des Benutzers beschränken sich auf die Auswahlmög
lichkeit bestimmter Jahre bei den angezeigten Karten.
 Alle anderen Inhalte sind statisch.
 Die Daten im System werden lediglich einmal im Monat aktualisiert.
\end_layout

\begin_layout Section
Anforderungen an ein Web-basiertes epidemiologisches GIS
\end_layout

\begin_layout Standard
Die im vorigen Abschnitt genannten Beispiele für epidemiologische Informationspl
attformen vermitteln bereits einige Anforderungen an das zu entwickelnde
 System.
 Gleichzeitig zeigen sie auch, dass öffentlich zugängliche geografische
 Informationssysteme in diesem Bereich noch am Anfang stehen.
 Dies erstaunt umso mehr, als Karten bereits für die ersten Menschen ein
 Mittel waren, Informationen auszutauschen (z.B.
 Strategien für eine Jagd) 
\begin_inset LatexCommand \cite{barnes:2005}

\end_inset

.
 
\end_layout

\begin_layout Standard
Ein öffentlich zugängliches Informationssystem muss dem Anwender intuitiv
 Daten und Zusammenhänge vermitteln.
 Die nachfolgend aufgeführten Einzelkomponenten tragen jeweils zur Erfüllung
 dieser Aufgabe bei.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Reichhaltige-Internetanwendung}

\end_inset

Reichhaltige Internetanwendung als Benutzerschnittstelle
\end_layout

\begin_layout Standard
Die Beispielsysteme aus Abschnitt 
\begin_inset LatexCommand \ref{sec:Web-basierte-Systeme}

\end_inset

 haben alle den Nachteil, dass sie HTML-Dokumente verwenden, um dem Benutzer
 Informationen zu präsentieren.
 Jede Interaktion erfordert eine Anfrage des Browsers an den Server.
 Es kommt kein richtiger Arbeits- und Informationsfluss zu Stande.
\end_layout

\begin_layout Standard
Die Lösung dieses Problems heißt 
\begin_inset Quotes eld
\end_inset

Rich Internet Applications
\begin_inset Quotes erd
\end_inset

 (RIAs), wobei 
\begin_inset Quotes eld
\end_inset

Rich
\begin_inset Quotes erd
\end_inset

 reichhaltig bedeutet.
 Der Benutzer lädt RIAs über eine Website direkt aus dem Internet.
 Im Vergleich zu HTML-Seiten sind sie um Funktionen angereichert, die sonst
 nur von Desktop-Applikationen bekannt sind.
 IDC
\begin_inset Foot
status collapsed

\begin_layout Standard
International Data Corporation
\end_layout

\end_inset

 
\begin_inset LatexCommand \cite{idc:05}

\end_inset

 hat in einem White Paper 
\begin_inset LatexCommand \cite{duhl:2003}

\end_inset

 die Verwendbarkeit von RIAs für Firmen bewertet.
 Für den Einsatz als clientseitige Schnittstelle eines epidemiologischen
 Geoinformationssystems sprechen mehr Vor- als Nachteile:
\end_layout

\begin_layout Subparagraph
Vorteile
\end_layout

\begin_layout Itemize
Der Benutzer kann die Client-Anwendung 
\begin_inset Quotes eld
\end_inset

überall
\begin_inset Quotes erd
\end_inset

 verwenden.
\end_layout

\begin_layout Itemize
RIAs bieten auf verschiedenen Hard- und Softwaresystemen immer die gleiche
 Funktionalität.
\end_layout

\begin_layout Itemize
Die Anwendung wird clientseitig ausgeführt.
 Einmal geladen, muss sie nur noch wenige Daten mit dem Server austauschen.
\end_layout

\begin_layout Itemize
Die Benutzeroberfläche ist eingängig und erlaubt ein hohes Maß an Interaktivität.
 Sie 
\begin_inset Quotes eld
\end_inset

fühlt
\begin_inset Quotes erd
\end_inset

 sich wie eine Desktop-Anwendung an.
\end_layout

\begin_layout Itemize
Die Medien Text, Bild, Audio und Video lassen sich in der Präsentation nahtlos
 verbinden.
\end_layout

\begin_layout Itemize
Im Gegensatz zu Desktop-Anwendungen sind Updates für den Benutzer sofort
 verfügbar.
\end_layout

\begin_layout Itemize
Der Anwender setzt seinen Rechner durch die Ausführung von RIAs keinem Sicherhei
tsrisiko aus (
\begin_inset Quotes eld
\end_inset

Sandbox
\begin_inset Quotes erd
\end_inset

-Prinzip 
\begin_inset LatexCommand \cite{ludwig:2005}

\end_inset

).
 
\end_layout

\begin_layout Subsubsection
Nachteile
\end_layout

\begin_layout Itemize
RIAs benötigen für die Ausführung ein im Browser installiertes Plugin.
 Benutzer von Systemen, auf denen diese Software-Komponente nicht installiert
 werden kann, haben keine Möglichkeit, die Internetanwendung auszuführen.
\end_layout

\begin_layout Itemize
Der initiale Ladevorgang dauert länger als bei einer HTML-Seite.
\end_layout

\begin_layout Standard
Die RIA für 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 ist mittels Flash umgesetzt.
 Viele Benutzer haben das Flash-Plugin der Firma Adobe
\begin_inset Foot
status collapsed

\begin_layout Standard
Die Firma Macromedia, die Flash vormals entwickelt hat, ist am 5.
 Dezember 2005 von Adobe übernommen worden.
\end_layout

\end_inset

 
\begin_inset LatexCommand \cite{adobe:05}

\end_inset

 auf ihren Rechnern installiert (siehe Tabelle 
\begin_inset LatexCommand \ref{tab:Weltweite-Verbreitung-Flash}

\end_inset

).
 Diese Daten sprechen für die Verwendung von Flash zur Entwicklung eines
 erreichbaren Informationssystems.
\end_layout

\begin_layout Standard
Alternative Plattformen zur Entwicklung von RIAs sind beispielsweise Java-Applet
s, 
\begin_inset Quotes eld
\end_inset

Java Web Start
\begin_inset Quotes erd
\end_inset

-Anwendungen 
\begin_inset LatexCommand \cite{javawebstart:2005}

\end_inset

, SVG
\begin_inset Foot
status collapsed

\begin_layout Standard
Scalable Vector Graphics
\end_layout

\end_inset

 
\begin_inset LatexCommand \cite{svg:2005}

\end_inset

 und XUL
\begin_inset Foot
status collapsed

\begin_layout Standard
XML User Interface Language
\end_layout

\end_inset

 
\begin_inset LatexCommand \cite{xul:2005}

\end_inset

.
 
\begin_inset Quotes eld
\end_inset

Java Web Start
\begin_inset Quotes erd
\end_inset

 bietet sehr vielseitige Möglichkeiten erfordert jedoch genau wie Applets
 ein installiertes Java-Plugin.
 Dieses ist ebenso wie das SVG-Plugin bis dato noch nicht so weit verbreitet
 wie Flash.
 Bei XUL-Anwendungen handelt es sich um eine Technik, die aus dem Mozilla-Projek
t hervorgegangen ist.
 Um mit XUL erstellte RIAs lassen sich daher nur in einem Mozilla-Browser
 ausführen.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="4">
<features>
<column alignment="center" valignment="top" rightline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\emph on
Version 5
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\emph on
Version 6
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\emph on
Version 7
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\emph on
USA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
97,3%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
96,4%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
91,9%
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\emph on
Kanada
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
98,7%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
97,5%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
93,8%
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\emph on
Europa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
98,7%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
97,4%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
93,3%
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\emph on
Asien
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
96,6%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
94,0%
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
87,7%
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Weltweite-Verbreitung-Flash}

\end_inset

Ergebnisse einer weltweiten Umfrage über die Verbreitung des Flash-Plugins
 
\begin_inset LatexCommand \cite{npdgroup:05}

\end_inset

 (Stand: September 2005)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Als epidemiologisches GIS muss die Rich Internet Application dem Benutzer
 folgende Funktionen bieten:
\end_layout

\begin_layout Itemize
Anzeigen von verschiedenen Karten mit der Möglichkeit, zwischen diesen direkt
 umzuschalten
\end_layout

\begin_layout Itemize
Verschieben und Vergrößern des gezeigten Kartenausschnitts
\end_layout

\begin_layout Itemize
Abfragen von Detailinformationen zu einzelnen Punkten auf der Karte
\end_layout

\begin_layout Itemize
Filtern der epidemiologischen Daten nach Altersgruppen, Zeitraum und spezifische
n Erreger-Merkmalen (z.B.
 Serogruppe)
\end_layout

\begin_layout Itemize
Ausgeben einer druckfähigen Version der Karte
\end_layout

\begin_layout Standard
Weitere Anforderungen an die Benutzeroberfläche sind Geschwindigkeit und
 intuitive Bedienbarkeit.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Anf-Geografisches-Informationssystem}

\end_inset

Geografisches Informationssystem
\end_layout

\begin_layout Standard
Das geografische Informationssystem in diesem Projekt erzeugt verschiedene
 epidemiologische Übersichtskarten.
 Das GIS muss dabei mehrere Anforderungen erfüllen.
\end_layout

\begin_layout Subparagraph
Karten setzen sich aus Ebenen zusammen
\end_layout

\begin_layout Standard
Digitale Karten sind in Geoinformationssystemen meistens mittels Ebenen
 organisiert.
 Zusammengehörige Daten liegen in einer Ebene.
 Die Karte in Abbildung 
\begin_inset LatexCommand \ref{fig:Karte-aus-Ebenen}

\end_inset

 enthält zum Beispiel die Ebenen Inzidenz, Grenzen, Städte und Erkrankungsfälle.
 In einer Ebene zusammengefasste Elemente sind immer vom gleichen geometrischen
 Typ.
 Bei Grenzen und Inzidenz handelt es sich um Flächen-, bei Städten und Erkrankun
gsfällen um Punktinformationen.
 Die einzelnen Schichten erzeugen zusammen das Gesamtbild der Karte.
 Der Benutzer kann die Darstellung durch Ein- und Ausblenden einzelner Ebenen
 verändern.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/ebenen.eps
	lyxscale 30
	width 100col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Karte-aus-Ebenen}

\end_inset

Eine Karte wird im GIS aus einzelnen Ebenen aufgebaut
\end_layout

\end_inset


\end_layout

\begin_layout Subparagraph
Dynamische Karten
\end_layout

\begin_layout Standard
Durch die Ebenen hat der Anwender Einfluss auf die angezeigten Informationen.
 Das GI-System muss zudem auch auf die unter 
\begin_inset LatexCommand \ref{sub:Reichhaltige-Internetanwendung}

\end_inset

 beschriebenen Filter reagieren.
 Einzelne Ebenen besitzen dazu Parameter, anhand derer die Darstellung erzeugt
 wird.
 Die Inzidenz-Ebene stellt zum Beispiel die Inzidenz aller im gewählten
 Zeitraum aufgetretenen Fälle dar.
 Zusätzlich lässt sich die geografische Auflösung dieser Berechnungen (z.B.
 Bundesländer oder Kreise) einstellen.
\end_layout

\begin_layout Subparagraph
Zugriff auf Attributinformationen
\end_layout

\begin_layout Standard
Attributinformationen sind alle verfügbaren Daten außer den Koordinaten.
 Geoinformationssysteme speichern oft viele Zusatzdaten zu einem geografischen
 Eintrag.
 Die Einwohnerzahl einer Stadt ist beispielsweise ein Attribut.
 Verschiedene Farben und Symbole können mögliche Attributwerte repräsentieren.
 Ergänzend zu dieser Informationsdarstellung muss das GI-System allerdings
 auch Detailinformationen zu einer bestimmten Position oder Region auf der
 Karte liefern können.
 Die Inzidenz lässt sich wie beim schwedischen System in Abschnitt 
\begin_inset LatexCommand \ref{sec:Web-basierte-Systeme}

\end_inset

 mit vier Farben darstellen.
 Der Benutzer dieses Systems kann aber nur mit den exakten Attributinformationen
 feststellen, ob die Inzidenz in einem Landkreis 0,71 oder 1,49 beträgt.
 Der Wertebereich von 0,7 bis 1,5 entspricht einer Farbe und erlaubt daher
 keine Differenzierung.
\end_layout

\begin_layout Subsection
Aktualisierung der Daten
\end_layout

\begin_layout Standard
Die Aktualität der von einem Informationssystem bereitgestellten Daten ist
 insbesondere bei der Überwachung von Erkrankungsfällen von großer Bedeutung.
 Die Epidemiologen müssen in der Lage sein, die im System gespeicherten
 Falldaten regelmäßig und automatisiert zu aktualisieren, um auf Veränderungen
 reagieren zu können.
\end_layout

\begin_layout Standard
Das Referenzzentrum/Labor überträgt die Daten in einem vereinbarten Transferform
at an den Server.
 Eine sichere Übertragungsleitung gewährleistet den Schutz der sensiblen
 Informationen.
 Der Server führt eine Aktualisierung der Datenbank durch.
 
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Automatische-Identifizierung-Cluster}

\end_inset

Automatische Identifizierung von Clustern
\end_layout

\begin_layout Standard
Für Epidemiologen ist die Identifizierung von Clustern (siehe auch Abschnitt
 
\begin_inset LatexCommand \ref{sec:Identifizierung-von-Clustern}

\end_inset

) ein wichtiges Hilfsmittel.
 Es lenkt ihre Aufmerksamkeit auf Einzelfälle, die sie genauer untersuchen
 müssen.
 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 ist das erste Web-basierte epidemiologische GIS, das diese Analysen automatisie
rt durchführen kann.
 Es übernimmt damit die Aufgabe eines Frühwarnsystems.
 
\end_layout

\begin_layout Standard
Das NRZM wendet bei der Clusteridentifizierung zwei verschiedenen Verfahren
 an.
 Der Server muss diese mittels SaTScan automatisch, basierend auf den aktuellen
 Falldaten, ausführen.
\end_layout

\begin_layout Subparagraph
Prospektive Analyse
\end_layout

\begin_layout Standard
Die prospektive Analyse ist ein Frühwarnsystem.
 Sie kann Ausbrüche von Erkrankungsfällen, die gerade im Entstehen sind,
 frühzeitig erkennen 
\begin_inset LatexCommand \cite{kulldorff:2001}

\end_inset

.
 Sie reagiert sehr schnell auf Veränderungen.
 Die Suche nach aktuell vorhandenen 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{("lebenden")}
\end_layout

\end_inset

 Clustern soll wöchentlich durchgeführt werden.
 Das NRZM setzt eine maximale Clusterdauer von 60 Tagen fest.
 Das System soll immer nur das Ergebnis der aktuellsten prospektiven Analyse
 anzeigen.
\end_layout

\begin_layout Subparagraph
Retrospektive Analyse
\end_layout

\begin_layout Standard
Die Retrospektive Analyse liefert alle in der Vergangenheit aktiven Cluster.
 Diese historischen Erkrankungshäufungen sind keine akute Bedrohung der
 öffentlichen Gesundheit.
 Kulldorff et al.
 haben mit dieser Analyse z.B.
 nachgewiesen, dass ein scheinbar verstärktes Auftreten von Erkrankungen
 an Gehirntumoren in Los Alamos, New Mexico, reiner Zufall war.
 Sie konnten keinen Zusammenhang mit dem dort 1943 von der US-Regierung
 aufgebauten Kernforschungszentrum feststellen 
\begin_inset LatexCommand \cite{kulldorff:1998}

\end_inset

.
 
\end_layout

\begin_layout Standard
Die Retrospektive Analyse soll in diesem System die historische Clusterlandschaf
t darstellen.
 Hierzu sollen die Berechnungen monatlich mit allen bisher erfassten Daten
 durchgeführt werden.
\end_layout

\begin_layout Section
\begin_inset LatexCommand \label{sec:Open-Source-Software}

\end_inset

Anwendungsrelevante freie Softwarepakete
\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "90col%"
special "none"
height "1pt"
height_special "totalheight"
status open

\begin_layout Subparagraph
Definition 
\end_layout

\begin_layout Standard
Freie Software bedeutet die Freiheit des Benutzers, die Software zu benutzen,
 zu kopieren, sie zu vertreiben, zu studieren, zu verändern und zu verbessern.
 Genauer gesagt, bezieht sich der Begriff 
\begin_inset Quotes eld
\end_inset

Freie Software
\begin_inset Quotes erd
\end_inset

 auf vier Arten von Freiheit, die der Benutzer der Software hat:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "90col%"
special "none"
height "1pt"
height_special "totalheight"
status open

\begin_layout Itemize
Die Freiheit, das Programm für jeden Zweck zu benutzen (Freiheit 0).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "90col%"
special "none"
height "1pt"
height_special "totalheight"
status open

\begin_layout Itemize
Die Freiheit, zu verstehen, wie das Programm funktioniert und wie man es
 für seine Ansprüche anpassen kann (Freiheit 1).
 Der Zugang zum Quellcode ist dafür Voraussetzung.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "90col%"
special "none"
height "1pt"
height_special "totalheight"
status open

\begin_layout Itemize
Die Freiheit, Kopien weiterzuverbreiten, so dass man seinem Nächsten weiterhelfe
n kann (Freiheit 2).
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "90col%"
special "none"
height "1pt"
height_special "totalheight"
status open

\begin_layout Itemize
Die Freiheit, das Programm zu verbessern und die Verbesserungen der Öffentlichke
it zur Verfügung zu stellen, damit die ganze Gemeinschaft davon profitieren
 kann (Freiheit 3).
 Der Zugang zum Quellcode ist dafür Voraussetzung.
\begin_inset Quotes erd
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align right
\begin_inset Box Frameless
position "c"
hor_pos "c"
has_inner_box 1
inner_pos "t"
use_parbox 0
width "90col%"
special "none"
height "1pt"
height_special "totalheight"
status open

\begin_layout Standard

\noun on
F
\emph on
\noun default
ree Software Foundation - Die Definition freier Software 
\emph default

\begin_inset LatexCommand \cite{fsf_def:05}

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace medskip
\end_inset

Open-Source-Software 
\begin_inset LatexCommand \cite[OSS]{oss:05}

\end_inset

 und freie Software 
\begin_inset LatexCommand \cite{fsf:05}

\end_inset

 sind bedeutungsgleich.
 Die Verfechter der jeweiligen Bewegung setzen allerdings unterschiedliche
 Schwerpunkte.
 Diese Arbeit verwendet die beiden Begriffe synonym.
 
\end_layout

\begin_layout Standard
Bei der Entwicklung dieses Projektes war es wichtig, nicht-proprietäre Software-
Produkte zu finden, welche die in diesem Kapitel definierten Anforderungen
 erfüllen.
 Nicht alle im Folgenden genannten Produkte sind verwendet worden.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Web-basierte-Anwendungen}

\end_inset

Web-basierte Anwendungen
\end_layout

\begin_layout Subsubsection
Struts als serverseitiges Framework
\end_layout

\begin_layout Standard
Jakarta Struts 
\begin_inset LatexCommand \cite{struts:05}

\end_inset

 ist ein Framework zur Entwicklung von auf JavaServer Pages 
\begin_inset LatexCommand \cite[JSP]{jsp:05}

\end_inset

 basierenden dynamischen Internetseiten.
 Struts implementiert in Teilen Suns 
\begin_inset Quotes eld
\end_inset

Model-2
\begin_inset Quotes erd
\end_inset

-Architektur 
\begin_inset LatexCommand \cite{seshadri:1999}

\end_inset

.
 Hierbei handelt es sich um eine für Webanwendungen angepasste Version des
 Model-View-Controller Architekturmusters 
\begin_inset LatexCommand \cite{reenskaug:1979}

\end_inset

.
 Abbildung 
\begin_inset LatexCommand \ref{fig:Model-2-Architektur}

\end_inset

 zeigt das Zusammenspiel der MVC-Komponenten im 
\begin_inset Quotes eld
\end_inset

Model-2
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/model2.eps
	lyxscale 30
	width 80col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Model-2-Architektur}

\end_inset


\begin_inset Quotes eld
\end_inset

Model-2
\begin_inset Quotes erd
\end_inset

-Architektur: Modell-View-Controller für Webanwendungen
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Struts bringt bei der Entwicklung von Webanwendungen verschiedene Vorteile
 
\begin_inset LatexCommand \cite{kuhn:2003}

\end_inset

: 
\end_layout

\begin_layout Itemize
Durch eine Implementierung mit wenigen überschaubaren Komponenten ist das
 Framework leicht zu erlernen.
 Gleichzeitig bietet es genug Freiraum für experimentierfreudige Entwickler.
\end_layout

\begin_layout Itemize
Alle Funktionen von Java Servlets bleiben erhalten.
 Struts lässt sich mit Bibliotheken kombinieren.
\end_layout

\begin_layout Itemize
Informationen lassen sich einfach zwischen Objekten und HTML-Formularen
 verschieben.
\end_layout

\begin_layout Itemize
Struts verwaltet alle Einstellungen in einer zentralen XML-Datei.
 Sie ist trotz umfangreicher Konfigurationsmöglichkeiten gut verständlich.
\end_layout

\begin_layout Itemize
Struts arbeitet gut mit anderen auf Java Servlets beruhenden Frameworks
 zusammen.
\end_layout

\begin_layout Standard
Die zentrale Komponente von Struts ist ein Front-Controller.
 Dieser ist der zentrale Zugangspunkt für die Webanwendung.
 Er nimmt alle Anfragen entgegen und erledigt sie selbst oder leitet sie
 an andere Klassen weiter.
 
\end_layout

\begin_layout Standard
Dieses Projekt verwendet Struts als serverseitiges Framework.
\begin_inset Note Note
status collapsed

\begin_layout Standard
Punkte
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
OpenLaszlo für Rich Internet Applications
\end_layout

\begin_layout Standard
OpenLaszlo 
\begin_inset LatexCommand \cite{openlaszlo:2005}

\end_inset

 ist eine von Laszlo Systems, Inc.
 entwickelte Software-Plattform zur Entwicklung und Verbreitung von Rich
 Internet Applications (siehe Abschnitt 
\begin_inset LatexCommand \ref{sub:Reichhaltige-Internetanwendung}

\end_inset

).
 Laszlo Systems stellt der Öffentlichkeit die Software seit Oktober 2004
 unter einer Open-Source-Lizenz
\begin_inset Foot
status collapsed

\begin_layout Standard
Common Public License (CPL 1.0)
\end_layout

\end_inset

 zur Verfügung.
 Die Firma will damit die Verbreitung von RIAs und somit auch ihre anderen
 kommerziellen Produkte und Dienstleistungen fördern.
\end_layout

\begin_layout Standard
OpenLaszlo erweitert die Vorteile, die für den Einsatz RIAs sprechen:
\end_layout

\begin_layout Itemize
Die Open-Source Lösung ist dank langer Entwicklung stabil und gut dokumentiert.
\end_layout

\begin_layout Itemize
Die Programmiersprache ist objektorientiert und Komponenten-basiert.
\end_layout

\begin_layout Standard
OpenLaszlo verwendet Flash als Zielplattform für Internet-Anwendungen.
 Der Quellcode basiert auf XML und JavaScript.
 Die Programmiersprache mit dem Namen LZX ist eine objektorientierte, ereignisge
steuerte Auszeichnungssprache.
 Der Entwickler kann darin programmierte Anwendungen auf zwei verschiedene
 Arten verteilen (siehe Abbildung 
\begin_inset LatexCommand \ref{fig:Laszlo-Architektur}

\end_inset

).
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/laszlo_arch.eps
	width 100col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Laszlo-Architektur}

\end_inset

Übersicht der Architektur von OpenLaszlo.
 Laszlo-Anwendungen lassen sich eigenständig (
\begin_inset Quotes eld
\end_inset

Solo Deployment
\begin_inset Quotes erd
\end_inset

) oder in Verbindung mit einem Java Servlet Container einsetzen.
 (Quelle: Laszlo Systems 
\begin_inset LatexCommand \cite{laszlo_press:2005}

\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Bei dem 
\begin_inset Quotes eld
\end_inset

Solo Deployment
\begin_inset Quotes erd
\end_inset

 stellt ein Webserver (z.B.
 Apache) die bereits in das Flash-Format kompilierte Applikation bereit.
 Die im Browser des Benutzers laufende Flash-Anwendung kann hierbei dynamisch
 Daten aus XML-Dateien oder XML-generierenden serverseitigen Skripten laden.
 
\end_layout

\begin_layout Standard
Die zweite Verteilungsmöglichkeit benötigt einen Java Servlet Container
 (z.B.
 Apache Tomcat).
 Das auf diesem laufende OpenLaszlo Servlet übersetzt die Quellen der Anwendung
 zur Laufzeit und liefert Flash-Bytecode an den Browser aus.
 Diese Anwendung erlaubt im Vergleich zum 
\begin_inset Quotes eld
\end_inset

Solo Deployment
\begin_inset Quotes erd
\end_inset

 auch den Zugriff auf Java-spezifische Ressourcen.
\end_layout

\begin_layout Subparagraph
Beispiele für OpenLaszlo-Anwendungen
\end_layout

\begin_layout Standard
Die folgenden kurzen Laszlo-Programme veranschaulichen, wie die in XML programmi
erten Anwendungen aufgebaut sind.
 
\end_layout

\begin_layout Standard
Listing 
\begin_inset LatexCommand \ref{lst:laszlo_hello}

\end_inset

 zeigt das beispielhaft oft eingesetzte Hallo-Welt-Programm.
 Das Wurzel-Element von LZX ist 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinline[language=XML]{<canvas></canvas>}
\end_layout

\end_inset

.
 Dieses Container-Element enthält alle weiteren Teile einer Anwendung, wie
 in diesem Fall den Text 
\begin_inset Quotes eld
\end_inset

Hallo Welt!
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[caption=Beispiel für das obligatorische Hallo-Welt-Programm
 in OpenLaszlo,label=lst:laszlo_hello,language=XML]{./listings/laszlo_hello.xml}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Das Programm in Listing 
\begin_inset LatexCommand \ref{lst:laszlo_clickhello}

\end_inset

 demonstriert den Einsatz einer Ereignisbehandlungsroutine.
 Das 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinline[language=XML]{<simplelayout/>}
\end_layout

\end_inset

-Element sorgt für eine zeilenweise Anordnung der im Container enthaltenen
 Objekte.
 Der 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinline[language=XML]{<button>}
\end_layout

\end_inset

 reagiert auf sein 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinline[language=XML]{onclick}
\end_layout

\end_inset

-Ereignis damit, dass er das seinem Elternobjekt untergeordnete Element
 mit dem Namen 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinline[language=XML]{helloclick}
\end_layout

\end_inset

 anzeigt.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[caption=Minimales ereignisgesteuertes LZX-Programm,label=lst:las
zlo_clickhello,language=XML,keywords={visible,name,axis,spacing,onclick}]{./listi
ngs/laszlo_clickhello.xml}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace defskip
\end_inset

Die beiden Beispiele zeigen nur die grundlegendsten Möglichkeiten von Laszlo-Anw
endungen.
 Für weiterführende Informationen sei an dieser Stelle auf die Online-Dokumentat
ion von OpenLaszlo verwiesen 
\begin_inset LatexCommand \cite{openlaszlo_doc:2005}

\end_inset

.
 Eine kurzweilige 10-Minuten-Einführung in die Laszlo-Programmierung findet
 sich unter der Internetadresse 
\begin_inset LatexCommand \url{http://www.laszlosystems.com/lps/laszlo-in-ten-minutes/}

\end_inset

.
 Diese Website zeigt einfache Beispielanwendungen und erlaubt es diese Online
 zu bearbeiten und zu kompilieren.
\end_layout

\begin_layout Subsubsection
Bewertung
\end_layout

\begin_layout Standard
Mit OpenLaszlo existiert ein leistungsfähiges und gut dokumentiertes Open-Source
-Projekt für die Entwicklung von RIAs.
 Es lässt sich ideal auf einem Java Servlet Container einsetzen.
 Laszlo bietet viele Komponenten zum Aufbau von Web-basierten Benutzerschnittste
llen.
 Die Leistungsanforderungen der produzierten Flash-Anwendungen in Bezug
 auf CPU und Bandbreite sind vertretbar, wobei sich diese Aussage auf einen
 Test stützt, in welchem die in diesem Projekt entwickelte Anwendung auf
 einem Rechner mit 300 MHz und einer Modemanbindung von 56 kbit/s ausgeführt
 wurde.
 Die Programmierung von Anwendungen mit einer Auszeichnungssprache ist ungewöhnl
ich.
 Positiv ist die daraus resultierende Möglichkeit, Anwendungen sofort 
\begin_inset Quotes eld
\end_inset

live
\begin_inset Quotes erd
\end_inset

 online kompilieren und testen zu können.
\end_layout

\begin_layout Subsection
Datenbanksysteme
\end_layout

\begin_layout Subsubsection
\begin_inset LatexCommand \label{sub:PostgreSQL}

\end_inset

PostgreSQL
\end_layout

\begin_layout Standard
PostgreSQL ist ein objektrelationales Datenbankmanagementsystem (ORDBMS).
 Die University of California at Berkeley Computer Science Department entwickelt
e diese Software ursprünglich in einem universitären Projekt.
 Der Name dieser Datenbanksoftware spricht sich 
\begin_inset Quotes eld
\end_inset

post-gress-Q-L
\begin_inset Quotes erd
\end_inset

 aus.
 Die Namensgebung und Betonung soll auf die Fortführung des Ingres-Projektes
 an der selben Universität hinweisen.
\end_layout

\begin_layout Standard
PostgreSQL unterstützt die ISO/ANSI SQL92 und SQL99 Standards.
 Es ist das fortschrittlichste Open-Source-Datenbanksystem.
 Auch aus diesem Grund haben viele Entwickler Erweiterungen für PostgreSQL
 hervorgebracht, die dieses Datenbanksystem um Spezialfunktionen (z.B.
 GIS oder Statistik) ergänzen.
\end_layout

\begin_layout Standard
Eine der Erweiterungen ist PostGIS mit GEOS (siehe Abschnitt 
\begin_inset LatexCommand \ref{sub:Geografische-Informationssysteme}

\end_inset

).
 Sie eröffnet in PostgreSQL die Möglichkeit, geografische Objekte zu speichern
 und mit diesen zu arbeiten.
 Diese Fähigkeit, die offene Software-Lizenz 
\begin_inset LatexCommand \cite{postgresql:05}

\end_inset

 und ein guter Support durch eine große Nutzergemeinschaft sind nur einige
 der Vorteile, aufgrund derer sich PostgreSQL als Datenbanksystem in einem
 epidemiologisches GIS besonders gut eignet.
\end_layout

\begin_layout Subsubsection
MySQL
\end_layout

\begin_layout Standard
MySQL ist eines der am weitest verbreiteten Open-Source-Projekte.
 Der Finne Michael Widenius hat diese relationale DBMS 1994 entwickelt.
 Es hat sich besonders im Bereich der Webdienste in Verbindung mit Apache
 etabliert und erfreut sich einer bis heute ungebremsten Beliebtheit.
\end_layout

\begin_layout Standard
Geoinformationssysteme setzten dieses DBMS seltener ein, als die Kombination
 von PostgreSQL und PostGIS.
 MySQL erlaubt seit der Version 4.1 ebenfalls das Speichern von geometrischen
 Objekten.
 Diese Implementierung ist allerdings keine eigenständige Erweiterung wie
 bei PostgreSQL, sondern ein Teil des Gesamtsystems.
 Im Vergleich zu PostgreSQL bietet MySQL auch in anderen wissenschaftlichen
 Bereichen (wie z.B.
 Statistik) weniger Erweiterungsmöglichkeiten.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Geografische-Informationssysteme}

\end_inset

Geografische Informationssysteme
\end_layout

\begin_layout Subsubsection
Offene Standards für GIS
\end_layout

\begin_layout Standard
Das Open Geospatial Consortium 
\begin_inset LatexCommand \cite[OGC]{ogc:2005}

\end_inset

 ist ein gemeinnützig arbeitendes Gremium, das Standards im Bereich von
 GIS entwickelt.
 Offene Standards eröffnen viele Vorteile, wenn es um den Austausch von
 Daten zwischen Organisationen geht.
 Die USGS
\begin_inset Foot
status collapsed

\begin_layout Standard
United States Geological Survey
\end_layout

\end_inset

 integriert z.B.
 in ihrem 
\begin_inset Quotes eld
\end_inset

The National Map
\begin_inset Quotes erd
\end_inset

-Projekt mit Hilfe von OGC-Standards geografische Daten aus den unterschiedlichs
ten Quellen in einer GIS-Anwendung 
\begin_inset LatexCommand \cite{reed:2005}

\end_inset

.
\end_layout

\begin_layout Standard
Zwei von dem OGC entwickelte Standards werden durch in diesem Projekt eingesetzt
en Softwarekomponenten implementiert:
\end_layout

\begin_layout Itemize

\emph on
OGC Simple Features Specification For SQL 
\emph default

\begin_inset LatexCommand \cite[SFS]{ogc:1999}

\end_inset


\newline
Diese Spezifikation definiert, wie ein SQL-DBMS um eine geometrische Komponente
 erweitert werden kann.
 Die Datenbank muss dazu geometrische Daten speichern, aktualisieren und
 Abfragen in Bezug auf deren Topologie durchführen können.
 Der Standard spezifiziert auch Koordinatenprojektionen auf geografischen
 Daten.
 
\end_layout

\begin_layout Itemize

\emph on
Web Map Service 
\emph default

\begin_inset LatexCommand \cite[WMS]{ogc:2004}

\end_inset


\newline
WMS bezeichnet einen Dienst, der in der Lage ist, geografische Informationen
 in eine digitale Karte umzuwandeln.
 Laut Definition handelt es sich hierbei nicht mehr um reine Geodaten.
 Karten sind immer grafische Darstellungen, die entweder mit Bitmaps oder
 Vektorgrafiken realisiert sind.
 Ein WMS muss nach diesem Standard folgende Operationen bereitstellen:
\end_layout

\begin_deeper
\begin_layout Itemize

\emph on
GetCapabilities
\newline

\emph default
Auf diese Anfrage hin gibt der WMS ein XML-Dokument mit den angebotenen
 Informationen zurück.
 Es beinhaltet unter anderem Metadaten des Dienstes, Auskunft über unterstützte
 Kartenprojektionen und angebotene Kartenebenen.
 
\end_layout

\begin_layout Itemize

\emph on
GetMap
\newline

\emph default
Dieser Request liefert eine digitale Karte zurück.
 Diese kann beispielsweise nur einen Ausschnitt der angebotenen Region mit
 einer Teilmenge der möglichen Ebenen darstellen.
\end_layout

\begin_layout Itemize

\emph on
GetFeatureInfo
\emph default
 (optional)
\newline
Ein WMS, der diese Operation unterstützt, erlaubt es, Attributinforma
tionen (siehe Abschnitt 
\begin_inset LatexCommand \ref{sub:Anf-Geografisches-Informationssystem}

\end_inset

) an beliebigen Positionen der mit 
\emph on
GetMap
\emph default
 erzeugten Karte abzufragen.
 
\end_layout

\end_deeper
\begin_layout Standard
Ramsey 
\begin_inset LatexCommand \cite{ramsey:2005}

\end_inset

 gibt in 
\begin_inset Quotes eld
\end_inset

The State of Open Source GIS
\begin_inset Quotes erd
\end_inset

 einen umfassenden Überblick der zur Zeit verfügbaren Softwarelösungen für
 freie Geoinformationssysteme.
 Das System 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 nutzt folgende Werkzeuge aus diesem Bereich:
\end_layout

\begin_layout Subsubsection
PostGIS
\end_layout

\begin_layout Standard
PostGIS erweitert PostgreSQL mit geografischen Fähigkeiten:
\end_layout

\begin_layout Itemize
Speichern von geometrischen Objekten (point, line, polygon, multipoint,
 multiline, multipolygon, geometrycollections)
\end_layout

\begin_layout Itemize
Erzeugen von räumlichen Indizes
\end_layout

\begin_layout Itemize
Projizieren zwischen verschiedenen Koordinatensystemen mittels der Bibliothek
 PROJ.4 
\begin_inset LatexCommand \cite{proj4:05}

\end_inset


\end_layout

\begin_layout Itemize
Abfragen von topologischen Relationen mittels der GEOS-Bibliothek 
\begin_inset LatexCommand \cite{geos:05}

\end_inset


\end_layout

\begin_layout Itemize
Im- und Exportieren von geografischen Daten
\end_layout

\begin_layout Standard
PostGIS implementiert die SFS des OGC in großen Teilen.
 Viele andere Open-Source-Projekte nutzen PostgreSQL/PostGIS als geometrische
 Datenbank.
\end_layout

\begin_layout Subsubsection
UMN MapServer
\end_layout

\begin_layout Standard
Der UMN MapServer ist eine Entwicklung der University of Minnesota, Minneapolis.
 Er ist kein vollständiges GI-System.
 Schon der Name hebt hervor, dass dieser Server 
\begin_inset Quotes eld
\end_inset

nur
\begin_inset Quotes erd
\end_inset

 Karten ausgibt.
 In dieser Disziplin überzeugt das Projekt in Bezug auf Geschwindigkeit
 sowie die Vielzahl an implementierten Standards und unterstützten Datenformaten.
 
\end_layout

\begin_layout Standard
Der Mapserver implementiert den WMS-Standard einschließlich der Version
 1.1.1.
 Mit den im vorigen Abschnitt beschriebenen Operationen erfüllt er bereits
 einen Teil der auf Seite 
\begin_inset LatexCommand \pageref{sub:Anf-Geografisches-Informationssystem}

\end_inset

 festgelegten Anforderungen an die GIS-Komponente.
 Abbildung 
\begin_inset LatexCommand \ref{fig:Mapserver-WMS}

\end_inset

 zeigt die Kommunikation einer WMS-Client-Anwendung mit dem MapServer.
 Der Server beantwortet die 
\emph on
GetCapabilities
\emph default
-Anfrage indem er die in einer Konfigurationsdatei (siehe auch Listing 
\begin_inset LatexCommand \vref{lst:mapserver_simple}

\end_inset

) festgelegte Kartendefinition als XML-Dokument ausliefert.
 Der Client fordert mittels GetMap bestimmte Ebenen als GIF-Grafik an.
 Der MapServer erzeugt anhand der Geo- und Attributinformationen aus der
 Datenbank ein Bild und liefert es zurück.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/mapserver.eps
	width 80col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Mapserver-WMS}

\end_inset

Mapserver in seiner Funktion als WMS
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
GeoTools
\end_layout

\begin_layout Standard
GeoTools 
\begin_inset LatexCommand \cite{geotools:2005}

\end_inset

 ist eine Java-basierte Open Source GIS-Bibliothek.
 Das Projekt implementiert die vom OGC verabschiedeten Standards.
 Es vereinfacht damit die Entwicklung von standardisierter GIS-Software
 in Java.
 
\end_layout

\begin_layout Standard
GeoTools stellt in diesem Projekt nur die initiale Verbindung zu dem WMS
 des MapServers her, um die Informationen über die verfügbaren Kartenebene
 zu erlangen.
\end_layout

\begin_layout Subsection
Statistiksoftware
\end_layout

\begin_layout Subsubsection
\begin_inset LatexCommand \label{sub:SaTScan}

\end_inset

SaTScan
\end_layout

\begin_layout Standard
Die Software SaTScan analysiert räumliche, zeitliche und raum-zeitliche
 Daten mit Hilfe der entsprechenden statistischen Analysemethode.
 Martin Kulldorff hat das Werkzeug für die folgenden in gegenseitiger Beziehung
 stehenden Aufgaben entwickelt 
\begin_inset LatexCommand \cite{kulldorff:2005}

\end_inset

:
\end_layout

\begin_layout Itemize
Überwachung von Erkrankungen durch die Identifizierung von räumlichen oder
 raum-zeitlichen Clustern und die Auswertung deren statistischer Signifikanz.
\end_layout

\begin_layout Itemize
Überprüfung, ob sich Erkrankungsfälle zufällig über Raum, Zeit oder beide
 Dimensionen verteilen.
\end_layout

\begin_layout Itemize
Auswertung der statistischen Signifikanz alarmierend erscheinender Erkrankungshä
ufungen.
\end_layout

\begin_layout Itemize
Identifizierung von Erkrankungsausbrüchen durch regelmäßige Analyse der
 aktuellsten Falldaten.
\end_layout

\begin_layout Standard
SaTScan ist in der Epidemiologie der de facto-Standard, wenn es um die Identifiz
ierung von spatio-temporalen Erkrankungs-Clustern geht 
\begin_inset LatexCommand \cite{anselin:2004}

\end_inset

.
 
\end_layout

\begin_layout Subsubsection
\begin_inset LatexCommand \label{sub:R}

\end_inset

R
\end_layout

\begin_layout Standard
R 
\begin_inset LatexCommand \cite{r:2005}

\end_inset

 ist eine Programmiersprache und Laufzeitumgebung für statistische Berechnungen
 und Visualisierungen.
 Seine leichte Erweiterbarkeit hat dazu geführt, dass es diverse statistische
 Methoden zur Datenanalyse unterstützt.
 R kann unter anderem komplexe Zusammenhänge anhand verschiedenster Diagrammtype
n veranschaulichen.
\end_layout

\begin_layout Standard
Im Zusammenhang mit einem Web-basierten System lässt sich R leider nur bedingt
 einsetzen.
 Die eigentliche Softwareumgebung ist ein Kommandozeilenprogramm mit optionaler
 grafischer Ausgabe.
 
\end_layout

\begin_layout Standard
Abhilfe schafft die von Joseph Conway entwickelte Software PL/R 
\begin_inset LatexCommand \cite{conway:2005}

\end_inset

.
 Hierbei handelt es sich um eine prozedurale Sprache, die PostgreSQL um
 die Funktionen von R erweitert.
 Die unterstützte Funktionalität reicht von der Berechnung des Medians einer
 Zahlenreihe bis zu der Erzeugung von komplexen Grafiken.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Konzepte
\end_layout

\begin_layout Standard
Das folgende Kapitel beschreibt alle wichtigen Konzepte, die beim Entwurf
 und der Entwicklung des Softwaresystems 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 verwendet wurden.
 Das Hauptaugenmerk ist dabei auf die client- und serverseitige Anwendung
 zur Erzeugung von epidemiologischen Karten gerichtet.
 Die Applikation soll Änderungen der dargestellten Karten leicht ermöglichen.
 Zudem muss sie sich mit möglichst wenig Aufwand auf andere Krankheitserreger
 und/oder andere Länder übertragen lassen können.
\end_layout

\begin_layout Standard
Der erste Abschnitt beschreibt den Zusammenhang und die Einzelheiten der
 client- und serverseitigen Komponenten.
 Abschnitt 
\begin_inset LatexCommand \ref{sec:Leichte-Erweiterbarkeit}

\end_inset

 stellt die Bereiche vor, in denen die Architektur erweitert werden kann.
 Das letzte Unterkapitel behandelt Faktoren, die bei der Integration des
 MapServers als externes Werkzeug berücksichtigt werden müssen.
\end_layout

\begin_layout Section
Datenmodell, Präsentation und Programmsteuerung
\end_layout

\begin_layout Standard
Die Überschrift dieses Abschnittes steht für die Übersetzung des Begriffs
 
\begin_inset Quotes eld
\end_inset

Model-View-Controller
\begin_inset Quotes erd
\end_inset

 (MVC).
 Dieses Architekturmuster sieht folgende Komponenten vor: 
\end_layout

\begin_layout Itemize
Das Datenmodell (Model) sind alle für eine Anwendung nutzbaren Informationen.
 Über das Modell hat sie beispielsweise Zugang zu einer Datenbank.
\end_layout

\begin_layout Itemize
Die Präsentation (View) ist die für den Benutzer sichtbare Anwendung.
 Sie bildet das Datenmodell in einer visuell erfassbaren Form ab.
\end_layout

\begin_layout Itemize
Die Programmsteuerung (Controller) steht zentral.
 Sie hat Zugriff auf das Datenmodell und steuert alle Prozesse.
\end_layout

\begin_layout Standard
Der MVC-Ansatz ermöglicht die Entwicklung von modularen, erweiterbaren Anwendung
en.
 Jede Teilkomponente übernimmt dabei klar definierte Aufgaben.
 Für die Webanwendung dieses epidemiologischen GI-Systems sind die einzelnen
 Verantwortlichkeiten wie folgt verteilt:
\end_layout

\begin_layout Itemize
Der MapServer und JavaBeans 
\begin_inset LatexCommand \cite{javabeans:2005}

\end_inset

 bilden mit der Datenbank das Modell.
 
\end_layout

\begin_layout Itemize
Die in OpenLaszlo implementierte RIA, über JSP erzeugte HTML-Dokumente und
 digitale Grafiken übernehmen die Präsentation.
 
\end_layout

\begin_layout Itemize
Struts steuert die serverseitigen Abläufe.
\end_layout

\begin_layout Standard
Abbildung 
\begin_inset LatexCommand \ref{fig:Verwendung-des-MVC-Architekturmusters}

\end_inset

 verdeutlicht das Zusammenspiel der Komponenten.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/mvc.eps
	lyxscale 70
	width 100col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Verwendung-des-MVC-Architekturmusters}

\end_inset

Verwendung des MVC-Architekturmusters in EpiDeGIS
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Globale-und-benutzerspezifische}

\end_inset

Globale und benutzerspezifische Daten
\end_layout

\begin_layout Subsubsection
Datenbankkonzepte
\end_layout

\begin_layout Standard
Das PostgreSQL Datenbanksystem speichert alle im gesamten System benötigten
 und entstehenden Informationen.
 Diese sind in mehreren Tabellen abgelegt.
 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 setzt zwei Konzepte ein, um Änderungsmöglichkeiten des Systems auf Datenbankebe
ne zu gewährleisten.
\end_layout

\begin_layout Subparagraph
Übertragbarkeit auf andere Länder und/oder geografische Hierarchien
\end_layout

\begin_layout Standard
Geografische Daten stehen zueinander immer in einer topologischen Beziehung.
 Bei Flächendaten spiegelt diese häufig die Hierarchie wider.
 
\end_layout

\begin_layout Standard
Für Deutschland lautet sie z.B.
 
\emph on
Bundesgebiet
\emph default
 
\begin_inset Formula $\rightarrow$
\end_inset

 
\emph on
Länder
\emph default
 
\begin_inset Formula $\rightarrow$
\end_inset

 
\emph on
Regierungsbezirke
\emph default
 
\begin_inset Formula $\rightarrow$
\end_inset

 
\emph on
Landkreise
\emph default
.
 Auch andere Länder bzw.
 Strukturen sind räumlich und organisatorisch auf diese Weise geordnet (z.B.
 
\emph on
Universitätsklinikum Würzburg
\emph default
 
\begin_inset Formula $\rightarrow$
\end_inset

 
\emph on
Abteilungen/Kliniken
\emph default
 
\begin_inset Formula $\rightarrow$
\end_inset

 
\emph on
Gebäude
\emph default
 
\begin_inset Formula $\rightarrow$
\end_inset

 
\emph on
Stockwerke
\emph default
 
\begin_inset Formula $\rightarrow$
\end_inset

 
\emph on
Zimmer
\emph default
).
 
\end_layout

\begin_layout Standard
Die Datenbank bildet solche Strukturen mittels zwei Tabellen ab.
 Eine speichert die Hierarchie und die verschiedenen Arten von erfassten
 Strukturen.
 Die zweite Tabelle enthält die zu bestimmten Typen gehörenden polygonalen
 Daten (siehe Abbildung 
\begin_inset LatexCommand \ref{fig:Hierarchische-Speicherung-von-Gebieten}

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/db_gebiete.eps
	lyxscale 50
	width 80col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Hierarchische-Speicherung-von-Gebieten}

\end_inset

Hierarchische Speicherung von Gebietsinformationen
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Daten lassen sich bei dieser Struktur leicht um ein anderes Land erweitern:
 Holländische Epidemiologen wenden für Meningokokken ebenfalls die PorA/FetA
 -Feintypisierungsmethode an.
 Integration der holländischen Daten erfordert eine Definition der Hierarchie
 mit den drei Einträgen 
\emph on
Nederlandse
\emph default
 
\begin_inset Formula $\rightarrow$
\end_inset

 
\emph on
Provincies
\emph default
, 
\begin_inset Formula $\rightarrow$
\end_inset

 
\emph on
Gemeentes
\emph default
 in der Tabelle der Gebietstypen.
 Im zweiten Schritt müssen die Grenzdaten der jeweiligen Bereiche unter
 den Gebieten abgelegt werden.
\end_layout

\begin_layout Subparagraph
Erweiterbarkeit der epidemiologischen Datenstruktur um beliebig viele Attribute
\end_layout

\begin_layout Standard
Das Datenbankkonzept erlaubt es, die gepeicherten Falldaten um beliebige
 Attribute zu erweitern.
 
\end_layout

\begin_layout Standard
Es legt dabei in einer Tabelle zu jedem Fall nur solche Daten ab, die auf
 alle Proben von Krankheitserregern zutreffen: 
\end_layout

\begin_layout Itemize
eine eindeutige Nummer, die intern (z.B.
 im NRZM) eine Zuordnung zu detaillierten Probedaten erlaubt
\end_layout

\begin_layout Itemize
das Alter
\end_layout

\begin_layout Itemize
das Geschlecht
\end_layout

\begin_layout Itemize
das Eingangsdatum der Probe im Labor
\end_layout

\begin_layout Itemize
das Entnahmedatum beim Arzt
\end_layout

\begin_layout Itemize
die Koordinaten (Länge und Breite) des Ortes, in dem der Fall aufgetreten
 ist
\end_layout

\begin_layout Itemize
die eindeutige Kennzeichnung des Erregertyps (z.B.
 der Feintyp bei Meningokokken)
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 setzt Attribute ein, um spezifische Merkmale eines Erregertyps außerhalb
 der Grundstruktur abzulegen: 
\end_layout

\begin_layout Standard
Ein vom NRZM ermittelter Feintyp hat beispielsweise die Struktur 
\emph on
{Serogruppe}:P1.{PorA}:F{FetA}
\emph default
.
 Die Kombination der einzelnen Attribute Serogruppe, PorA und FetA kennzeichnet
 einen Meningokokkenerreger eindeutig.
 Die Serogruppe für sich ist jedoch eine Gemeinsamkeit mehrerer Feintypen.
\end_layout

\begin_layout Standard
Die Datenbank soll diesen Zusammenhang speichern, ohne die obigen epidemiologisc
hen Grunddaten um eine Spalte mit der Serogruppe ergänzen zu müssen.
 Das gelingt, indem sie für jeden Erregertyp beliebig viele Attribute zulässt.
 Der konkrete Feintyp 
\emph on
B:P1.7-2,4:F1-5
\emph default
 besitzt dabei ein Attribut mit dem Namen 
\begin_inset Quotes eld
\end_inset

Serogruppe
\begin_inset Quotes erd
\end_inset

, das den Wert 
\begin_inset Quotes eld
\end_inset

B
\begin_inset Quotes erd
\end_inset

 trägt.
 Genauso wäre in diesem Fall ein Attribut 
\begin_inset Quotes eld
\end_inset

Impfstoff für Deutschland vorhanden
\begin_inset Quotes erd
\end_inset

 mit dem Wert 
\begin_inset Quotes eld
\end_inset

Nein
\begin_inset Quotes erd
\end_inset

 denkbar (siehe Abbildung 
\begin_inset LatexCommand \ref{fig:Definition-von-beliebig}

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/db_attribute.eps
	lyxscale 80
	width 100col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Definition-von-beliebig}

\end_inset

Definition von beliebig vielen Attributwerten für einen Erregertyp
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Datenbank erweitert bisher nur den Erregertyp um Attribute.
 Für einzelne Erkrankungsfälle könnte das gleiche Konzept eingesetzt werden,
 um z.B.
 den Wert eines Attributes 
\begin_inset Quotes eld
\end_inset

Antibiotikaresistenz
\begin_inset Quotes erd
\end_inset

 festzuhalten.
\end_layout

\begin_layout Subsubsection
Daten im Servletcontainer
\end_layout

\begin_layout Standard
Die Internet-Applikation muss Daten über den Anwendungszustand aus Sicht
 des Benutzers oder des Gesamtsystems serverseitig abspeichern.
 Der Java Servlet Container definiert zum Ablegen dieser Informationen unterschi
edliche Bereiche 
\begin_inset LatexCommand \cite{struts_doc:2005}

\end_inset

:
\end_layout

\begin_layout Description

\emph on
Page
\emph default
 Diese Daten sind nur während des Verlaufs einer einzigen JSP gültig.
\end_layout

\begin_layout Description

\emph on
Request
\emph default
 Diese Informationen sind für die Dauer einer Anfrage im System.
 Diese verläuft u.
 U.
 über mehrere Seiten/Komponenten.
\newline
Wenn der Benutzer z.B.
 den sichtbaren Kartenausschnitt verschieben möchte, übermittelt die RIA
 den Wunsch an den Server.
 Sobald dieser die Aktion ausgeführt hat, löscht er die mit dem Request
 verknüpften Informationen (hier 
\begin_inset Formula $\Delta x$
\end_inset

 und 
\begin_inset Formula $\Delta y$
\end_inset

 der angeforderten Kartenverschiebung).
\end_layout

\begin_layout Description

\emph on
Session
\emph default
 Alle in diesem Bereich abgelegten Daten bleiben so lange gültig, wie der
 Benutzer online mit der Anwendung interagiert.
 Über die Konfiguration des Tomcat Servers lässt sich festlegen, wie viele
 Minuten die Session-Daten bei Inaktivität erhalten bleiben.
\end_layout

\begin_layout Description

\emph on
Application
\emph default
 Für die ganze Anwendung zugängliche Daten werden hier gespeichert.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Präsentation-der-Informationen}

\end_inset

Präsentation der Informationen
\end_layout

\begin_layout Subsubsection
Flashanwendung mit OpenLaszlo
\end_layout

\begin_layout Standard
Die Abbildung 
\begin_inset LatexCommand \ref{fig:Verwendung-des-MVC-Architekturmusters}

\end_inset

 führt die Rich Internet Application als View auf.
 Der Anwender würde sie wahrscheinlich als View und Controller bezeichnen.
 So präsentiert sie ihm doch den Zustand des Systems bzw.
 seiner Session und erlaubt gleichzeitig Kontrolle durch Interaktion.
 Eine klarere Einordnung behandelt Client und Server getrennt.
\end_layout

\begin_layout Standard
Vom Server gesehen ist auch die RIA nichts anderes als eine View-Komponente.
 Im Moment einer Anfrage wird sie von dem Laszlo-Servlet kompiliert und
 an das Flash-Browser-Plugin auf dem Rechner des Benutzers ausgegeben.
 
\end_layout

\begin_layout Standard
Sobald die Laszlo-Anwendung beim Benutzer geladen ist, bedient sie sich
 eines weiteren serverseitigen Views.
 Dieses stellt den für diesen Benutzer gültigen Systemzustand als XML dar.
 Die Technik von OpenLaszlo generiert die Benutzeroberfläche anhand dieser
 Information dynamisch (Abschnitt 
\begin_inset LatexCommand \ref{sub:Dynamischer-Aufbau-der-GUI}

\end_inset

).
 
\end_layout

\begin_layout Standard
Der Server erzeugt auch die Darstellung der Karten, welche die RIA ihrerseits
 wieder anzeigt.
 Weiterhin überträgt sie jede Interaktion des Anwenders an den Server und
 kontrolliert damit auch den Programmfluss.
 
\end_layout

\begin_layout Standard
Auf dem Client-Rechner bildet die Anwendung damit eine eigene MVC-Architektur.
 Ihr Controller gibt allerdings alle Eingaben des Benutzers an den Server
 weiter und reagiert auf dessen Antworten.
\end_layout

\begin_layout Subsubsection
HTML-Karte für den Druck
\end_layout

\begin_layout Standard
Flash-Anwendungen bieten dem Anwender zwar viele Möglichkeiten zur Interaktion,
 die Ausgabe der angezeigten Seite über einen Drucker ist allerdings nur
 im Rahmen der durch den Browser bereitgestellten Funktionen möglich.
 Zudem ist es bei einem epidemiologischen GI-System nicht im Interesse das
 Anwenders, das Abbild einer Benutzeroberfläche auszudrucken.
 Vielmehr sollte ein Bericht die aktuell sichtbare Karte, die Legende und
 Informationen zu den eingestellten Filtern ausgeben.
 
\end_layout

\begin_layout Standard
Eine dynamisch über JavaServer Pages generierte HTML-Seite erfüllt diese
 Funktion.
 Sie lässt sich ausdrucken oder lokal speichern.
 Struts ist dafür verantwortlich, die JSP mit Daten zu versorgen.
 Der Server muss dafür zu jeder Zeit in einem aus Anwendersicht gültigen
 Zustand sein.
 
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Wohldefinierte-Zustandsänderungen}

\end_inset

Wohl definierte Zustandsänderungen
\end_layout

\begin_layout Standard
OpenLaszlo motiviert den Entwickler dazu, die Programmlogik in der Clientanwendu
ng zu implementieren.
 Dies entspricht dem Konzept von RIAs, indem es verzögerungsanfällige Kommunikat
ion zwischen Client und Server minimiert.
 
\end_layout

\begin_layout Standard
Diese Arbeit setzt, wie unter 
\begin_inset LatexCommand \ref{sub:Präsentation-der-Informationen}

\end_inset

 erläutert, die clientseitige Anwendung nur als eine Form der Präsentation
 ein.
 Das schafft ein konsistentes Gesamtsystem, dessen Zustand nur der Server
 kontrolliert.
 Die Laszlo-Anwendung fungiert dabei als Schnittstelle, die alle Eingaben
 des Benutzers an den serverseitigen Controller (Struts) übermittelt.
 Die Kommunikation erfolgt über HTTP-Requests und zurückgegebene XML-Dokumente.
 
\end_layout

\begin_layout Standard
Der Vorteil eines definierten serverseitigen Zustandes liegt darin, dass
 verschiedene Präsentationen ihn zu jeder Zeit gleich abbilden.
 Ein konkretes Beispielszenario ist folgendes:
\end_layout

\begin_layout Standard
Der Anwender startet die RIA und arbeitet damit.
 Er lässt sich beispielsweise auf einer Karte alle Erkrankungsfälle von
 2-5 jährigen im Jahr 2004 anzeigen.
 Der Benutzer öffnet in seinem Browser versehentlich eine andere Website
 und schließt dabei die Flash-Anwendung.
 Sollte er sie noch einmal öffnen bevor sein Session-Timeout abgelaufen
 ist, so sind alle festgelegten Filter noch eingestellt, obwohl die clientseitig
e Anwendung bereits beendet war.
\end_layout

\begin_layout Section
\begin_inset LatexCommand \label{sec:Leichte-Erweiterbarkeit}

\end_inset

Leichte Erweiterbarkeit
\end_layout

\begin_layout Standard
Ein wichtiges Kriterium bei der Planung dieser Arbeit war es, ein epidemiologisc
hes Geoinformationssystem zu schaffen, das erweiterbar ist.
 Abschnitt 
\begin_inset LatexCommand \ref{sub:Globale-und-benutzerspezifische}

\end_inset

 hat Datenbankkonzepte vorgestellt, die einen Ausbau der abgelegten geografische
n und epidemiologischen Daten zulassen.
\end_layout

\begin_layout Standard
In diesem Abschnitt soll es um Erweiterungen des Systems gehen, die im Java-Quel
lcode, beim MapServer oder an den Schnittstellen der Webanwendung ansetzen.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Dynamische-Karten}

\end_inset

Dynamische Karten- und Ebenenparameter
\end_layout

\begin_layout Standard
Eine Reihe von Java-Klassen in diesem System modelliert den abstrakten Datentyp
 einer Karte.
 Sie enthält mindestens eine Ebene und hat beliebig viele 
\begin_inset Quotes eld
\end_inset

Kartenparameter
\begin_inset Quotes erd
\end_inset

.
 Eine Ebene kann 
\begin_inset Quotes eld
\end_inset

Ebenenparameter
\begin_inset Quotes erd
\end_inset

 besitzen (Abbildung 
\begin_inset LatexCommand \ref{fig:Komposition-von-Karten}

\end_inset

).
 Die Parameter sind eine Ansammlung von möglichen Werten für ein Attribut,
 das entweder der ganzen Karte oder nur einzelnen Ebenen zugeordnet ist.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/uml_karte.png
	lyxscale 20
	width 70col%
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Komposition-von-Karten}

\end_inset

Komposition von Karten, Ebenen und Parametern 
\begin_inset LatexCommand \cite{poseidon:2005}

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Ein für die ganze Karte gültiger Auswahlparameter gibt beispielsweise an,
 welche geografischen Teilgebiete vergrößert betrachtet werden können.
 Er enthält z.B.
 für Deutschland die Werte 
\emph on
Bundesgebiet, Baden-Württemberg, Bayern, \SpecialChar \ldots{}
, Thüringen
\emph default
.
 Wenn der Anwender ein anderes Gebiet auswählt, muss das System alle Kartenebene
n aktualisieren.
 
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
width "45col%"
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/srceen_parameter.png
	lyxscale 50
	width 30col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Konkrete-Umsetzung-Parameter}

\end_inset

Konkrete Umsetzung des Parameterkonzeptes in der Laszlo-Anwendung - oben
 ein Kartenparameter (Area), unten ein Ebenenparameter (Finetype).
\end_layout

\end_inset

Ebenenparameter arbeiten nach dem gleichen Prinzip.
 Von ihrem Attributwert ist allerdings nur eine Ebene abhängig.
 Ein Beispiel ist die Feintypen-Ebene der epidemiologischen Karte für das
 NRZM.
 Sie zeigt alle durch einen Feintyp verursachten Erkrankungsfälle im Gebiet
 an.
 Der zugehörige Parameter enthält damit alle durch den Anwender auswählbaren
 Feintypen.
\end_layout

\begin_layout Standard
Das Parameterkonzept sichert Erweiterbarkeit im Hinblick auf Filter, anhand
 derer die Kartendarstellung beeinflusst werden kann.
 Die RIA bietet Parameter z.B.
 in Form von Dropdown-Listen an.
 Dabei sind Kartenparameter auf der Benutzeroberfläche immer sichtbar, während
 Ebenenparameter nur im Bereich einer Ebene erscheinen (siehe Abbildung
 
\begin_inset LatexCommand \ref{fig:Konkrete-Umsetzung-Parameter}

\end_inset

).
\end_layout

\begin_layout Standard
Die Implementierung dieses Konzeptes hat zu Schwierigkeiten geführt, aufgrund
 derer sich die ursprüngliche Bedeutung von Karten- und Ebenenparametern
 verändert.
 Der Begriff des Kartenparameters ist in der grafischen Benutzeroberfläche
 ein vom Anwender einstellbarer Wert, dessen Steuerelement immer sichtbar
 ist.
 Für den Ebenenparameter ist dieses einer Ebene untergeordnet.
 Ein Kartenparameter ist dabei aber nicht zwangsläufig global für alle Ebenen
 verantwortlich und der Parameter einer Ebene kann seinerseits auch andere
 Ebenen beeinflussen.
\end_layout

\begin_layout Standard
Ein Beispiel veranschaulicht die Situation: Die Karte enthält zwei Ebenen.
 Eine zeigt Meningokokkenfälle gruppiert nach Serogruppen, die andere die
 zugehörige Inzidenz nach Landkreisen an.
 Ändert der Anwender die Serogruppe, so muss die Inzidenz-Ebene ebenfalls
 aktualisiert werden.
 In der Implementierung ist dieses Problem mit Platzhalter-Parametern gelöst,
 die einen existierenden Parameter referenzieren.
 Diese Implementierung bietet allerdings noch Raum für Verbesserungen.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Änderung-der-Kartendefinition}

\end_inset

Änderbarkeit der Kartendefinition des MapServers
\end_layout

\begin_layout Standard
Abbildung 
\begin_inset LatexCommand \vref{fig:Mapserver-WMS}

\end_inset

 zeigt, dass der MapServer die Konfiguration der von ihm angebotenen Karten
 über eine Definitionsdatei (
\begin_inset Quotes eld
\end_inset

MapFile
\begin_inset Quotes erd
\end_inset

) einliest.
 Diese legt in einem definierten Format 
\begin_inset LatexCommand \cite{doyon:2005}

\end_inset

 alle Eigenschaften der über den Server publizierten Karte fest.
 
\end_layout

\begin_layout Standard
Dazu zählen unter anderem:
\end_layout

\begin_layout Itemize
Metadaten über den angebotenen Dienst (Name, Beschreibung)
\end_layout

\begin_layout Itemize
Globale Einstellungen der Karte (verwendetes Koordinatensystem, die Grenzkoordin
aten des abgebildeten Gebietes, etc.)
\end_layout

\begin_layout Itemize
Definitionen der verschiedenen Kartenebenen
\end_layout

\begin_layout Standard
Ein Anbieter von epidemiologischen Informationen muss für Erweiterungen
 in der Karte hauptsächlich die Ebeneneinstellungen ändern.
 Diese definieren alle vom Anwender später sichtbaren Kartenelemente.
 Das sind beispielsweise die eingesetzten Farben und Symbole, die ein Merkmal
 auf der Karte auszeichnen, oder der Name einer Ebene.
 
\end_layout

\begin_layout Standard
Der wichtigste Bestandteil jeder Ebene ist die Definition der Datenquelle.
 Beim MapServer können an dieser Stelle beliebige Abfragen an die Datenbank
 stehen, deren Änderung vielfältige Möglichkeiten zur Einflussnahme in die
 Kartenerzeugung bietet (siehe Abschnitt 
\begin_inset LatexCommand \ref{sec:Definition-von-Karten}

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 integriert den MapServer auf die Art, dass Änderungen an der Kartendefinition
 grundsätzlich sofort
\begin_inset Foot
status collapsed

\begin_layout Standard
sobald ein neuer Benutzer die Anwendung öffnet
\end_layout

\end_inset

 in der Benutzeroberfläche sichtbar sind.
 Eine statische Ebene 
\begin_inset Quotes eld
\end_inset

Flüsse
\begin_inset Quotes erd
\end_inset

, die in der 
\begin_inset Quotes eld
\end_inset

MapFile
\begin_inset Quotes erd
\end_inset

 definiert wird, ließe sich somit augenblicklich einsetzen.
 
\end_layout

\begin_layout Standard
Im Falle einer parametrisierbaren Ebene, die beispielsweise die Erkrankungsfälle
 als Punkte begrenzt auf bestimmte Altersgruppen anzeigt, sind nur geringfügig
 mehr Eingriffe im System notwendig.
 Die Nutzung eines bereits bestehenden bzw.
 die Definition eines neuen Parameters wird über Änderungen im Java-Code
 gesteuert.
\end_layout

\begin_layout Standard
Die Definitionsdatei des MapServers erlaubt vielfältige Eingriffe in die
 Kartenerzeugung.
 Sie lässt sich dank eines beschreibenden textuellen Dateiformates auch
 von Personen anpassen, die selbst nur wenig Programmiererfahrung haben.
 Zusammen mit Java- und SQL-Kenntnissen erlaubt 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 den Anwendern noch weitreichendere Änderungen des Systems.
\end_layout

\begin_layout Subsection
Aufteilung der Systemkomponenten in Pakete
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/uml_pakete.png
	lyxscale 20
	width 50col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Paketdiagramm-des-EpiDeGIS-Systems}

\end_inset

Paketdiagramm des EpiDeGIS-Systems 
\begin_inset LatexCommand \cite{poseidon:2005}

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Pakete erlauben es, die Komponenten eines Softwaresystems zu größeren Einheiten
 zusammenzufassen.
 Das Paketdiagramm in Abbildung 
\begin_inset LatexCommand \ref{fig:Paketdiagramm-des-EpiDeGIS-Systems}

\end_inset

 zeigt die Aufteilung des in dieser Arbeit entwickelten Systems.
 
\end_layout

\begin_layout Standard
Die Klassen in den Paketen haben im Einzelnen folgende Aufgaben:
\end_layout

\begin_layout Subparagraph
Datenbank
\end_layout

\begin_layout Standard
Dieses Paket implementiert die Java-Schnittstelle zu der PostgreSQL-Datenbank.
 Die Implementierung basiert auf dem Prinzip des 
\begin_inset Quotes eld
\end_inset

Data Access Objects
\begin_inset Quotes erd
\end_inset

-Entwurfsmusters (DAO) von Sun 
\begin_inset LatexCommand \cite{dao:2005}

\end_inset

.
 Dieses Entwurfsmuster versteckt alle Zugriffe auf eine Datenbank vor dem
 Rest der Anwendung.
\end_layout

\begin_layout Standard
Alle Datenbankzugriffe in 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 laufen über dieses Paket.
 SQL-Code verschwindet damit komplett aus dem Java-Code aller anderen Klassen.
\end_layout

\begin_layout Subparagraph
Karten
\end_layout

\begin_layout Standard
Hier sind alle Klassen zusammengefasst, die für die Java-Repräsentation
 einer Karte benötigt werden.
 Sie implementieren die abstrakten Datentypen Karte, Ebenen und Parameter
 sowie die Kommunikation mit dem MapServer.
\end_layout

\begin_layout Subparagraph
Webanwendung
\end_layout

\begin_layout Standard
Die Webanwendung enthält alles, was der Tomcat-Server zum Ausführen der
 serverseitigen 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

-Komponente benötigt.
 Das ist die mit Struts implementierte Webanwendung, der Quellcode für die
 OpenLaszlo-Applikation und alle weiteren Ressourcen (JSP, CSS, Grafiken).
 Die Webanwendung verwendet das Karten-Paket als Schnittstelle zum Mapserver.
\end_layout

\begin_layout Subparagraph
SaTScan
\end_layout

\begin_layout Standard
Ein kleines Java-Programm ist für die automatische Ausführung von 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{SaTScan}
\end_layout

\end_inset

 zur Cluster-Identifizierung zuständig.
 Es ist in diesem Paket implementiert (siehe Abschnitt 
\begin_inset LatexCommand \vref{sec:Clusteranalysen-mit-SaTScan}

\end_inset

).
\end_layout

\begin_layout Subparagraph
Transfer und Import
\end_layout

\begin_layout Standard
Der Java-Code in diesen Paketen implementiert die Übertragung und den Import
 der Typisierungsdaten.
 Die Transfer-Komponente läuft clientseitig (z.B.
 im NRZM) ab, die Import-Anwendung nimmt auf dem Server die Daten entgegen
 und aktualisiert die Datenbank.
 
\end_layout

\begin_layout Subsection
Erweiterungen an externen Schnittstellen
\end_layout

\begin_layout Subsubsection
WMS des MapServers
\end_layout

\begin_layout Standard
Abschnitt 
\begin_inset LatexCommand \ref{sub:Geografische-Informationssysteme}

\end_inset

 stellt WMS als Schnittstelle zu Kartenservern vor und beschreibt die Umsetzung
 dieses Standards im Mapserver.
 Dank dieses Dienstes existiert in 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 eine bekannte Schnittstelle, über die beispielsweise eine Desktop-basierte
 GIS-Anwendung Karten des Systems abfragen kann.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/screen_udig.png
	lyxscale 30
	width 70col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Screenshot-Udig}

\end_inset

Screenshot einer Desktop-GIS-Anwendung die Ebenen aus EpiDeGIS einbindet
 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Während dieser Arbeit wurde diese Möglichkeit experimentell getestet.
 Abbildung 
\begin_inset LatexCommand \ref{fig:Screenshot-Udig}

\end_inset

 zeigt die Integration der epidemiologischen Daten des NRZM in der Desktop-GIS-A
nwendung uDig
\begin_inset Foot
status collapsed

\begin_layout Standard
User-friendly Desktop Internet GIS
\end_layout

\end_inset

 
\begin_inset LatexCommand \cite{udig:2005}

\end_inset

.
 Dieser Versuch demonstriert die Kommunikation mit dem MapServer über die
 WMS-Schnittstelle.
\end_layout

\begin_layout Subsubsection
XML-Repräsentation des Serverzustands
\end_layout

\begin_layout Standard
Die serverseitige Komponente der 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

-Webanwendung bietet eine 
\begin_inset ERT
status collapsed

\begin_layout Standard

XML-Re
\backslash
-prä
\backslash
-sen
\backslash
-tat
\backslash
-ion
\end_layout

\end_inset

 der angebotenen Karte.
 Diese enthält alle Ebenen und alle zulässigen Werte für die Parameter.
 
\end_layout

\begin_layout Standard
Externe Applikationen könnten diese Informationen verwenden, um ihrerseits
 mit dem System zu kommunizieren und die Karten zu nutzen.
\end_layout

\begin_layout Section
Kapselung des MapServers und Caching
\end_layout

\begin_layout Standard
Der MapServer ist ein mächtiges Werkzeug, um komplexe epidemiologische Karten
 zu generieren.
 Die Standardschnittstellen des WMS-Standards führen jedoch zu Datenschutzrisike
n, wenn dieser Server direkt über das Internet zugänglich wäre.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 kapselt ihn daher so ab, dass der direkte Zugriff nur über den serverseitigen
 Controller erfolgt (siehe Abbildung 
\begin_inset LatexCommand \ref{fig:Verwendung-des-MVC-Architekturmusters}

\end_inset

).
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Datenschutz-durch-indirekten}

\end_inset

Datenschutz durch indirekten Zugriff
\end_layout

\begin_layout Standard
Wie im Abschnitt 
\begin_inset LatexCommand \ref{sub:Dynamische-Karten}

\end_inset

 erläutert, setzt diese Arbeit das Konzept der 
\begin_inset Quotes eld
\end_inset

Parameter
\begin_inset Quotes erd
\end_inset

 ein, um Attributwerte für Karten und Ebenen zu definieren.
 
\end_layout

\begin_layout Standard
Die vom Anwender übermittelten Attribute werden auf Seiten des MapServers
 innerhalb der SQL-Abfragen eingesetzt, welche die Daten für eine Kartenebene
 zurückliefern.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[caption=SQL-Abfrage als Datenquelle für eine Kartenebene,label=l
st:mapserver_query,language=SQL]{./listings/mapserver_query.sql}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Listing 
\begin_inset LatexCommand \ref{lst:mapserver_query}

\end_inset

 zeigt eine SQL-Query, die alle Fälle aus der Datenbank holt, deren Meldedatum
 zwischen den Werten 
\family typewriter
%fromDate%
\family default
 und 
\family typewriter
%toDate%
\family default
 liegt.
 
\end_layout

\begin_layout Standard
Der MapServer ersetzt die Platzhalter mit den Werten von gleichnamigen,
 über HTTP-Get übermittelten Parametern.
 Der hier vereinfacht dargestellten URL 
\begin_inset LatexCommand \url{http://localhost/GetMap?fromDate=012005&toDate=102005}

\end_inset

 liefert eine Karte mit allen Fällen von Januar 2005 bis Oktober 2005 zurück.
\end_layout

\begin_layout Standard
Sollte ein Anwender direkten Zugriff auf den MapServer haben, wäre er aufgrund
 dieser Art der dynamischen Kartenerzeugung in der Lage, Parameterwerte
 anzugeben, die vom Anbieter der Informationen gar nicht vorgesehen sind.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 verhindert das durch einen indirekten, internen Zugriff auf den Mapserver.
 Der serverseitige Controller erlaubt nur Parameterwerte, die vorher in
 der Anwendung definiert wurden.
 
\end_layout

\begin_layout Standard
Die Implementierung für das NRZM setzt diesen Schutzmechanismus ein, um
 z.B.
 zu verhindern, dass ein Kartenausschnitt Berlin in voller Größe abbildet.
 Aus Datenschutzgründen darf für die Öffentlichkeit keine Zuordnungsmöglichkeit
 eines Erkrankungsfalls zu einem Stadtteil möglich sein.
 
\end_layout

\begin_layout Subsection
Optimierte Antwortzeiten durch Caching
\end_layout

\begin_layout Standard
Ein nützlicher Nebeneffekt der Abschottung des MapServers nach außen ist,
 dass sich dadurch gleich die Möglichkeit ergibt, die Geschwindigkeit der
 Kartenerzeugung zu verbessern.
\end_layout

\begin_layout Standard
Abschnitt 
\begin_inset LatexCommand \ref{sec:Definition-von-Karten}

\end_inset

 stellt Implementierungsbeispiele für Kartenebenen vor.
 Diese setzen teilweise komplexe topologische Abfragen an die PostGIS-Komponente
 der Datenbank ein und benötigen unter Umständen eine längere Ausführungszeit
 (über eine Sekunde).
\end_layout

\begin_layout Standard
Durch die Implementierung eines Zwischenspeichers an der Schnittstelle zum
 MapServer lässt sich die Zeit für die Kartenerzeugung deutlich verringern.
 
\end_layout

\begin_layout Standard
Der Cache-Mechanismus nimmt dazu den Hashwert des URL, der den MapServer
 veranlasst, eine bestimmte Karte auszugeben.
 Unter diesem Schlüssel wird auf dem Java Server bei der ersten Anfrage
 die Bilddatei der erzeugten Karte und der dabei verwendete URL abgelegt.
 
\end_layout

\begin_layout Standard
Bei einer folgenden Anfrage für die gleiche Karte kann das Bild direkt zurückgeg
eben werden, ohne es erneut über den MapServer erzeugen zu müssen.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/cache_graph.eps
	lyxscale 50
	width 90col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Dauer-der-Kartenerzeugung}

\end_inset

Graf der Antwortzeiten mit und ohne Cache
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der Graph in Abbildung 
\begin_inset LatexCommand \ref{fig:Dauer-der-Kartenerzeugung}

\end_inset

 zeigt die Ergebnisse einer Messung von Antwortzeiten.
 Hierbei haben fünf Threads parallel ein vorher aufgezeichnetes Nutzerverhalten
 als Last für den Server erzeugt.
 Der Test wurde einmal mit und ohne Cache durchgeführt.
 Der Anstieg zu Beginn der Kurve entsteht durch das Hochfahren der Belastung
 von einem auf fünf simulierte Benutzer.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="4">
<features>
<column alignment="left" valignment="top" rightline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row bottomline="true">
<cell alignment="left" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\emph on
Durchschnitt
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\emph on
Median
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\emph on
Maximum
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
ohne Cache
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
2525 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
1234 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
25094 ms
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
mit Cache
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
799 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
578 ms
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
9781 ms
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Werte-für-Antwortzeiten}

\end_inset

Werte für die Antwortzeiten mit und ohne Cache
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Grafik und die Werte in Tabelle 
\begin_inset LatexCommand \ref{tab:Werte-für-Antwortzeiten}

\end_inset

 zeigen deutlich, dass die direkte Anfrage an den Mapserver mehr Zeit benötigt.
 Die in beiden Fällen großen Maxima lassen sich dadurch erklären, dass während
 der Messung eine noch nicht optimierte Kartenebene aus einem anderen Experiment
 aktiv war.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Implementierungsdetails
\end_layout

\begin_layout Standard
Dieses Kapitel verdeutlicht anhand von Programm- und Datenbankfragmenten,
 wie das Softwaresystem zu dieser Arbeit implementiert ist.
 Die jeweils herausgenommenen Programmfragmente beziehen sich dabei immer
 nur auf die Teile der Umsetzung, die zum Verständnis des Textes nötig sind.
 Das Element 
\family typewriter
[...]
\family default
 kennzeichnet dabei Auslassungen in Quellcode-Listings.
 Anhand von konkreten Beispiele wird der Einsatz aller beschriebenen Techniken
 demonstriert.
\end_layout

\begin_layout Standard
Zum besseren Verständnis der Zusammensetzung aller Einzelkomponenten von
 EpiDeGIS stellt Abbildung 
\begin_inset LatexCommand \ref{fig:Komplettübersicht-des-Systems}

\end_inset

 eine komplette Übersicht dar.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/system_komplett.eps
	lyxscale 30
	width 98theight%
	rotateAngle 90
	rotateOrigin center

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Komplettübersicht-des-Systems}

\end_inset

Komplettübersicht des Systems EpiDeGIS
\end_layout

\end_inset


\end_layout

\begin_layout Section
Serverseitige Anwendung
\end_layout

\begin_layout Standard
Wenn sich ein Anwender mit der Website von 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 verbindet, laufen serverseitig die Punkte 1-3 der Abbildung 
\begin_inset LatexCommand \ref{fig:Komplettübersicht-des-Systems}

\end_inset

 ab.
 Das Laszlo-Servlet kompiliert aus dem LZX-Quellcode eine Flash-Datei und
 liefert diese an den Browser zurück.
 Falls der Quellcode nicht geändert wurde, gibt das Servlet eine gespeicherte
 Version der bereits kompilierten Anwendung aus.
\end_layout

\begin_layout Standard
Der Browser führt das Programm clientseitig aus und stößt erst damit die
 Erfassung des Benutzers in der serverseitigen Komponente von 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 an.
 Das OpenLaszlo-Servlet läuft zwar ebenfalls auf dem Tomcat, ist allerdings
 nicht mit dem Rest des Softwaresystems verbunden.
 Laszlo generiert 
\begin_inset Quotes eld
\end_inset

lediglich
\begin_inset Quotes erd
\end_inset

 das Flash-Programm aus dem LZX-Quellcode.
\end_layout

\begin_layout Subsection
Initialisierung der Karte
\end_layout

\begin_layout Subsubsection
Initialisierungsprozess
\end_layout

\begin_layout Standard
Sobald der Benutzer die RIA von 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 öffnet findet der eigentliche Initialisierungsvorgang statt.
 Dieser Prozess generiert eine Kartendefinition und speichert diese in der
 Session des Benutzers als Java-Objekt.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\begin_inset Graphics
	filename figures/sequenz_createmap.png
	lyxscale 30
	width 100col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Sequenzdiagramm-der-Karteninitialisierung}

\end_inset

Sequenzdiagramm der Karteninitialisierung 
\begin_inset LatexCommand \cite{poseidon:2005}

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Das Sequenzdiagramm in Abbildung 
\begin_inset LatexCommand \ref{fig:Sequenzdiagramm-der-Karteninitialisierung}

\end_inset

 zeigt die Abläufe:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
1) Die serverseitige Webanwendung erzeugt das Objekt einer Klasse, die von
 
\emph on
AbstractWmsMap
\emph default
 abgeleitet ist.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
2)\InsetSpace ~
-\InsetSpace ~
3) Über die GeoTools-Bibliothek wird eine Verbindung zum Mapserver hergestell
t, um dessen Kartendefinition zu erfragen.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
4)\InsetSpace ~
-\InsetSpace ~
5) Die 
\emph on
WMSCapabilities
\emph default
 beschreiben u.
 a.
 die verfügbaren Ebenen und geben diese als Liste von 
\emph on
Layer
\emph default
-Objekten zurück.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Loop über alle Ebenen:
\end_layout

\begin_deeper
\begin_layout Labeling
\labelwidthstring 00.00.0000
6)\InsetSpace ~
+\InsetSpace ~
7) Das 
\emph on
Layer
\emph default
-Objekt gibt den Namen (eindeutig) und den Titel (beliebig) einer Kartenebene
 zurück.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
8)\InsetSpace ~
-9) Die
\emph on
 MapLayerFactory
\emph default
 erzeugt anhand des Namens die 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

-Implementierung einer Kartenebene.
\end_layout

\end_deeper
\begin_layout Subsubsection
\begin_inset Quotes eld
\end_inset

Produktion
\begin_inset Quotes erd
\end_inset

 von Ebenen
\end_layout

\begin_layout Standard
Die 
\emph on
MapLayerFactory
\emph default
 ist im Bezug auf das eingesetzte Fabrikmethode-Muster 
\begin_inset LatexCommand \cite{balzert:2000}

\end_inset

, eine abstrakte Fabrik.
 Diese beauftragt eine konkrete Fabrik mit Herstellung des Java-Objekts
 für eine Ebene.
 In der Implementierung auf das NRZM erledigt das z.B.
 die 
\emph on
NRZMMapLayerFactory
\emph default
.
 Anhand des Namens einer Ebene, die in dem MapServer konfiguriert ist, erzeugt
 sie
\emph on
 
\emph default
von 
\emph on
MapLayer
\emph default
 abgeleitete Objekte.
\end_layout

\begin_layout Standard
So gibt ein Aufruf der Form 
\end_layout

\begin_layout Standard

\family typewriter
\size footnotesize
getMapLayerFactory(MapLayerFactory.NRZM).getMapLayer("serogroups", "Serogroups",
 ...) 
\family default
\size default

\newline
z.B.
 ein Objekt der Klasse 
\emph on
SerogroupsLayer
\emph default
 zurück.
 Diese enthält einen Parameter (siehe auch Abschnitt 
\begin_inset LatexCommand \ref{sub:Dynamische-Karten}

\end_inset

 und 
\begin_inset LatexCommand \ref{sub:Änderung-der-Kartendefinition}

\end_inset

), der das Filtern nach der Serogruppe ermöglicht.
 
\end_layout

\begin_layout Standard
Falls die Fabrik unter einem Namen keine spezielle Ebenenimplementierung
 vorsieht, liefert sie ein 
\emph on
MapLayer
\emph default
-Objekt zurück.
 Diese Standard-Ebene reagiert nur auf Änderungen an dem Parameter, der
 in bestimmte Gebiete der Karte zoomt.
 
\end_layout

\begin_layout Subsubsection
Prinzipielle Unterstützung von Benutzergruppen
\end_layout

\begin_layout Standard
Diese Implementierung erlaubt es dem Entwickler, schnell neue Ebenen mit
 speziellen Parametern zu definieren.
 Weiterhin könnten bei unterschiedlichen Benutzergruppen verschiedene Fabriken
 eingesetzt werden, die beispielsweise für den internen Einsatz eine Ebene
 mit detaillierten und für die Öffentlichkeit mit groben Filtern produzieren.
\end_layout

\begin_layout Standard
Die Erweiterung könnte zudem auch eine Ebene höher ansetzen.
 Das System erzeugt für jeden Benutzer ein Objekt des Typs 
\emph on
AbstractWmsMap
\emph default
.
 Dieses stellt die eigentliche Schnittstelle zum MapServer dar.
 Je nach konkreter Implementierung könnten hier z.B.
 unterschiedliche 
\begin_inset Quotes eld
\end_inset

MapFiles
\begin_inset Quotes erd
\end_inset

 als Karte eingesetzt werden.
 
\end_layout

\begin_layout Standard
Sobald sich ein Benutzer authentifiziert, kann 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 z.B.
 eine 
\emph on
PublicMap
\emph default
 durch eine 
\emph on
NRZMMap
\emph default
 austauschen und die Anwendung neu laden.
 Implementiert ist bisher nur die 
\emph on
NRZMMap.

\emph default
 Dieses Design ermöglicht jedoch den Einsatz von Benutzergruppen.
\end_layout

\begin_layout Subsection
Export der Karte in unterschiedliche Dateiformate
\end_layout

\begin_layout Standard
Nach der Initialisierung liegt in der Benutzer-Session ein Kartenobjekt
 vor.
 Dieses soll als View in verschiedenen Formaten ausgegeben werden (siehe
 auch Abschnitt 
\begin_inset LatexCommand \ref{sub:Präsentation-der-Informationen}

\end_inset

).
\end_layout

\begin_layout Standard
Die Implementierung dieser Funktion wendet dabei ein von Allen Holub 
\begin_inset LatexCommand \cite{holub:2004}

\end_inset

 beschriebenes Konzept an.
 Dieses ersetzt den in der Anfangsphase eingesetzten Ansatz, der z.B.
 XML-Repräsentation der Karte umständlich mittels JSP und zu vielen Get-Methoden
 erzeugt hat.
 Ein früherer Artikel von Holub 
\begin_inset LatexCommand \cite{holub:2003}

\end_inset

 hat dabei zu einer weit gehenden Vermeidung von Get- und Set-Methoden in
 der Klasse 
\emph on
AbstractMap
\emph default
 und deren Ableitungen angeregt.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/uml_exporter.png
	lyxscale 30
	width 70col%

\end_inset


\end_layout

\begin_layout Caption
Klassendiagramm des Exporter-Konzeptes 
\begin_inset LatexCommand \cite{poseidon:2005}

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Klasse 
\emph on
AbstractWmsMap
\emph default
 stellt eine Schnittstelle namens Exporter bereit.
 Über die Methode 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinline[language=Java]{ export(Exporter e)}
\end_layout

\end_inset

 übergibt die Karte ihre internen Daten an eine Klasse, die das Exporter-Interfa
ce implementiert.
 Das Paket 
\emph on
Export
\emph default
 (siehe Abbildung 
\begin_inset LatexCommand \vpageref{fig:Paketdiagramm-des-EpiDeGIS-Systems}

\end_inset

) enthält in 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 alle konkreten Implementierungen dieser Schnittstelle (Tabelle 
\begin_inset LatexCommand \ref{tab:Klassen-im-Paket-Export}

\end_inset

).
\end_layout

\begin_layout Standard
\begin_inset Float table
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="2">
<features>
<column alignment="left" valignment="top" leftline="true" width="0">
<column alignment="left" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size small
Klassenname
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size small
Aufgabe
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size small
XmlExporter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size small
erzeugt eine XML-Repräsentation der Karte
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size small
\emph on
AbstractWmsExporter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size small
nutzt den MapServer zum Kartenexport
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size small
WmsInformationeExporter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size small
liefert Attributinformationen zu einem Punkt auf der Karte
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size small
WmsImageExporter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size small
exportiert die Karte als Bild und implementiert das Caching
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size small
WmsLegendExporter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size small
gibt die Kartenlegende als Bild zurück
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Klassen-im-Paket-Export}

\end_inset

Klassen im Paket Export und ihre Aufgaben
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Webanwendung erzeugt z.B.
 das XML-View mit einem 
\emph on
XmlExporter
\emph default
-Objekt.
 Das Programmfragment in Listing 
\begin_inset LatexCommand \ref{lst:exporter_frag}

\end_inset

 zeigt, wie einfach sich das Exporter-Prinzip anwenden lässt.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[caption=Codefragment zum Einsatz der 
\backslash
emph{XmlExporter}-Klasse,label=lst:exporter_frag,language=Java]{./listings/export
er_frag.java}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Zustandsänderung-durch-Aktionen}

\end_inset

Zustandsänderung durch Aktionen in Struts
\end_layout

\begin_layout Standard
\begin_inset Wrap figure
width "50col%"
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/uml_formbean.png
	lyxscale 10
	width 35col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:ActionForm-Bean}

\end_inset


\begin_inset Quotes eld
\end_inset

ActionForm Bean
\begin_inset Quotes erd
\end_inset

-Klasse für die 
\emph on
MoveMapAction 
\emph default

\begin_inset LatexCommand \cite{poseidon:2005}

\end_inset


\end_layout

\end_inset

Abschnitt 
\begin_inset LatexCommand \ref{sub:Wohldefinierte-Zustandsänderungen}

\end_inset

 stellt das Konzept vor, in dem der Controller in der RIA alle Eingriffe
 in den Systemzustand über den serverseitigen Controller ausführen muss.
 Struts (siehe 
\begin_inset LatexCommand \ref{sub:Web-basierte-Anwendungen}

\end_inset

) nimmt als Front-Controller alle Anfragen an den Java Server entgegen und
 beauftragt mit deren Bearbeitung so genannte 
\begin_inset Quotes eld
\end_inset

Actions
\begin_inset Quotes erd
\end_inset

 
\begin_inset LatexCommand \cite{struts_doc:2005}

\end_inset

.
\end_layout

\begin_layout Subsubsection
Beispiel einer implementierten Aktion
\end_layout

\begin_layout Standard
Eine an der Schnittstelle zur Verfügung stehende Aktion heißt 
\begin_inset Quotes eld
\end_inset

MoveMap
\begin_inset Quotes erd
\end_inset

.
 Über den URL 
\begin_inset LatexCommand \url{http://localhost/MoveMap.do?xoffset=0.5&yoffset=0.5}

\end_inset

 wird eine Verschiebung des Kartenausschnitts um 50% der Breite nach links
\begin_inset Foot
status collapsed

\begin_layout Standard
Anm.
 des Autors: Beim Schreiben ist mir der kleine Implementierungsfehler aufgefalle
n.
 Üblicherweise würde man bei einem positiven Offset eine Bewegung nach rechts
 erwarten.
 
\end_layout

\end_inset

 und um 50% der Höhe nach unten durchgeführt.
 Zur Implementierung der Aktion sind drei Schritte notwendig:
\end_layout

\begin_layout Subparagraph
Umsetzung in der Programmlogik
\end_layout

\begin_layout Standard
Dieser Schritt hat noch nichts mit dem Struts-Framework zu tun.
 Um den Kartenausschnitt verschieben zu können, muss die 
\emph on
AbstractWmsMap
\emph default
 zuerst eine entsprechende Methode bereitstellen.
 Der Aufruf von 
\family typewriter
map.move(0.5, 0.5)
\family default
 führt die Aufgabe aus.
 Die Methode verschiebt dazu einfach die Grenzkoordinaten des Kartenausschnittes
 um den entsprechenden Anteil.
\end_layout

\begin_layout Subparagraph
Implementierung einer 
\begin_inset Quotes eld
\end_inset

Action
\begin_inset Quotes erd
\end_inset

 und einer 
\begin_inset Quotes eld
\end_inset

ActionForm Bean
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Eine in Struts definierte Aktion leitet sich immer von der 
\emph on
Action
\emph default
-Klasse des Frameworks ab.
 Sie ist die Schnittstelle zwischen einem eingehenden HTTP-Request und der
 Programmlogik (s.
 o.).
 Die Daten des Requests verpackt Struts automatisch in so genannte 
\begin_inset Quotes eld
\end_inset

ActionForm Beans
\begin_inset Quotes erd
\end_inset

 (Abbildung 
\begin_inset LatexCommand \ref{fig:ActionForm-Bean}

\end_inset

).
\end_layout

\begin_layout Standard
Die Struts-Aktion verwendet diese Java-Container um auf HTTP-Parameter zuzugreif
en.
 Das 
\begin_inset Quotes eld
\end_inset

ActionForm Bean
\begin_inset Quotes erd
\end_inset

-Konzept definiert noch einiges mehr, diese Funktionalität verwendet 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 jedoch nicht.
\end_layout

\begin_layout Standard
Die Implementierung der 
\emph on
MoveMapAction
\emph default
 nimmt die mittels HTTP-Get übertragenen Werte für 
\family typewriter
xOffset
\family default
 sowie 
\family typewriter
yOffset
\family default
 und ruft damit 
\family typewriter
move()
\family default
 aus der 
\emph on
AbstractWmsMap
\emph default
 auf.
 Listing 
\begin_inset LatexCommand \ref{lst:movemap_frag}

\end_inset

 zeigt mit der execute-Methode den wesentlichen Teil der Aktion.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinputlisting[caption=Execute-Methode der 
\backslash
emph{MoveMapAction}-Klasse,label=lst:movemap_frag,language=Java]{./listings/movem
ap_frag.java}
\end_layout

\end_inset


\end_layout

\begin_layout Subparagraph
Definition des 
\begin_inset Quotes eld
\end_inset

Action Mappings
\begin_inset Quotes erd
\end_inset

 und der 
\begin_inset Quotes eld
\end_inset

Form Bean
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Damit das Struts-Framework weiß, welche Aktion es aufrufen muss, wenn eine
 HTTP-Anfrage über den URL 
\begin_inset LatexCommand \url{../MoveMap.do}

\end_inset

 eingeht, benötigt es einen Eintrag in seiner zentralen Konfigurationsdatei.
 Listing 
\begin_inset LatexCommand \ref{lst:strutsconfig_frag}

\end_inset

 zeigt den entsprechenden Ausschnitt aus dieser Datei.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[caption=Definition einer Aktion im Struts-Framework,label=lst:st
rutsconfig_frag,language=Java]{./listings/strutsconfig_frag.xml}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
In dieser minimalen Konfiguration muss lediglich die 
\begin_inset Quotes eld
\end_inset

Form Bean
\begin_inset Quotes erd
\end_inset

- und die 
\begin_inset Quotes eld
\end_inset

Action
\begin_inset Quotes erd
\end_inset

-Klasse festgelegt werden.
 Der angegebene Pfad legt fest, unter welchem Namen die Aktion über HTTP
 erreichbar ist.
\end_layout

\begin_layout Subsubsection
In EpiDeGIS implementierte Aktionen
\end_layout

\begin_layout Standard
Tabelle 
\begin_inset LatexCommand \ref{tab:Implementierte-Struts-Aktionen}

\end_inset

 listet alle Aktionen auf, die in diesem System implementiert sind.
 Nur mittels dieser Schnittstellen können externe Anwendungen wie z.B.
 die OpenLaszlo-Applikation den Zustand des Servers ändern bzw.
 erfragen.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement b
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="3">
<features>
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
Alias
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
\begin_inset Quotes eld
\end_inset

Action
\begin_inset Quotes erd
\end_inset

-Klasse
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
Funktion
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
Mapbrowser.do
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
\emph on
(Weiterleitung)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
öffnet die HTML-Seite mit der eingebetteten RIA
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
Map.do
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
CreateMapAction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
initialisiert die Anwendung und gibt die Karte als XML zurück
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
GetMap.do
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
GetMapAction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
liefert eine Bitmap der aktuellen Karte
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
GetMapLayer.do
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
GetMapLayerAction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
liefert eine Bitmap einer einzelnen Kartenebene
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
GetLegendGraphic.do
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
GetLegendGraphicAction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
liefert eine Bitmap der Legende einer Ebene
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
MoveMap.do
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
MoveMapAction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
verschiebt den Kartenausschnitt
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
SetParameter
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
SetParameterAction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
ändert den Wert eines Parameters
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
ToggleLayerState
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
ToggleLayerStateAction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
schaltet eine Ebene an bzw.
 aus
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
GetFeatureInfo
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
GetFeatureInfoAction
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
liefert Attributinformationen zu einem Punkt auf der Karte
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
Mapbrowser.do
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
\emph on
(Weiterleitung)
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
\size scriptsize
öffnet die HTML-Seite mit der eingebetteten RIA
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Implementierte-Struts-Aktionen}

\end_inset

Implementierte Struts-Aktionen in EpiDeGIS-Webanwendung
\end_layout

\end_inset


\end_layout

\begin_layout Section
\begin_inset LatexCommand \label{sec:Definition-von-Karten}

\end_inset

Definition von Karten für den MapServer
\end_layout

\begin_layout Standard
Der MapServer steuert alle Details der Kartenerzeugung über die 
\begin_inset Quotes eld
\end_inset

MapFile
\begin_inset Quotes erd
\end_inset

.
 Im Bezug auf die Zeilenzahlen in Listing 
\begin_inset LatexCommand \ref{lst:mapserver_simple}

\end_inset

 erlaubt diese u.
 a.
 folgende Einstellungsmöglichkeiten:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
3 Grenzen des vom MapServer dargestellten Koordinatenbereiches (
\emph on
minx
\emph default
, 
\emph on
miny
\emph default
, 
\emph on
maxx
\emph default
, 
\emph on
maxy
\emph default
)
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
4,5 Einbindung externer Dateien mit Font- und Symboldefinitionen
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
6-14 Metaangaben zu dem bereitgestellten WMS
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
15-24 Definition der angebotenen Ausgabeformate, dem Standard-Bildtyp, der
 Standard-Bildgröße und der Hintergrundfarbe.
 Die Größe der auszugebenden Bitmap lässt sich zur Laufzeit auch über den
 URL angeben.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
28-37 Einstellungen zu der Legende
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\emph on
38-83 Definition einer Kartenebene:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
41-42 Angaben zur Datenbankverbindung (Typ, Benutzer, Passwort und Host)
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
43-47 Definition der Datenquelle
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
48 Geometrietyp der Ebene (z.B.
 Punkte)
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
49 Datenbankspalte, die den zu der Geometrie darstellenden Text (z.B.
 den Stadtnamen) enthält
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
50-53 WMS-Metainformationen zu dieser Ebene
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
54-56 Projektion, in der die Quelldaten vorliegen
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
57-58 Größe der dargestellten Symbole und Text-Label
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000

\emph on
59-82 Angaben zur Darstellung der Geometrien
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
60 Voraussetzung an die Attributdaten aus der darzustellenden Datenmenge
 (z.B.
 Einwohnerzahl einer Stadt größer als 1 Million), damit diese Angaben verwendet
 werden
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
64-70 Stil, in dem die Geometrien dargestellt werden (z.B.
 rotes Quadrat der Größe 8-16 Pixel mit einem schwarzen Rand)
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
71-81 Definition der Schriftart der angezeigten Textinformation
\end_layout

\begin_layout Standard
Die wichtigste Einstellung ist die Definition der Datenquelle.
 Diese erlaubt die direkte Abfrage der Datenbank unter Angabe dynamischer
 Parameter.
 Listing 
\begin_inset LatexCommand \ref{lst:data_map}

\end_inset

 zeigt die Verwendung der in Abschnitt 
\begin_inset LatexCommand \ref{sub:Datenschutz-durch-indirekten}

\end_inset

 bereits als Beispiel eingesetzten SQL-Abfrage in einem 
\emph on
DATA
\emph default
-Element.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[caption=Definition der Datenquelle in der MapFile,label=lst:data
_map]{./listings/data_map.map}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Das Listing zeigt die Metaangaben, die der MapServer benötigt, um die SQL-Query
 als Datenquelle verwenden zu können.
 
\family typewriter
USING SRID=4326
\family default
 gibt an, in welchem Koordinatensystem die Daten vorliegen (4326 entspricht
 geografische Länge und Breite), 
\family typewriter
USING UNIQUE case_id
\family default
 legt fest, welche Spalte einen eindeutigen Schlüsselwert enthält.
 
\end_layout

\begin_layout Standard
Die folgenden Abschnitte zeigen, wie ausgewählte Ebenentypen für die epidemiolog
ischen Karten des NRZM im Hinblick auf die SQL-Abfragen implementiert sind.
\end_layout

\begin_layout Subsection
Inzidenzdarstellung
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 kann die Inzidenz für alle in der Datenbank erfassten Gebiete berechnen
 und darstellen.
 Hierzu müssen zu einem Bereich (wie z.B.
 einem Bundesland) lediglich die Einwohnerzahlen vorliegen.
\end_layout

\begin_layout Standard
Da bei der Implementierung für die Meningokokkenerkrankung alle registrierten
 Erkrankungsfälle auch Neuerkrankungen sind, errechnet sich die Jahresinzidenz
 für ein Gebiet durch folgende Formel: 
\end_layout

\begin_layout Standard
\begin_inset Formula \[
\frac{Anzahl\, der\, Erkrankungsfaelle\, in\, einem\, Jahr\times100.000}{Anzahl\, der\, Einwohner}\]

\end_inset


\end_layout

\begin_layout Subsubsection
Dynamische Inzidenzberechnung
\end_layout

\begin_layout Standard
Nach dem in Abschnitt 
\begin_inset LatexCommand \ref{sub:Globale-und-benutzerspezifische}

\end_inset

 vorgestellten Datenbankkonzept, das flexible Hierarchien und Gebiete vorsieht,
 ist es nicht möglich, die Inzidenz in vorher festgelegten Tabellen abzuspeicher
n.
 Außerdem würden starre Tabellen es nicht ermöglichen, Inzidenzberechnungen
 über andere Zeiträume anzustellen.
 Die Inzidenzberechnung für beliebige Gebiete und frei wählbare Zeiträume
 steht vor der Aufgabe, dynamisch feststellen zu müssen, ob ein Erkrankungsfall
 in einer geografischen Region aufgetreten ist.
 
\end_layout

\begin_layout Standard
Gelöst ist diese Problemstellung mittels der Topologie.
 Jeder Fall in der Datenbank besitzt eine Koordinate und jedes Gebiet ist
 ein Polygon (jeweils in der Spalte 
\family typewriter
the_geom
\family default
).
 Die topologische Beziehung 
\begin_inset Quotes eld
\end_inset

Erkrankungsfall ist in einem Gebiet aufgetreten
\begin_inset Quotes erd
\end_inset

 liefert wahr oder falsch zurück.
 Die Abfrage in Listing 
\begin_inset LatexCommand \ref{lst:count_cases_bayern}

\end_inset

 errechnet beispielsweise die Anzahl aller Fälle in Bayern.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinputlisting[caption=SQL-Query zur Ermittlung der Fallzahl in Bayern,label=ls
t:count_cases_bayern]{./listings/count_cases_bayern.sql}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Diese spezifische Query lässt sich durch weitere Bedingungen leicht so erweitern
, dass sie die Fallzählung für jedes Gebiete vom Typ
\begin_inset Foot
status collapsed

\begin_layout Standard
siehe auch Abbildung 
\begin_inset LatexCommand \vref{fig:Hierarchische-Speicherung-von-Gebieten}

\end_inset


\end_layout

\end_inset

 
\begin_inset Quotes eld
\end_inset

Bundesland
\begin_inset Quotes erd
\end_inset

 auf einen bestimmten Zeitraum begrenzt durchführt.
\end_layout

\begin_layout Subsubsection
Preis der Dynamik
\end_layout

\begin_layout Standard
Leider benötigt die Funktion 
\family typewriter
contains()
\family default
 sehr viel Rechenzeit.
 Tabelle 
\begin_inset LatexCommand \ref{tab:Rechenzeiten-zur-Zählung}

\end_inset

 führt diese für drei in Deutschland vorkommende Hierarchieebenen auf.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Gebietstyp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Datenbankeinträge
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Rechendauer
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Bundesland
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
7609 ms
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Landkreis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
439
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
23156 ms
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
fünfstellige Postleitzahlen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
8270
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
22563 ms
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Rechenzeiten-zur-Zählung}

\end_inset

Rechenzeiten zur Zählung der Erkrankungsfälle in einem bestimmten Gebietstyp
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Auch wenn weitere einschränkende Bedingungen (z.B.
 Zeitraum) die Anzahl der Fälle und damit die Rechenzeit verringern, ist
 sie noch zu lang, um daraus dynamisch Karten zu erzeugen.
\end_layout

\begin_layout Standard
Mit einer Zuordnungstabelle lässt sich die Abfragedauer entscheidend verbessern.
 Die Zuordnung eines Erkrankungsfalles zu einem Gebiet muss dabei nur erneuert
 werden, wenn neue Gebiete bzw.
 Falldaten in die Datenbank eingetragen werden.
 Tabelle 
\begin_inset LatexCommand \ref{tab:Optimierte-Rechenzeiten}

\end_inset

 zeigt die Messergebnisse mit Hilfe der Zuordnungstabelle 
\family typewriter
contains_area_case
\family default
.
 Diese liegen in dem brauchbaren Bereich von unter einer Sekunde.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement H
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features>
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Gebietstyp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Datenbankeinträge
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Rechendauer
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Bundesland
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
16
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
203 ms
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
Landkreis
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
439
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
328 ms
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
fünfstellige Postleitzahlen
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
8270
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\family sans
391 ms
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Optimierte-Rechenzeiten}

\end_inset

Durch Zuordnungstabelle optimierte Rechenzeit (vgl.
 Tabelle 
\begin_inset LatexCommand \ref{tab:Rechenzeiten-zur-Zählung}

\end_inset

)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Finale Implementierung
\end_layout

\begin_layout Standard
Die Datenquellendefinition für die Inzidenz-Ebene für den Einsatz im NRZM
 ist in Listing 
\begin_inset LatexCommand \vref{lst:incidence_data}

\end_inset

 abgedruckt.
 
\end_layout

\begin_layout Standard
Die Abfrage führt folgende Aufgaben aus:
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Zeile\InsetSpace ~
3-6 Diese vier Zeilen berechnen die Jahresinzidenz zwischen zwei begrenzend
en Daten von monatlicher Auflösung.
 Die Berechnung führt eine einfache Inter- bzw.
 Extrapolation aus, wenn der Zeitraum größer oder kleiner einem Jahr ist.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Z.\InsetSpace ~
12-14 Die Inzidenzberechnung erfolgt nur für Fälle der über den Parameter
 
\family typewriter
%SEROGROUPS%
\family default
 angegebenen Serogruppe(n) (z.B.
 
\begin_inset Quotes eld
\end_inset

'B','C'
\begin_inset Quotes erd
\end_inset

), deren\SpecialChar \ldots{}

\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Z.\InsetSpace ~
14-17 \SpecialChar \ldots{}
Meldedatum (als Monate umgeschrieben) zwischen den angegebenen Grenzdaten
 liegt.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Zeile\InsetSpace ~
18 Die Abfrage verwendet nur Gebiete der Hierarchieebene, die über
 den Wert des Parameters mit dem Namen 
\family typewriter
%INCITIER%
\family default
 festgelegt ist.
\end_layout

\begin_layout Standard
Die Inzidenz-Ebene stellt mittels dieser Implementierung die Inzidenz in
 einem beliebigen Gebiet in der Datenbank durch eine Färbung dar.
 Die Berechnung arbeitet unabhängig von den zugrunde liegenden Grenzpolygonen.
 Dank der Zuordnungstabelle wird die Karte trotz dieser Dynamik schnell
 erzeugt.
\end_layout

\begin_layout Subsection
Darstellung von Clustern
\end_layout

\begin_layout Standard
Die Cluster-Ebene stellt die von der SaTScan-Komponente identifizierten
 Erkrankungshäufungen dar.
 Ein Cluster besitzt zwei für die geografische Darstellung wichtige Attribute:
 Das Gebiet, in dem der Mittelpunkt liegt, und einen Radius, welcher die
 Ausbreitung markiert.
\end_layout

\begin_layout Subsubsection
PostGIS erzeugt Kreise
\end_layout

\begin_layout Standard
Sobald SaTScan einen Cluster entdeckt hat, legt 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 diesen in der Datenbank ab.
 An dieser Stelle wäre es ohne weiteres möglich, den Umkreis als Geometrie
 mit in der Datenbank zu speichern.
 Um Datenredundanz zu vermeiden, geht die Implementierung in eine andere
 Richtung.
\end_layout

\begin_layout Standard
Der Clusterumkreis ist letztlich nichts anderes als ein Kreis um den Mittelpunkt
 des zentralsten Gebietes mit dem entsprechenden Radius in Kilometern.
 Das PostGIS Benutzerhandbuch 
\begin_inset LatexCommand \cite{postgis_doc:2005}

\end_inset

 definiert die folgende Methode:
\end_layout

\begin_layout Description
Buffer(geometry,double,[integer]) Gibt eine Geometrie zurück die alle Punkte
 beinhaltet, deren Abstand von der im ersten Argument angegebenen Geometrie
 kleiner oder gleich dem Wert im zweiten Argument ist.
 Berechnungen werden im Koordinatensystem der Geometrie ausgeführt.
 Der optionale dritte Parameter gibt die Anzahl der Segmente an, mit denen
 ein Viertelkreis angenähert wird (Standard ist 8).
\end_layout

\begin_layout Standard
Diese Funktion leistet genau das Gewünschte, wenn sie mit dem Mittelpunkt
 des Clusters und dessen Radius aufgerufen wird.
 Listing 
\begin_inset LatexCommand \ref{lst:buffer_frag}

\end_inset

 zeigt den entsprechenden Ausschnitt aus der SQL-Query.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinputlisting[caption=Erzeugung von Kreisen mit Hilfe von PostGIS,label=lst:bu
ffer_frag]{./listings/buffer_frag.sql}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Erdkrümmung ist dafür verantwortlich, dass neben den eigentlichen Methoden
 
\family typewriter
centroid
\family default
 und 
\family typewriter
buffer
\family default
 noch zwei weitere benötigt werden.
 
\end_layout

\begin_layout Standard
In dem auf geometrische Länge und Breite basierendem Koordinatensystem mit
 dem Code 4326 würde wegen der unterschiedlichen Abstände von Längen- und
 Breitenkreisen eine Ellipse anstelle des Kreises entstehen.
 Aus diesem Grund wird in Zeile vier der Mittelpunkt nach Gauß-Krüger transformi
ert, um dort den Kreis mit dem Radius
\begin_inset Foot
status collapsed

\begin_layout Standard
die Einheit im Gauß-Krüger-Koordinatensystem ist Meter, daher die Multiplikation
 mit 1000
\end_layout

\end_inset

 zu erzeugen.
 Anschließend wird der 
\begin_inset Quotes eld
\end_inset

Buffer
\begin_inset Quotes erd
\end_inset

 wieder rücktransformiert.
\end_layout

\begin_layout Subsubsection
Sonderfall: Radius 0 Kilometer
\end_layout

\begin_layout Standard
SaTScan gibt bei Clustern, die nur in einem Landkreis auftreten, einen Radius
 von 0 Kilometern zurück.
 Mit der obigen Implementierung wären sie auf der Karte nicht darstellbar.
 Mittels einer Fallunterscheidung im SELECT-Statement der Cluster-Ebene
 werden diese Cluster gesondert behandelt.
 Dabei wird ein Kreis erzeugt, der den Landkreis annähernd umschließt.
\end_layout

\begin_layout Subsection
Streuung von Punktinformationen
\end_layout

\begin_layout Standard
Bei der NRZM-Umsetzung der Serogruppen-Ebene, die alle Me\SpecialChar \-
nin\SpecialChar \-
go\SpecialChar \-
kok\SpecialChar \-
ken-Er\SpecialChar \-
kran\SpecialChar \-
kungs\SpecialChar \-

fäl\SpecialChar \-
le als Symbole auf der Karte anzeigt, hat sich in Verbindung mit dem
 MapServer ein Problem ergeben:
\end_layout

\begin_layout Standard
Wenn mehrere Fälle in der gleichen Stadt aufgetreten sind, hat der MapServer
 diese nur mit einem Symbol an der entsprechenden Koordinate dargestellt.
 Die Bewertung von Häufungen bestimmter Serogruppen ist dadurch nicht möglich,
 da der Anwender nicht unterscheiden kann, ob z.B.
 einer oder zehn Fälle aufgetreten sind.
\end_layout

\begin_layout Standard
Da der MapServer innerhalb einer Ebene kein Mittel bereit stellt, Punktinformati
onen um die eigentliche Koordinate zu streuen, muss die Datenbankabfrage
 diese Aufgabe erledigen.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[caption=Zufällige Streuung von Punktinformationen über die
 SQL-Query,label=lst:cases_random]{./listings/cases_random.sql}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Listing 
\begin_inset LatexCommand \ref{lst:cases_random}

\end_inset

 zeigt die Definition eines 
\begin_inset Quotes eld
\end_inset

Views
\begin_inset Quotes erd
\end_inset

, welches die Koordinaten aller in der 
\family typewriter
cases
\family default
-Tabelle erfassten Fälle um einen zufälligen Betrag in x- und y-Richtung
 transformiert.
 Ein 
\begin_inset Quotes eld
\end_inset

View
\begin_inset Quotes erd
\end_inset

 bezeichnet dabei in SQL eine nach bestimmten Kriterien gefilterte oder
 veränderte virtuelle (An)sicht einer oder mehrerer physikalischer Tabellen.
 
\end_layout

\begin_layout Section
Clientanwendung mit OpenLaszlo
\end_layout

\begin_layout Standard
Der folgende Abschnitt geht auf zwei Details der Anwendungsprogrammierung
 mit OpenLazlo ein.
 Er bietet keine Anleitung zur Programmierung in der LZX-Sprache, sondern
 vielmehr eine Vorstellung von zwei interessanten Konzepten.
 Details zur Programmierung in OpenLaszlo finden sich in der umfassenden
 Dokumentation 
\begin_inset LatexCommand \cite{openlaszlo_doc:2005}

\end_inset

.
 Diese wird jedoch für das Verständnis des Folgenden nicht benötigt.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Dynamischer-Aufbau-der-GUI}

\end_inset

Dynamischer Aufbau der Benutzeroberfläche
\end_layout

\begin_layout Standard
In Abbildung 
\begin_inset LatexCommand \vref{fig:Komplettübersicht-des-Systems}

\end_inset

 ist zu erkennen, dass sich die Benutzeroberfläche der RIA mittels der XML-Reprä
sentation des Serverzustandes initialisiert.
 Die Abschnitte 
\begin_inset LatexCommand \ref{sub:Dynamische-Karten}

\end_inset

 und 
\begin_inset LatexCommand \ref{sub:Änderung-der-Kartendefinition}

\end_inset

 behandeln das Konzept von dynamischen Ebenen und Parametern.
\end_layout

\begin_layout Subsubsection
Replikation durch XML-Daten
\end_layout

\begin_layout Standard
OpenLazlo ermöglicht es durch eine Technik namens 
\begin_inset Quotes eld
\end_inset

databinding
\begin_inset Quotes erd
\end_inset

, dynamisch Elemente in der Benutzeroberfläche eine Flash-Anwendung zu erzeugen.
 Listing 
\begin_inset LatexCommand \ref{lst:databinding}

\end_inset

 zeigt ein anschauliches Beispiel 
\begin_inset LatexCommand \cite{wolff:2005}

\end_inset

 dieser Funktion:
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinputlisting[caption=Replikation von Elementen in OpenLaszlo durch ``databind
ing'',label=lst:databinding]{./listings/databinding.lzx}
\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Zeilen\InsetSpace ~
2-9 definieren inline im Programm ein 
\begin_inset Quotes eld
\end_inset

dataset
\begin_inset Quotes erd
\end_inset

, das beliebige XML-Daten enthalten kann.
 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Z.\InsetSpace ~
10-13 erzeugen ein so genanntes 
\begin_inset Quotes eld
\end_inset

view
\begin_inset Quotes erd
\end_inset

.
 Der Begriff bezeichnet in OpenLaszlo ein später in der Anwendung sichtbares
 Containerelement.
 Das Attribut 
\family typewriter
datapath
\family default
 dieses Elements löst die Replikation aus.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Z.\InsetSpace ~
11+12 sorgen dafür, dass die Daten aus dem XML in der Flash-Anwendung angezeigt
 werden.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/databinding.png
	lyxscale 30
	width 40col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Ausgabe-des-Programms}

\end_inset

Ausgabe des Programms in Listing 
\begin_inset LatexCommand \ref{lst:databinding}

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Abbildung 
\begin_inset LatexCommand \ref{fig:Ausgabe-des-Programms}

\end_inset

 zeigen die Ausgabe der entstehenden Flash-Anwendung.
 Sie verdeutlicht das Prinzip des 
\begin_inset Quotes eld
\end_inset

databinding
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout Standard
Über das Attribut 
\family typewriter
datapath
\family default
 weiß die Anwendung, dass das 
\begin_inset Quotes eld
\end_inset

view
\begin_inset Quotes erd
\end_inset

 in Zeile 10-13 explizit mit den Daten unter dem Pfad 
\family typewriter
myData:/people/*
\family default
 verbunden ist.
 Die Sprache mit der OpenLaszlo den Pfad beschreibt ist XPath 
\begin_inset LatexCommand \cite{clark:2005}

\end_inset

.
\end_layout

\begin_layout Standard
Der in Laszlo integrierte Replikationsmechanismus arbeitet mit diesen Pfadangabe
n.
 Das 
\begin_inset Quotes eld
\end_inset

view
\begin_inset Quotes erd
\end_inset

 wird von ihm für jedes Datenelement kopiert, das sich unter 
\family typewriter
<people>
\family default
 befindet.
 In dem Beispiel werden dabei jeweils für Tim, Ron, Kelly und Adam zwei
 Textelemente horizontal aneinander gereiht (
\family typewriter
layout=
\begin_inset Quotes erd
\end_inset

axis:'x'
\begin_inset Quotes erd
\end_inset


\family default
).
 
\end_layout

\begin_layout Standard
Das erste schreibt den Namen des XML-Elementes und das zweite den Inhalt.
 Die Pfadangaben innerhalb des Containers werden dabei relativ zu dessen
 Pfad interpretiert.
\end_layout

\begin_layout Standard
Durch die Angabe 
\family typewriter
layout=
\begin_inset Quotes erd
\end_inset

spacing:2
\begin_inset Quotes erd
\end_inset


\family default
 ordnet das 
\family typewriter
<canvas>
\family default
-Element die vier replizierten 
\family typewriter
<view>
\family default
's untereinander (die Standardachse ist y) mit einem Abstand von zwei an.
\end_layout

\begin_layout Subsubsection
XML Datenquellen
\end_layout

\begin_layout Standard
OpenLaszlo nimmt die Daten für die Replikation aus drei möglichen Quellen
 entgegen.
 Entweder Inline-XML (s.
 o.), auf dem Webserver liegende XML-Dateien oder XML-Daten, die über einen
 URL geladen werden.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 setzt die letztgenannte Quelle ein.
 Die vom Server angebotene Karte wird als XML von der Flash-Anwendung eingelesen
 und zum Aufbau der grafischen Benutzeroberfläche verwendet.
 
\end_layout

\begin_layout Subsubsection
Implementierung am Beispiel eines Auswahlparameters 
\end_layout

\begin_layout Standard
Listing 
\begin_inset LatexCommand \vref{lst:map}

\end_inset

 zeigt die XML-Repräsentation einer einfachen Karte.
 Am Beispiel des Kartenparameters mit dem Namen 
\family typewriter
areaId
\family default
 (Zeile 3-10), soll die Replikation von Elementen der Benutzeroberfläche
 in 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 demonstriert werden.
\end_layout

\begin_layout Standard
Listing 
\begin_inset LatexCommand \ref{lst:mapbrowser_frag}

\end_inset

 enthält die beiden Programmstellen, die dafür verantwortlich sind, dass
 in der GUI ein Auswahlfeld für den zu betrachtenden Kartenausschnitt erscheint
 (siehe Abbildung 
\begin_inset LatexCommand \ref{fig:Konkrete-Umsetzung-Parameter}

\end_inset

):
\end_layout

\begin_layout Standard
Zeile 2-7 definieren eine Datenquelle, deren Ziel die Aktion von Struts
 ist, welche die Karte als XML zurückgibt (siehe Tabelle 
\begin_inset LatexCommand \ref{tab:Implementierte-Struts-Aktionen}

\end_inset

).
 In Zeile vier wird nach obigen Prinzip ein Element der Klasse 
\emph on
selectparameter
\emph default
 so oft repliziert, wie es 
\family typewriter
<selectparameter>
\family default
-Elemente unter den Wurzelelement 
\family typewriter
<map> in Listing 
\family default

\begin_inset LatexCommand \vref{lst:map}

\end_inset

 gibt.
 In diesem Fall ist es nur der eine, welcher die Auswahl des Gebietes ermöglicht.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[caption=Fragment des Kartenbetrachter-Quellcodes zur dynamischen
 Erzeugung der GUI,label=lst:mapbrowser_frag]{./listings/mapbrowser_frag.lzx}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Klasse 
\emph on
selectparameter
\emph default
 ist in einer externen LZX-Quelldatei implementiert.
 Sie erzeugt die eigentliche Dropdown-Liste anhand der 
\family typewriter
<value>
\family default
-Elemente und informiert den Rest der Applikation, wenn der Anwender den
 Parameterwert ändert.
\end_layout

\begin_layout Subsection
Kommunikation zwischen Laszlo und Struts
\end_layout

\begin_layout Standard
Die Laszlo-Applikation kommuniziert mit Struts über die in Abschnitt 
\begin_inset LatexCommand \ref{sub:Zustandsänderung-durch-Aktionen}

\end_inset

 angegebenen Aktionen.
 Der Server antwortet dabei auf Anfragen mit XML-Fragmenten.
 Diese informieren über den Erfolg, Misserfolg und Ergebnisse der gewünschten
 Zustandsänderung.
 Die RIA verarbeitet die Serverantworten mittels des gleichen Prinzips,
 das schon bei dem dynamischen Aufbau der GUI in Abbildung 
\begin_inset LatexCommand \ref{sub:Dynamischer-Aufbau-der-GUI}

\end_inset

 Anwendung findet.
\end_layout

\begin_layout Standard
Listing 
\begin_inset LatexCommand \ref{lst:mapbrowser_frag2}

\end_inset

 zeigt den Programmteil des Kartenbetrachters, in dem die 
\emph on
SetParameter
\emph default
-Aktion von Struts (siehe Tabelle 
\begin_inset LatexCommand \ref{tab:Implementierte-Struts-Aktionen}

\end_inset

) angewendet und deren Ausgabe entgegengenommen wird:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[caption=Fragment des Kartenbetrachter-Quellcodes zur Kommunikati
on mit Struts,label=lst:mapbrowser_frag2]{./listings/mapbrowser_frag2.lzx}
\end_layout

\end_inset


\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Zeile\InsetSpace ~
4 definiert wie Zeile 7 in Listing 
\begin_inset LatexCommand \ref{lst:mapbrowser_frag}

\end_inset

 die Datenquelle.
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Z.\InsetSpace ~
7-12 zeigen den Ausschnitt einer Methode, die eine Anfrage an die Datenquelle
 stellt.
 Zwei HTTP-Parameter werden für die Query mit angegeben.
 Struts verändert mittels der 
\emph on
SetParameter
\emph default
-Aktion den Wert eines Parameters (
\family typewriter
name
\family default
) auf den angegebenen Wert (
\family typewriter
value
\family default
).
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Z.\InsetSpace ~
14 definiert einen Zeiger auf den Pfad der in Zeile 4 angegebenen Datenquelle.
 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
Z.\InsetSpace ~
15 Sobald sich die Daten ändern, auf die der 
\family typewriter
datapointer
\family default
 zeigt, wird das Ereignis 
\family typewriter
ondata
\family default
 ausgelöst und die entsprechende Methode aufgerufen.
\end_layout

\begin_layout Standard
Listing 
\begin_inset LatexCommand \ref{lst:setparam_result}

\end_inset

 zeigt die Antwort der Aktion 
\family typewriter
\size small

\begin_inset LatexCommand \url{../SetParameter.do?name=SEROGROUPS&value='B'}

\end_inset


\family default
\size default
.
 Diese setzt den Parameter mit dem Namen 
\emph on
SEROGROUP
\emph default
 auf den Wert 
\begin_inset Quotes eld
\end_inset

'B'
\begin_inset Quotes erd
\end_inset

.
 Der Server nimmt die Zustandsänderung an und antwortet mit einem bestimmten
 XML-Fragment.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinputlisting[caption=Antwort des Servers auf eine 
\backslash
emph{SetParameter}-Aktion,label=lst:setparam_result]{./listings/setparam_result.xm
l}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Dieses enthält als Wurzel das Element 
\family typewriter
<result>
\family default
.
 Darin folgen zwei 
\family typewriter
<update>
\family default
-Elemente.
 Diese deuten der Laszlo-Anwendung an, dass sich durch die Aktion sowohl
 die Serogruppen- als auch die Inzidenz-Ebene geändert hat.
\end_layout

\begin_layout Standard
Sobald die Serverantwort bei Laszlo ankommt, löst sie das ondata-Ereignis
 aller mit der Datenquelle SetParameter verknüpften 
\family typewriter
datapointer
\family default
 aus.
 Auch die Methode in Listing 
\begin_inset LatexCommand \ref{lst:mapbrowser_frag2}

\end_inset

 , Zeile 14 wird angestoßen und kann auf die Antwort reagieren.
 Im obigen Bespiel wird sie die beiden Ebenen neu laden.
\end_layout

\begin_layout Section
\begin_inset LatexCommand \label{sec:Clusteranalysen-mit-SaTScan}

\end_inset

Serverseitige Clusteridentifizerung mittels SaTScan
\end_layout

\begin_layout Standard
Mit SaTScan setzt 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 ein Werkzeug ein, das bereits viele Epidemiologen zur Identifizierung von
 spatio-temporalen Clustern verwenden.
 SaTScan lässt sich mit einer grafische Benutzeroberfläche bedienen, über
 die sich alle Parameter der Analyse einstellen lassen.
 Nach einem Durchlauf gibt es die Ergebnisse in einem Bericht aus (siehe
 Listing 
\begin_inset LatexCommand \vref{lst:satscan_out}

\end_inset

).
 
\end_layout

\begin_layout Standard
Für den Einsatz am eigenen Rechner ist die Analyse mit Hilfe einer GUI sehr
 komfortabel, im automatisierten serverseitigen Einsatz jedoch ungeeignet.
 Da sich SaTScan aber auch über die Kommandozeile ausführen lässt, ist ein
 automatisierter Aufruf aus Java heraus möglich.
 
\end_layout

\begin_layout Subsubsection
Terminplanung von Analysen
\end_layout

\begin_layout Standard
Das Paket Satscan im Softwaresystem EpiDeGIS implementiert die Verbindung
 von SaTScan und Java.
 Für die Implementierung der automatisierten Ausführung war es wichtig,
 dass der Server die Clusterberechnungen zu einer beliebigen Zeit ausführen
 kann.
 Die hardwarelastigen Berechnungen können so in der Nacht getätigt werden.
 Das bedeutet, dass die Ablaufplanung einen Analysevorgang unter Umständen
 vor dem Ende abbricht.
 Dies darf unter keinen Umständen zu einer Unterschlagung einer Berechnung
 führen.
 
\end_layout

\begin_layout Standard
Die Implementierung des automatisierten SaTScan-Aufrufs speichert aus diesem
 Grund alle geplanten Analysen in der Datenbank.
 Die Grundlage bildet dabei eine Tabelle, die so genannte 
\begin_inset Quotes eld
\end_inset

SaTScan-Jobs
\begin_inset Quotes erd
\end_inset

 enthält.
 Hierbei handelt es sich um geplante Ausführungen, die in bestimmten Zeitabständ
en durchgeführt werden sollen.
 Der Job speichert neben der Ausführungsart (wöchentlich, monatlich, jährlich)
 und dem letzten Ausführungsdatum, auch alle in diesem Job für die Ausführung
 von SaTScan verwendeten Einstellungen.
\end_layout

\begin_layout Standard
Ein eingesetzter Job für das NRZM lautet beispielsweise 
\begin_inset Quotes eld
\end_inset

weekly prospective
\begin_inset Quotes erd
\end_inset

 (siehe Abschnitt 
\begin_inset LatexCommand \ref{sub:Automatische-Identifizierung-Cluster}

\end_inset

).
 In diesem ist festgelegt, dass 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 jede Woche eine prospektive Clusteridentifizerung durchführen soll.
 Diese muss jeden einzelnen in einem Beobachtungszeitraum von 100 Tagen
 aufgetretenen Feintyp das Programm SaTScan ausführen.
 
\end_layout

\begin_layout Subsubsection
Ausführung von SaTScan
\end_layout

\begin_layout Standard
Eine weitere Tabelle verwaltet alle diese atomaren Ausführungen.
 Sie speichert in drei Spalten jeweils die Jobnummer, das ursprünglich geplante
 Ausführungsdatum und die Nummer des zu analysierenden Feintyps.
 Die Jobverarbeitung füllt die Tabelle mit den Daten der für die zur Erledigung
 eines Jobs nötigen Analysen.
\end_layout

\begin_layout Standard
Die eigentliche Ausführung von SaTScan geht folgendermaßen von statten:
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/db_satscan.eps
	lyxscale 30
	width 70col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Datenbankstruktur-zum-Planen}

\end_inset

Datenbankstruktur zum Planen von SaTScan-Ausführungen und Speichern der
 Ergebnisse
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die erste auf dem Ablaufplan stehende Analyse wird aus der Tabelle abgefragt.
 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{EpiDeGIS}
\end_layout

\end_inset

 kann dabei durch die Jobnummer, den Feintyp und das Datum rückschließen,
 welche Erkrankungsfälle es für die Clusteridentifizierung berücksichtigen
 muss.
 Anhand dieser Daten lassen sich die von SaTScan benötigten Eingabedateien
 generieren.
 
\end_layout

\begin_layout Standard
SaTScan wird von Java aus als externes Programm aufgerufen.
 Es führt die Analyse mit Hilfe der Eingabedateien aus.
 Nach einem erfolgreichen Lauf generiert es verschiedene Ergebnisdateien
 
\begin_inset LatexCommand \cite{kulldorff:2006}

\end_inset

.
 EpiDeGIS nimmt alle Informationen aus den jeweiligen Dateien und erzeugt
 daraus ein Objekt der Klasse 
\emph on
SatscanCluster
\emph default
.
 Über diesen Container wird das Ergebnis in die Datenbank übertragen.
\end_layout

\begin_layout Standard
Erst an diesem Punkt ist die Analyse eines Feintyps beendet und der entsprechend
e Eintrag aus der Tabelle der geplanten Ausführungen wird gelöscht.
 Abbildung 
\begin_inset LatexCommand \ref{fig:Datenbankstruktur-zum-Planen}

\end_inset

 zeigt die Relationen in der Datenbank.
 Das zentrale Gebiet bzw.
 der Feintyp in der Cluster-Tabelle, sind dabei Fremdschlüssel für andere,
 hier nicht abgebildete Tabellen.
\end_layout

\begin_layout Subsubsection
Vorteile und Implementierung
\end_layout

\begin_layout Standard
Die atomare SaTScan-Analyse hat den Vorteil, dass sie die zum Teil zeitintensive
n Berechnungen Stück für Stück ausführt.
 Eine retrospektive Analyse über einen großen Zeitraum kann insgesamt mehrere
 Tage benötigen.
 Der Anteil für einen Feintyp beträgt dabei nur eine halbe Stunde.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\begin_inset LatexCommand \label{cha:Zusammenfassung-und-Ausblick}

\end_inset

Zusammenfassung und Ausblick
\end_layout

\begin_layout Section
Zusammenfassung
\end_layout

\begin_layout Standard
Die vorliegende Diplomarbeit hat den Prozess beschrieben, in dem ein Web-basiert
er GIS-Service zur Überwachung von Infektionen entstanden ist.
 
\end_layout

\begin_layout Standard
Dessen Entwicklung wurde in enger Zusammenarbeit mit dem Nationalen Referenzzent
rum für Meningokokken durchgeführt.
 Das Ergebnis dieser Zusammenarbeit ist eine einsatzfähige Version einer
 über das Internet zugänglichen Software, die es ermöglicht, die Meningokokken-E
rkrankungssituation in Deutschland automatisiert zu visualisieren und zu
 überwachen.
\end_layout

\begin_layout Subsubsection
Web-basierter, einer breiten Benutzergruppe zugänglicher, epidemiologischer
 GIS-Service 
\end_layout

\begin_layout Standard
Das in einem Internetbrowser ausführbare Programm ist eine mittels Flash
 realisierte 
\begin_inset Quotes eld
\end_inset

Rich Internet Application
\begin_inset Quotes erd
\end_inset

.
 Das Flash-Format sichert dabei eine Erreichbarkeit von 97% aller Client-Rechner.
 RIAs bieten dem Anwender eine von Desktop-Anwendungen bekannte Benutzbarkeit.
 
\end_layout

\begin_layout Standard
Die Applikation stellt dabei viele Interaktionsmöglichkeiten mit dem zugrunde
 liegenden epidemiologischen Geoinformationssystem zur Verfügung.
 Anwender können hierdurch unterschiedliche thematische Karten visualisieren.
 Diese bestehen aus einzelnen Ebenen zur Darstellung der verschiedensten
 Informationen:
\end_layout

\begin_layout Itemize
Inzidenz der Erkrankungsfälle durch Einfärbung von Bundesländern oder Landkreise
n
\end_layout

\begin_layout Itemize
Bevölkerungsdichte, ebenfalls für Bundesländer und Landkreise
\end_layout

\begin_layout Itemize
Verteilung der Fälle eines ausgewählten Meningokokken-Feintyps
\end_layout

\begin_layout Itemize
Verteilung der Fälle einer oder mehrerer ausgewählter Serogruppen
\end_layout

\begin_layout Itemize
Ergebnisse der wöchentlich prospektiven und monatlich retrospektiven Clusteranal
yse
\end_layout

\begin_layout Itemize
Statische Informationen wie Grenzen oder Städte
\end_layout

\begin_layout Standard
Weiterhin kann der Anwender die Darstellung der Karte beeinflussen indem
 er\SpecialChar \ldots{}

\end_layout

\begin_layout Itemize
einen Zeitraum auswählt, für den die Serogruppen, Feintypen und die Inzidenz
 dargestellt werden soll.
\end_layout

\begin_layout Itemize
eine Altersgruppe angibt, auf welche die Darstellung der Fälle (Serogruppen
 bzw.
 Feintypen) begrenzt ist.
\end_layout

\begin_layout Itemize
ein Bundesland auswählt, für das die Kartendarstellung vergrößert wird.
\end_layout

\begin_layout Standard
Die intuitive Bedienbarkeit der Applikation gewährleistet dabei, dass die
 verschiedensten Interessengruppen das Informationssystem sofort nutzen
 können.
 Mögliche Anwendungsfälle reichen dabei von besorgten Eltern, die sich ein
 Bild über die deutschlandweite Verteilung der Meningokokken machen möchten,
 bis zu Vertretern des öffentlichen Gesundheitsdienstes, die Entscheidungen
 anhand der dargestellten Cluster treffen.
\end_layout

\begin_layout Standard
Die Epidemiologen am NRZM haben während der Entwicklungszeit die Anwendung
 bereits eingesetzt.
 Mit deren Hilfe konnten sie beispielsweise die Vermutung visuell stützen,
 dass ein großer Teil der Serogruppe-B-Meningokokkenfälle im Westen Nordrhein-We
stfalens bisher durch den Feintyp 
\emph on
B:P1.7-2,4:F1-5
\emph default
 ausgelöst worden sind, wohingegen dieser Feintyp im Osten des Bundeslandes
 relativ selten auftritt.
\end_layout

\begin_layout Subsubsection
Identifizierung von Clustern
\end_layout

\begin_layout Standard
Während dieser Diplomarbeit ist es gelungen, die Software SaTScan dergestalt
 in ein Gesamtsystem zu integrieren, dass automatisierte spatio-temporale
 Clusteridentifizierungen erstmals möglich sind.
\end_layout

\begin_layout Standard
Der Server ist in der Lage, selbstständig Berechnungen zu planen und auszuführen.
 Ermittelte Ergebnisse lassen sich sofort über die Webanwendung visualisieren.
\end_layout

\begin_layout Standard
Die auf diese Weise identifizierten Cluster sind identisch mit denen, die
 das NRZM bisher durch eine halbautomatische SaTScan-Ausführung registrieren
 konnte.
 Der Beweis, ob EpiDeGIS als Frühwarnsystem richtige Prognosen trifft, lässt
 sich jedoch erst anhand zukünftiger Daten erbringen.
\end_layout

\begin_layout Subsubsection
Flexibler Anwendungsentwurf
\end_layout

\begin_layout Standard
Es ist in dieser Arbeit gelungen, ein Softwaresystem zu schaffen, das flexibel
 ist.
 Die vorgestellten Konzepte und deren Implementierung haben viele Stellen
 aufgezeigt, an denen im System leicht Änderungen möglich sind.
 Das schließt auch die Übertragbarkeit auf andere Länder bzw.
 Krankheitserreger mit ein.
 
\end_layout

\begin_layout Subsubsection
Erfolgreiche Kooperation
\end_layout

\begin_layout Standard
Diese Arbeit ist auch im Hinblick auf eine interdisziplinäre Zusammenarbeit
 zweier Institute der Universität Würzburg ein Erfolg.
 Durch die Kooperation und den Wissensaustausch zwischen dem Institut für
 Informatik und dem Institut für Hygiene ist ein neuartiges Projekt entstanden.
 Positive Resonanz aller Beteiligten und nationaler wie internationaler
 Behörden (RKI bzw.
 ECDC) stützen diese Aussage.
 
\end_layout

\begin_layout Section
Erweiterungsmöglichkeiten
\end_layout

\begin_layout Standard
Während der Arbeit an diesem System haben sich bereits einige Erweiterungsmöglic
hkeiten aufgetan.
 Diese konnten im Rahmen dieser Arbeit leider nicht mehr implementiert werden,
 bieten allerdings interessante Ansätze für einen Ausbau der Funktionalität.
 
\end_layout

\begin_layout Subsection
Integration des Statistikpaketes R
\end_layout

\begin_layout Standard
Auf Seite 
\begin_inset LatexCommand \pageref{sub:R}

\end_inset

 wird das Statistikpaket R kurz vorgestellt.
 Zudem wird die Integrationsmöglichkeit der Software in die PostgreSQL Datenbank
 angesprochen.
 Während dieser Diplomarbeit wurden bereits Versuche zur Integration unternommen.
\end_layout

\begin_layout Standard
Die Fusion der Datenbank mit dem Statistikpaket eröffnet bei Visualisierung
 epidemiologischer Daten vielfältige Möglichkeiten.
 Diese könnten dem Anwender weitere Hilfestellung zur Bewertung einer Erkrankung
ssituation geben.
\end_layout

\begin_layout Standard
Anhand von Grafen ließe sich beispielsweise die Altersverteilung von Erkrankungs
fällen aufzeigen.
 Diagramme, die z.B.
 die Serogruppenverteilung anzeigen, könnten direkt in die Webanwendung
 integriert werden.
\end_layout

\begin_layout Standard
Sehr interessant sind auch die Möglichkeiten, die sich durch die R-Pakete
 GenKern und splancs
\begin_inset Foot
status collapsed

\begin_layout Standard
Spatial and Space-Time Point Pattern Analysis
\end_layout

\end_inset

 bieten.
 Sie erlauben es, die im Abschnitt 
\begin_inset LatexCommand \ref{sec:Clusteranalysen-mit-SaTScan}

\end_inset

 beschriebenen 
\begin_inset Quotes eld
\end_inset

flächige
\begin_inset Quotes erd
\end_inset

 Darstellung von Punktinformationen zu erzeugen.
 Splancs bietet dabei ein sehr reichhaltiges Funktionsangebot zur Analyse
 von räumlichen und raum-zeitlichen Punktmustern.
 Das Paket kann u.
 a.
 eine zeitliche Folge von 
\begin_inset Quotes eld
\end_inset

kernel density
\begin_inset Quotes erd
\end_inset

-Grafen aneinander gereiht dargestellten.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align left
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features>
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Graphics
	filename figures/genkern.eps
	lyxscale 30
	width 45col%

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
\begin_inset Graphics
	filename figures/splancs.eps
	lyxscale 30
	width 45col%

\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Kernel}

\end_inset

Beispiele für mit den R-Paketen GenKern (links) und splancs (rechts) erzeugte
 
\begin_inset Quotes eld
\end_inset

kernel-density
\begin_inset Quotes erd
\end_inset

-Grafen
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/splancs_3d.eps
	lyxscale 30
	width 100col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Kernel3d}

\end_inset

Mit dem splancs-Paket erzeugte zeitliche Folge von 
\begin_inset Quotes eld
\end_inset

kernel-density
\begin_inset Quotes erd
\end_inset

-Grafen
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Die Abbildung 
\begin_inset LatexCommand \ref{fig:Kernel}

\end_inset

 zeigt zwei durch diese Pakete generierte Grafen.
 Sie sind mittels der grafischen Oberfläche von R erstellt worden.
 In der EpiDeGIS-Datenbank ist über eine SQL-Funktion bereits die Erzeugung
 einer einfachen Grafik gelungen.
\end_layout

\begin_layout Subsection
Animationen über die Dimension Zeit
\end_layout

\begin_layout Standard
Die Idee, die Dimension Zeit in dieses epidemiologische System zu integrieren,
 ist ein weiterer Ansatz für eine Erweiterung.
 Anhand von Animationen könnte es die Weboberfläche dem Anwender erleichtern,
 eine mögliche zeitliche Dynamik des Auftretens von Erkrankungsfällen zu
 erfassen.
\end_layout

\begin_layout Standard
OpenLaszlo bietet durch Flash bereits vielfältige Möglichkeiten Animationen
 abzuspielen.
 Was die serverseitige Anwendung betrifft, müsste nur noch eine Schnittstelle
 geschaffen werden, die es erlaubt, bestimmte definierte Karten direkt,
 d.h.
 unabhängig von der vom Benutzer gerade betrachteten Karte, zu erzeugen.
\end_layout

\begin_layout Standard
Der Vorgang könnte folgendermaßen ablaufen:
\end_layout

\begin_layout Enumerate
Der Anwender möchte eine Animation aller Erkrankungsfälle der Serogruppe
 über einen bestimmten Zeitraum mit monatlicher Auflösung betrachten.
\end_layout

\begin_layout Enumerate
Er öffnet eine Maske, die es ihm erlaubt, die genauen Einstellungen zu tätigen.
\end_layout

\begin_layout Enumerate
Die RIA kommuniziert mit dem Server und lädt z.B.
 für jeden Monat von Januar 2005 bis Dezember 2005 eine Karte mit den gewünschte
n Vorgaben.
 Hierbei sollte eine kleinere Auflösung gewählt werden, um Ladezeiten zu
 minimieren.
\end_layout

\begin_layout Enumerate
Sobald alle Karten geladen sind, wird dem Anwender die Animation in einem
 Fenster angezeigt.
 Dieses enthält Möglichkeiten, den Ablauf zu pausieren oder an bestimmte
 Zeitpunkte zu springen.
\end_layout

\begin_layout Enumerate
Die objektorientierten Fähigkeiten von OpenLaszlo würden es erlauben, auch
 mehrere Animationen parallel zu betrachten.
\end_layout

\begin_layout Enumerate
Ein möglicher Export der Animation als Flash-Datei rundet diese Komponente
 ab.
\end_layout

\begin_layout Subsection
Ausbau der Benutzeroberfläche
\end_layout

\begin_layout Standard
Gerade durch die vielfältigen Möglichkeiten, die OpenLaszlo bietet, sind
 weitere Ausbaumöglichkeiten der Benutzerschnittstelle denkbar:
\end_layout

\begin_layout Subsubsection
Speedtyping
\end_layout

\begin_layout Standard
Speedtyping bezeichnet eine Technik, durch die das schnelle Suchen in großen
 Datenmengen möglich ist.
 Die zu durchsuchende Datenmenge grenzt sich dabei, während der Suchbegriff
 eingetippt wird, anhand der bisher vom Anwender eingegebenen Buchstaben
 ein.
 Das Speedtyping könnte beispielsweise für die Suche nach einem bestimmten
 Feintyp des Meningokokkenerregers eingesetzt werden.
\end_layout

\begin_layout Standard
Bis dato enthält die EpiDeGIS-Datenbank 404 Feintypen.
 Aus diesen einen bestimmten Typ über eine Dropdown-Liste auswählen zu müssen,
 ist mehr als müßig.
 Ein Suchfeld erleichtert bisher das Auffinden eines Typs, dessen genauer
 Bezeichner bekannt ist.
\end_layout

\begin_layout Standard
Diese Suche kann durch Speedtyping verbessert werden.
 OpenLaszlo bietet dabei reichhaltige Möglichkeiten, Datenmengen zu verwalten,
 zu verändern und darzustellen 
\begin_inset LatexCommand \cite{wolff-2:2005}

\end_inset

.
\end_layout

\begin_layout Subsubsection
Automatisierte Alarmmeldungen
\end_layout

\begin_layout Standard
Zur Erweiterung des Frühwarnsystems ließe sich die Programmoberfläche noch
 um ein halbautomatisches Alarmsystem erweitern.
 Dieses könnte so funktionieren, dass berechtigte Benutzer, wie beispielsweise
 die Epidemiologen des NRZM, einen vom System gefundenen Cluster an eine
 in der Datenbank hinterlegte, offizielle Stelle weiterleiten.
\end_layout

\begin_layout Standard
Das System generiert auf den entsprechenden Befehl hin einen Bericht mit
 allen wichtigen Daten zu dem Cluster und versendet diesen per Email.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Addchap
Danksagung
\end_layout

\begin_layout Standard
Danken möchte ich Herrn Prof.
 Dr.
 Jürgen Albert und Dipl.-Inf.
 Jörg Rothgänger sowie allen Betreuern für eine sehr gute Zusammenarbeit
 und viele hilfreiche Anregungen.
\end_layout

\begin_layout Standard
Ich danke Herrn Prof.
 Dr.
 Dag Harmsen insbesondere für die Möglichkeit, meine Arbeit schon vor deren
 Abschluss auf dem GIS-Tag Unterfranken 2005 öffentlich vorstellen zu dürfen.
\end_layout

\begin_layout Standard
Herrn Prof.
 Dr.
 med.
 Ulrich Vogel danke ich für aufschlussreiche fachliche Einblicke in die
 Epidemiologie.
\end_layout

\begin_layout Standard
Herrn Dr.
 med.
 Johannes Elias gebührt Dank dafür, dass er seine Erfahrungen mit der Software
 SaTScan mit mir geteilt hat.
\end_layout

\begin_layout Standard
Ich danke Herrn Dipl.-Inform.
 (FH) Fritz Kleemann für seine bereitwillige Hilfe bei auftauchenden Schwierigke
iten im Bereich der Serveradministration.
\end_layout

\begin_layout Standard
Meiner Familie und meinen Freunden möchte ich für ihr Vertrauen und ihre
 Unterstützung danken.
\end_layout

\begin_layout Standard
Schließlich und besonders danke ich meiner Verlobten Lena für ihre Liebe.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\start_of_appendix
Softwaresystem EpiDeGIS
\end_layout

\begin_layout Section
Installationsanleitung unter Linux
\end_layout

\begin_layout Standard
Der folgende Abschnitt stellt eine Installationsanleitung für alle Komponenten
 dar, die für den Einsatz von EpiDeGIS benötigt werden.
 Das sind alle externen Bibliotheken und Anwendungen sowie die einzelnen
 Softwarekomponenten des Systems.
\end_layout

\begin_layout Standard
Die Anleitung beschränkt sich dabei auf das letztlich verwendete Betriebssystem
 Linux.
 In der Anfangsphase der Entwicklung wurde allerdings ein ähnlicher Systemaufbau
 auch unter Windows durchgeführt.
 Die wichtigen Komponenten MapServer, PostgreSQL, SaTScan und der Tomcat
 Servlet Container laufen auch unter dem System von Microsoft.
 Alle Java-basierten Werkzeuge sind ohnehin plattformunabhängig.
 
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Grundlegende-Installation}

\end_inset

Grundlagen
\end_layout

\begin_layout Paragraph
Manuelle Installation mit configure:
\end_layout

\begin_layout Standard
Für die meisten externen Bibliotheken gibt es kein Installationspaket für
 Linux-Distributionen.
 Aus diesem Grund soll hier kurz auf den manuellen Kompilationsvorgang eingegang
en werden.
 Dieser ist dank mitgelieferter Konfigurationsskripten mit wenig Aufwand
 verbunden.
 Der grundlegende Ablauf zur Installation eines Softwarepaketes aus dessen
 Quellen folgt folgendem Muster.
\end_layout

\begin_layout Enumerate
Der Programmquellcode wird von der jeweiligen Website herunter geladen.
 
\end_layout

\begin_layout Enumerate
Die Dateien liegen meistens gepackt im Format 
\family typewriter
tar.gz
\family default
 vor und müssen dann mit dem Befehl 
\family typewriter
tar -zxvf paket-xy-1.0.tar.gz
\family default
 in ein Verzeichnis entpackt werden.
\end_layout

\begin_layout Enumerate
Nach einem Wechsel in dieses Verzeichnis muss der Befehl 
\family typewriter
./configure
\family default
 ausgeführt werden.
 Das Konfigurationsskript untersucht das System daraufhin, ob es alle Voraussetz
ungen erfüllt und gibt gegebenenfalls Hinweise auf unerfüllte Abhängigkeiten.
\newline
Komm
andozeilenargumente der Form 
\family typewriter
--with-xyz=/usr/local
\family default
 weisen dabei auf den Pfad, unter welchem eine abhängige Bibliothek (im
 Beispiel 
\begin_inset Quotes eld
\end_inset

xyz
\begin_inset Quotes erd
\end_inset

) zu finden ist.
\end_layout

\begin_layout Enumerate
Ein fehlerfreier Ablauf des Konfigurationsskriptes produziert eine Datei
 mit dem Namen 
\family typewriter
Makefile
\family default
.
 Mit dem Befehl 
\family typewriter
make
\family default
 wird die Software kompiliert.
\end_layout

\begin_layout Enumerate
Abschließend kann das Paket mit 
\family typewriter
make install
\family default
 auf dem System installiert werden.
 Hierzu sind idR.
 Administrationsrechte erforderlich.
\end_layout

\begin_layout Subsection
\begin_inset LatexCommand \label{sub:Installation-der-benötigten}

\end_inset

Installation der benötigten Softwarekomponenten
\end_layout

\begin_layout Standard
Die folgende Reihenfolge muss bei der Installation der einzelnen Komponenten
 eingehalten werden.
\end_layout

\begin_layout Subsubsection
GEOS geometrische Bibliothek 
\begin_inset LatexCommand \cite{geos:05}

\end_inset


\end_layout

\begin_layout Standard
Der Installationsvorgang dieser Bibliothek entspricht dem unter 
\begin_inset LatexCommand \ref{sub:Grundlegende-Installation}

\end_inset

 angegebenen Ablauf.
 Nach der Installation befinden sich die Dateien 
\family typewriter
libgeos.a
\family default
, 
\family typewriter
libgeos.la
\family default
, 
\family typewriter
libgeos.so
\family default
, 
\family typewriter
libgeos.so.2
\family default
 und 
\family typewriter
libgeos.so.2.1.4
\family default
 im Verzeichnis 
\family typewriter
/usr/local/lib
\family default
.
\end_layout

\begin_layout Subsubsection
PROJ.4 Kartenprojektions-Bibliothek 
\begin_inset LatexCommand \cite{proj4:05}

\end_inset


\end_layout

\begin_layout Standard
Auch die Installation von PROJ.4 läuft nach dem Grundschema aus 
\begin_inset LatexCommand \ref{sub:Grundlegende-Installation}

\end_inset

 ab.
 Als Ergebnis eines erfolgreichen Installationsvorgangs befinden sich die
 Dateien 
\family typewriter
libproj.a
\family default
, 
\family typewriter
libproj.la
\family default
, 
\family typewriter
libproj.so
\family default
, 
\family typewriter
libproj.so.0
\family default
 und 
\family typewriter
libproj.so.0.5.0
\family default
 unter dem Pfad 
\family typewriter
/usr/local/lib
\family default
.
\end_layout

\begin_layout Subsubsection
PostgreSQL (Version 8.x) 
\begin_inset LatexCommand \cite{postgresql:05}

\end_inset


\end_layout

\begin_layout Standard
PostgreSQL lässt sich am einfachsten mittels eines von der entsprechenden
 Linux-Distribution angebotenen Installationspaketes installieren.
 Wichtig ist in diesem Zusammenhang, dass die Quellen der entsprechenden
 PostgreSQL-Version für die folgende Kompilation von PostGIS trotzdem herunterge
laden, entpackt und konfiguriert (
\family typewriter
./configure
\family default
) werden müssen.
 Eine Installation aus den Quellen darf jedoch 
\series bold
nicht
\series default
 durchgeführt werden, wenn bereits das Distributionspaket installiert ist.
\end_layout

\begin_layout Subsubsection
PostGIS für PostgreSQL 
\begin_inset LatexCommand \cite{postgis:05}

\end_inset


\end_layout

\begin_layout Standard
Wie im vorherigen Abschnitt erwähnt, benötigt PostGIS für eine erfolgreiche
 Kompilation die konfigurierten Quellen von PostgreSQL.
 Hierbei müssen die Quellen von PostGIS innerhalb des PostgreSQL-Quellcodes
 in den Ordner 
\family typewriter
contrib
\family default
 entpackt werden.
\end_layout

\begin_layout Standard
Da das 
\family typewriter
./configure
\family default
-Skript von PostGIS nicht gut funktioniert, ist es am einfachsten die Abhängigke
iten, mit denen PostGIS kompiliert werden soll, in der 
\family typewriter
Makefile
\family default
 anzugeben.
 Listing 
\begin_inset LatexCommand \ref{lst:make_postgis}

\end_inset

 zeigt die beiden Einträge in der Datei 
\family typewriter
Makefile
\family default
 die festlegen, dass PostGIS inklusive einer Anbindung an GEOS und PROJ.4
 kompiliert werden soll.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinputlisting[caption=Wichtige Makefile-Einträge für die PostGIS-Kompilation,l
abel=lst:make_postgis]{./listings/make_postgis.txt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Der für GEOS angegebene Pfad lautet nur 
\family typewriter
/usr
\family default
, weil sich das Programm 
\family typewriter
geos-config
\family default
, welches alle Informationen zur installierten GEOS-Version liefert, im
 Verzeichnis 
\family typewriter
/usr/bin/geos-config
\family default
 befindet.
\end_layout

\begin_layout Standard
Der Befehl 
\family typewriter
make
\family default
 führt bei diesen Einstellungen zu einer erfolgreichen Kompilation der PostGIS-E
rweiterung für PostgreSQL.
 Mittels 
\family typewriter
make install
\family default
 wird diese für die Datenbank installiert:
\end_layout

\begin_layout Itemize
Die Bibliotheksdateien werden unter dem Verzeichnis abgelegt, dass der Befehl
 
\family typewriter
pg_config --pkglibdir
\family default
 anzeigt.
\end_layout

\begin_layout Itemize
Programmdateien wie Export- und Importwerkzeuge liegen in dem durch den
 Befehl 
\family typewriter
pg_config
\family default
\size scriptsize
 
\family typewriter
\size default
--bindir
\family default
 angezeigtem Verzeichnis.
\end_layout

\begin_layout Itemize
Alle weiteren Dateien sind unter 
\family typewriter
[prefix]/share/contrib
\family default
, 
\family typewriter
[prefix]/man
\family default
 und 
\family typewriter
[prefix]/share/doc
\family default
 abgelegt.
 Prefix ist die Ausgabe des Befehls 
\family typewriter
pg_config --configure
\family default
.
\end_layout

\begin_layout Standard
Um eine Datenbank mit den erforderlichen Tabellen und Funktionen zur Speicherung
 und Verwendung von Geodaten auszustatten, müssen unter dem 
\family typewriter
postgres
\family default
-Benutzer die Befehle in Listing 
\begin_inset LatexCommand \ref{lst:se_postgis}

\end_inset

 ausgeführt werden.
 
\family typewriter
<Datenbankname>
\family default
 ist dabei die zu erweiternde Datenbank, die zu importierende Datei 
\family typewriter
lwpostgis.sql
\family default
 befindet sich im Verzeichnis 
\family typewriter
[prefix]/share/contrib
\family default
.
 
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinputlisting[caption=Befehl zur Erweiterung einer Datenbank mit PostGIS-Funkt
ionen und Tabellen,label=lst:se_postgis]{./listings/se_postgis.txt}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection*
UMN MapServer (Version 4.6x) 
\begin_inset LatexCommand \cite{mapserver:05}

\end_inset


\end_layout

\begin_layout Standard
Der UMN MapServer muss als letztes kompiliert werden, da er alle vorher
 installierten Bibliotheken nutzt.
 Der Befehl in Listing 
\begin_inset LatexCommand \ref{lst:configure_mapserver}

\end_inset

 führt zur Konfiguration des Mapservers, wobei bei 
\family typewriter
--with-xyz
\family default
 jeweils die Pfade eingesetzt werden müssen, unter denen sich die entsprechenden
 Abhängigkeiten befinden.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinputlisting[caption=Befehl zur Konfiguration der MapServer-Quellen,label=lst
:configure_mapserver]{./listings/configure_mapserver.txt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nach der erfolgreichen Kompilation des Servers befindet sich ein Programm
 mit dem Namen 
\family typewriter
mapserv
\family default
 im Quellverzeichnis.
 Wenn der Befehl 
\family typewriter
mapserv -v
\family default
 die unter Listing 
\begin_inset LatexCommand \ref{lst:mapserver_out}

\end_inset

 angezeigte Ausgabe produziert, hat alles geklappt.
\end_layout

\begin_layout Standard

\newpage

\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
lstinputlisting[caption=Ausgabe zur Verifikation der MapServer-Funktionalität,la
bel=lst:mapserver_out]{./listings/mapserver_out.txt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Das Programm 
\family typewriter
mapserv
\family default
 ist eine CGI-Anwendung.
 Um diese als Server nutzen zu können, muss sie z.B.
 durch den Apache-Webserver ausgeführt werden.
\end_layout

\begin_layout Standard
Für die 
\begin_inset Quotes eld
\end_inset

Installation
\begin_inset Quotes erd
\end_inset

 des MapServers sind folgende Schritte nötig:
\end_layout

\begin_layout Enumerate
Einrichtung eines Virtual-Hosts für den installierten Apache-Webserver.
\end_layout

\begin_layout Enumerate
Das Hauptverzeichnis des Virtual-Hosts muss dabei mindestens die Ordner
 
\family typewriter
cgi-bin
\family default
 und 
\family typewriter
maps
\family default
 enthalten.
\end_layout

\begin_layout Enumerate
Das mapserv Programm wird unter 
\family typewriter
cgi-bin
\family default
 abgelegt.
\end_layout

\begin_layout Enumerate
\begin_inset Quotes erd
\end_inset

MapFiles
\begin_inset Quotes erd
\end_inset

 werden unter 
\family typewriter
maps
\family default
 gespeichert.
\end_layout

\begin_layout Standard
Wenn die Installation erfolgreich war, ist der Mapserver über den URL
\end_layout

\begin_layout Standard
\begin_inset LatexCommand \url{http://localhost/cgi-bin/ms4}

\end_inset

 
\end_layout

\begin_layout Standard
erreichbar und meldet sich mit:
\end_layout

\begin_layout Standard
\begin_inset Quotes eld
\end_inset

No query information to decode.
 QUERY_STRING is set, but empty.
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Subsubsection
Tomcat Servlet Container (Version 5.x) 
\begin_inset LatexCommand \cite{tomcat:05}

\end_inset


\end_layout

\begin_layout Standard
Die Installation des Tomcat Servlet Containers kann entweder manuell, oder
 wieder mittels eines von der Linux-Distribution bereitgestellten Installationsp
aketes erfolgen.
 In jedem Fall sollte nach der Installation unter dem URL 
\begin_inset LatexCommand \url{http://localhost:8080}

\end_inset

 die Willkommensseite des Apache Tomcat zu sehen sein.
\end_layout

\begin_layout Subsection
Installation und Konfiguration der EpiDeGIS-Webanwendung
\end_layout

\begin_layout Subsubsection
Import der Datenbank
\end_layout

\begin_layout Standard
Eine komplette Kopie, der in dieser Diplomarbeit genutzten Datenbank befindet
 sich auf dem zughörigen Datenträger unter 
\family typewriter
/db/epidegis_db.sql
\family default
.
 Die Importanleitung steht in 
\family typewriter
import.txt
\family default
.
\end_layout

\begin_layout Subsubsection
Kartendefinition für den Mapserver
\end_layout

\begin_layout Standard
Damit der MapServer in der von EpiDeGIS geforderten Konfiguration arbeitet,
 benötigt er die entsprechende Kartendefinitionsdatei (
\begin_inset Quotes eld
\end_inset

MapFile
\begin_inset Quotes erd
\end_inset

).
 Die aktuellste Version, der für die Implementierung am NRZM eingesetzten
 Kartendefinition liegt auf dem Datenträger unter /mapserver/nrzm.map.
 Die Installation erfolgt, in dem sie in das maps-Verzeichnis des Apache
 Virtual-Hosts kopiert wird (
\emph on
siehe Abschnitt 
\begin_inset LatexCommand \ref{sub:Installation-der-benötigten}

\end_inset

 
\begin_inset Formula $\rightarrow$
\end_inset

 UMN MapServer
\emph default
).
 Bei der hier beschriebenen Konfiguration sollte der Aufruf des URL 
\end_layout

\begin_layout Standard

\family typewriter
\size scriptsize
\begin_inset LatexCommand \url{http://localhost/cgi-bin/mapserv?map=../maps/nrzm.map&version=1.1.1&service=WMS&REQUEST=GetCapabilities}

\end_inset

 
\end_layout

\begin_layout Standard
ein XML-Dokument ausgeben, welches die 
\begin_inset Quotes eld
\end_inset

Capabilities
\begin_inset Quotes erd
\end_inset

 des EpiDeGIS-WMS enthält.
\end_layout

\begin_layout Standard
Sollte der Mapserver unter einem anderen als dem obigen URL installiert
 sein, ist es erforderlich die folgende Zeile in der Datei 
\family typewriter
\size small
nrzm.map
\family default
\size default
 entsprechend anzupassen:
\end_layout

\begin_layout Standard

\family typewriter
\size small
"wms_onlineresource" "http://localhost/cgi-bin/mapserv?map=../map/nrzm.map&"
\end_layout

\begin_layout Subsubsection
Serverseitige Webanwendung
\end_layout

\begin_layout Standard
Die serverseitige Webanwendung wird durch das WAR-Dateiformat im Tomcat
 Servlet Container installiert.
 Hierzu muss die durch die Kompilation des Unterprojekts 
\emph on
epidegis-web
\emph default
 (siehe Abschnitt 
\begin_inset LatexCommand \ref{sub:Subprojekt-epidegis-web}

\end_inset

) entstehende Datei 
\family typewriter
\size small
epidegis-web.war
\family default
\size default
 in das 
\family typewriter
\size small
webapps
\family default
\size default
-Verzeichnis des Tomcat kopiert werden.
 Eine bereits kompilierte Version der Webapplikation befindet sich auf der
 Projekt-CD zu dieser Diplomarbeit unter 
\family typewriter
\size small
/webapp/
\family default
 
\family typewriter
epidegis-web.war
\family default
\size default
.
\end_layout

\begin_layout Standard
Der Java Server entpackt das Archiv in das Verzeichnis 
\family typewriter
\size small
webapps/epidegis-web
\family default
\size default
.
 Die beiden zu konfigurierenden Dateien sind:
\end_layout

\begin_layout Itemize

\family typewriter
\size small
webapps/epidegis-web/WEB-INF/classes/epidegis-web.properties
\family default
\size default

\newline
Hier muss der Schlüssel 
\family typewriter
\size small
wms.url
\family default
\size default
 in den URL geändert werden, unter dem der MapServer erreichbar ist.
\end_layout

\begin_layout Itemize

\family typewriter
\size small
webapps/epidegis-web/WEB-INF/classes/epidegis-db.properties
\family default
\size default

\newline
Hier müssen nur Änderungen gemacht werden, wenn eine andere Datenbankanbindung
 als die JNDI-Datenquelle des Tomcats verwendet werden soll.
\end_layout

\begin_layout Itemize

\family typewriter
\size small
webapps/epidegis-web/META-INF/c
\family default
\size default
ontext.xml
\newline
Definiert den Servlet-Context für 
\emph on
epidegis-web.

\emph default
 Hier ist die Datenbankanbindung der serverseitigen Anwendung festgelegt.
 Hier müssen die Daten zu dem URL, dem Benutzernamen und dem Passwort zu
 der eingesetzten Datenbankverbindung angegeben werden.
\end_layout

\begin_layout Paragraph
Konfiguration im Tomcat
\end_layout

\begin_layout Standard
Zur Nutzung der EpiDeGIS-Webanwendung müssen zwei Konfigurationen im Tomcat
 Servlet Container durchgeführt werden:
\end_layout

\begin_layout Itemize
Installation des PostgreSQL-JDBC-Treibers
\newline
Der PostgreSQL-Treiber muss als
 JAR-Archiv im Verzeichnis 
\family typewriter
common
\backslash
lib
\family default
 abgelegt sein.
 Der Treiber ist für die entsprechende Datenbankversion über die Website
 von PostgreSQL zu beziehen 
\begin_inset LatexCommand \cite{postgresql:05}

\end_inset

.
\end_layout

\begin_layout Itemize
Anlegen eines EpiDeGIS-Benutzers
\newline
In der Datei conf/tomcat-users.xml sind Benutzer
 definiert.
 Die EpiDeGIS-Webanwendung öffnet sich per Konfiguration nur für Benutzer,
 welche die Rolle (
\begin_inset Quotes eld
\end_inset

role
\begin_inset Quotes erd
\end_inset

) 
\emph on
epidegis_beta
\emph default
 einnehmen.
 In der XML-Datei ist deshalb ein Eintrag der Form
\family typewriter
\size small
 <user username="test" password="geheim" roles="epidegis_beta"/>
\family default
\size default
 erforderlich.
\end_layout

\begin_layout Section
Vorstellung des Kartenbetrachters
\end_layout

\begin_layout Standard
Der folgende Abschnitt stellt die Funktionalität der in diesem Projekt entwickel
ten Web-basierten GIS-Anwendung zur Überwachung von Meningokokken-Erkrankungsfäl
len in Deutschland vor.
\end_layout

\begin_layout Subsection
Gesamtübersicht
\end_layout

\begin_layout Standard
Die Oberfläche des Kartenbetrachters bietet folgende Einstellungsmöglichkeiten
 (Abbildung 
\begin_inset LatexCommand \ref{fig:Screenshot-der-EpiDeGIS-RIA}

\end_inset

):
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/screenshots/komplett.eps
	lyxscale 50
	width 100col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Screenshot-der-EpiDeGIS-RIA}

\end_inset

Screenshot der EpiDeGIS-RIA
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Über diese Schaltfläche kann die Karte in einer druckfähigen Version aufgerufen
 werden.
\end_layout

\begin_layout Enumerate
Über diese Dropdown-Listen können Filter eingestellt werden, welche die
 angezeigten Karten verändern:
\end_layout

\begin_deeper
\begin_layout Enumerate
dargestelltes Gebiet (Bundesgebiet oder einzelne Bundesländer)
\end_layout

\begin_layout Enumerate
Altersgrenzen (von, bis), auf welche die dargestellten Erkrankungsfälle
 eingegrenzt werden
\end_layout

\begin_layout Enumerate
Zeitraum zur Begrenzung der erzeugten epidemiologischer Informationen
\end_layout

\end_deeper
\begin_layout Enumerate
In diesem Bereich ist für jede vorhandene Kartenebene ein Reiter zu sehen.
 In der Kopfzeile lässt sich die Ebene ein- bzw.
 ausblenden.
 Zudem wird anhand eines Ladebalkens angezeigt, ob sich eine Ebene gerade
 aktualisiert.
 Einstellungen zu den einzelnen Ebenen sind unten aufgelistet.
\end_layout

\begin_layout Enumerate
Der Hauptbereich der Anwendung zeigt die aktuelle, anhand aller Filtereinstellun
gen generierte Karte.
 Durch klicken und ziehen der Maus lässt sich der Kartenausschnitt verschieben.
 Ein einfacher Mausklick ohne Bewegung zeigt Informationen zu einem gewählten
 Punkt auf der Karte an.
 Hierbei werden alle gerade aktiven Ebenen nach Informationen abgefragt.
\end_layout

\begin_layout Enumerate
Die Legende am rechten Rand zeigt die Bedeutung, der in den Ebenen verwendeten
 Farben und Symbole.
\end_layout

\begin_layout Subsection
Ebenen
\end_layout

\begin_layout Standard
Im Folgenden werden die verschiedenen Ebenen aufgelistet, deren spezifische
 Filtermöglichkeiten beschrieben und Beispielabbildungen gezeigt:
\end_layout

\begin_layout Subsubsection
Population density
\end_layout

\begin_layout Standard
Stellt die Bevölkerungsdichte dar.
 Diese lässt sich entweder auf Bundesland- oder Landkreisebene visualisieren.
 Zwei Beispiele zeigt Abbildung 
\begin_inset LatexCommand \ref{fig:Bevölkerungsdichte-auf-Bundesland-}

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/screenshots/popdensity_bl.gif
	lyxscale 10
	width 40col%

\end_inset


\begin_inset Graphics
	filename figures/screenshots/popdensity.gif
	lyxscale 10
	width 40col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Bevölkerungsdichte-auf-Bundesland-}

\end_inset

Bevölkerungsdichte auf Bundesland- und Landkreisebene mit Grenzlinien
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Anual incidence
\end_layout

\begin_layout Standard
Zeigt die Jahresinzidenz der Erkrankungsfälle in Bundesländer oder Landkreisen
 an.
 Die Berechnung bezieht sich dabei auf alle Fälle des ausgewählten Feintyps
 die innerhalb des angegebenen Zeitraums aufgetreten sind.
 Falls die Zeitspanne unter einem Jahr ist, wird der Wert hochgerechnet.
 Bei über einem Jahr wird der Mittelwert gebildet.
 Ein Beispiel zeigt Abbildung 
\begin_inset LatexCommand \ref{fig:Jahresinzidenz-2002-(Januar-Dezember)}

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/screenshots/incidence_bl.gif
	lyxscale 10
	width 40col%

\end_inset


\begin_inset Graphics
	filename figures/screenshots/incidence.gif
	lyxscale 10
	width 40col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Jahresinzidenz-2002-(Januar-Dezember)}

\end_inset

Jahresinzidenz 2002 (Januar-Dezember) für alle Meningokokkenfälle für Bundesländ
er und Landkreise
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Finetypes
\end_layout

\begin_layout Standard
Stellt die Verteilung eines Meningokokken-Feintyps auf der Landkarte dar.
 Über ein Suchfeld lässt sich bei den Ebeneneinstellungen ein spezifischer
 Feintyp aus den bisher 404 im System erfassten anzeigen.
 Zwei Beispiele zeigt Abbildung 
\begin_inset LatexCommand \ref{fig:Verteilung-des-Feintyps}

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/screenshots/finetypes.gif
	lyxscale 10
	width 40col%

\end_inset


\begin_inset Graphics
	filename figures/screenshots/finetypes_nrw.gif
	lyxscale 10
	width 40col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Verteilung-des-Feintyps}

\end_inset

Verteilung des Feintyps B:P1.7-2,4:F1-5 in Deutschland und in Nordrhein-Westfalen
 (Januar bis Oktober 2005)
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Serogroups
\end_layout

\begin_layout Standard
Visualisiert Erkrankungsfälle zusammengefasst nach Serogruppen.
 Die Menge der angezeigten Fälle wird durch die Altersgrenzen und den Zeitraum
 gefiltert.
 Es ist möglich die Fälle verschiedener Serogruppen gleichzeitig auf der
 Karte anzuzeigen.
 Unterschiedliche Symbole kennzeichnen die Gruppen B, C, Y, W135, 29E, A
 und Z eindeutig.
 Zwei Beispiele zeigt Abbildung 
\begin_inset LatexCommand \ref{fig:Serogruppe-B-(links)}

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/screenshots/serogroup_b.gif
	lyxscale 10
	width 40col%

\end_inset


\begin_inset Graphics
	filename figures/screenshots/serogroup_c.gif
	lyxscale 10
	width 40col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Serogruppe-B-(links)}

\end_inset

Serogruppe B (links) und C Fälle in Deutschland im Jahr 2002
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Living clusters
\end_layout

\begin_layout Standard
Diese Ebene erlaubt keine weiteren Einstellungsmöglichkeiten.
 Sie zeigt immer die durch die zuletzt durchgeführte prospektiven Analyse
 identifizierten Cluster.
 Das Datum, an dem die Berechnung aufgeführt wurde, wird in der Überschrift
 der Ebene angezeigt.
 Zwei Beispiele zeigt Abbildung 
\begin_inset LatexCommand \ref{fig:Ein-bei-einer}

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/screenshots/cluster_prosi.gif
	lyxscale 10
	width 40col%

\end_inset


\begin_inset Graphics
	filename figures/screenshots/cluster_prosi_re.gif
	lyxscale 10
	width 40col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Ein-bei-einer}

\end_inset

Ein bei einer prospektiven Analyse am 24.
 Oktober 2005 entdeckter Cluster, Feintyp 
\size small
\emph on
C:P1.7-4,14-6:F3-9
\emph default
, Dauer bis dato vom 27.
 September - 24.
 Oktober 2005; rechts die deutschlandweite Verteilung diese Feintyps von
 August-Oktober 2005
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Monthly retrospective clusters
\end_layout

\begin_layout Standard
Einen historisch rückblickende Darstellung der Clusterlandschaft wird mittels
 dieser Ebene visualisiert.
 Über ein Auswahlfeld lässt sich wählen, welche der monatlich durchgeführten
 Retrospektiven Analysen angezeigt werden soll.
 Ein Beispiel zeigt Abbildung 
\begin_inset LatexCommand \ref{fig:Durch-eine-retrospektive}

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status open

\begin_layout Standard
\align center
\begin_inset Graphics
	filename figures/screenshots/cluster_retro.gif
	lyxscale 10
	width 40col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Durch-eine-retrospektive}

\end_inset

Durch eine retrospektive Analyse erkannte historische Cluster.
 Die Berechnung hat vom 1.
 September 2005 an rückblickend alle Fälle des letzten Jahres eingeschlossen.
\end_layout

\end_inset


\end_layout

\begin_layout Section
Informationen für Entwickler
\end_layout

\begin_layout Standard
Dieser Abschnitt ist speziell an Entwickler gerichtet, die sich einen Überblick
 über vorhandenen Strukturen und Programmquellen verschaffen möchten.
 Mit dem offiziellen Ende dieser Diplomarbeit befindet sich die zu diesem
 Projekt entwickelte Software in einem 
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
mbox{Beta-Stadium}
\end_layout

\end_inset

.
 Jede der in dieser Arbeit vorgestellten Komponenten leistet das geforderte
 in manchen Bereichen bedarf es jedoch noch Überarbeitungen.
\end_layout

\begin_layout Standard
Aufgrund dessen behandelt die hier vorliegende gedruckte Form auch nur Hinweise
 darauf, wo sich weitere Informationen zu diesem Projekt finden lassen.
\end_layout

\begin_layout Subsection
Projektverwaltung mit Maven
\end_layout

\begin_layout Standard
Diese Arbeit verwendet das Werkzeug Maven 
\begin_inset LatexCommand \cite{maven:05}

\end_inset

 um den Entwicklungsvorgang einfacher verwalten zu können (siehe auch 
\begin_inset LatexCommand \ref{sub:Entwicklungswerkzeuge}

\end_inset

).
 Während dieser Arbeit hat Maven einen großen Versionssprung von 1.02 auf
 2.0 gemacht.
 Das in dieser Arbeit verwendetet Projektmodell basiert bis dato noch auch
 Maven 1.02, zuletzt wurde Maven 1.1 Beta 2 eingesetzt.
 Diese Version befindet sich als Windows-Installer oder alternativ als 
\family typewriter
\size small
tar.bz2
\family default
\size default
-gepackte Datei im Ordner 
\family typewriter
\size small
/maven
\family default
\size default
 des beigefügten Datenträgers.
 Das Verzeichnis enthält außerdem das Handbuch mit Installationsanleitung
 und einer Kurzbeschreibung.
 Zur einfachen Kompilation des EpiDeGIS-Quellcodes ist Maven sehr hilfreich.
\end_layout

\begin_layout Subsection
HTML-Dokumentation des Projektes EpiDeGIS mit Quellcode und JavaDoc
\end_layout

\begin_layout Standard
Im Verzeichnis doc der Projekt-CD befindet sich eine HTML-Dokumentation
 zu den in Java implementierten Komponenten von EpiDeGIS.
 Es ist geplant, diese nach Abgabe dieses schriftlichen Teils noch weiter
 zu überarbeiten.
 Der Aufruf der Datei 
\family typewriter
/doc/index.html
\family default
 in einem Internetbrowser öffnet die Einstiegsseite zur Dokumentation.
 Von hier aus lassen sich Informationen zu jedem einzelnen Unterprojekt
 aufrufen.
 
\end_layout

\begin_layout Standard
Die beiden wichtigsten Informationsquellen sind dabei die 
\emph on
JavaDoc
\emph default
- und die 
\emph on
Source Xref
\emph default
-Dokumentation.
 Diese finden sich nach dem Öffnen eines Unterprojektes (z.B.
 
\emph on
EpiDeGIS Database Access
\emph default
) in dem Menü 
\emph on
Project Reports
\emph default
.
 Besonders die 
\emph on
JavaDocs
\emph default
 werden noch erweitert.
\end_layout

\begin_layout Standard
Weiterhin bieten die Einstiegsseiten zu jedem Teilprojekt Informationen
 dazu, wie es kompiliert und angewendet werden kann bzw.
 welche Punkte noch zu überarbeiten sind.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Geografische Daten und Zensusdaten
\end_layout

\begin_layout Subsubsection
Geografische Daten
\end_layout

\begin_layout Standard
Diese Diplomarbeit hat die freien Deutschlanddaten des Mapbender-Projekts
 
\begin_inset LatexCommand \cite{mapbender:2005}

\end_inset

 eingesetzt.
 Sie sind frei über dessen Homepage erhältlich.
 Der Datensatz enthält unter anderem die Postleitzahlbereiche, Bundesländer
 und Städte für Deutschland.
\end_layout

\begin_layout Standard
Die Daten liegen im SHP-Dateiformat 
\begin_inset LatexCommand \cite{esri-shp:1998}

\end_inset

 vor und können mit dem Programm 
\family typewriter
shp2pgsql
\family default
 aus dem PostGIS-Paket leicht in die Datenbank übertragen werden.
\end_layout

\begin_layout Standard
Um Landkreispolygone zu gewinnen, mussten die Postleitzahlen manuell zu
 Landkreisen zusammengefasst werden.
 Die Aufgabe wurde mit Hilfe einer über das NRZM zur Verfügung gestellten
 Zuordnungstabelle Postleitzahl 
\begin_inset Formula $\Longleftrightarrow$
\end_inset

 Landkreis und entsprechenden PostGIS-SQL-Abfragen, in der Anfangsphase
 dieser Arbeit gelöst.
\end_layout

\begin_layout Standard
Exaktere geografische Daten eines 
\begin_inset Quotes eld
\end_inset

Datenhändlers
\begin_inset Quotes erd
\end_inset

 könnten die Qualität der von EpiDeGIS erzeugten Karten verbessern.
\end_layout

\begin_layout Subsubsection
Zensusdaten
\end_layout

\begin_layout Standard
Die zu Berechnung der Inzidenz und der Bevölkerungsdichte herangezogenen
 Zensusdaten stammen vom Statistisches Bundesamt Deutschland 
\begin_inset LatexCommand \cite{statis:2005}

\end_inset

.
 Das Amt stellt alle Einwohnerzahlen auf Landkreisebene zur freien Verfügung.
\end_layout

\begin_layout Standard
Auch für diese Daten gilt, dass eine Verbesserung der Datenqualität, wie
 beispielsweise Zensusdaten aufgeschlüsselt nach Altersgruppen, die Möglichkeite
n des Systems EpiDeGIS erweitern könnten.
 Diese Daten sind, genau wie professionelle Geodaten, kostenpflichtig zu
 erwerben.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
\begin_inset LatexCommand \label{sub:Subprojekt-epidegis-web}

\end_inset

Inhalt des Datenträgers zu dieser Diplomarbeit
\end_layout

\begin_layout Standard
Folgende Inhalte sind auf dem Datenträger zu dieser Diplomarbeit abgelegt:
\end_layout

\begin_layout Description
/ausarbeitung 
\end_layout

\begin_deeper
\begin_layout Description
./literatur hier sind ein Großteil der in dieser Arbeit referenzierten Quellen
 in Form von PDF-Dateien bzw.
 als HTML-Dokumente abgelegt.
 Sortierung nach Autor und Jahr bzw.
 u.
 U.
 Titel der Arbeit.
\end_layout

\begin_layout Description
./diplom.pdf die vorliegende Arbeit im PDF-Format
\end_layout

\begin_layout Description
./biblio.bib Literaturangaben im BibTeX-Format
\end_layout

\end_deeper
\begin_layout Description
/db
\end_layout

\begin_deeper
\begin_layout Description
./epidegis_db.sql Backup der Datenbank
\end_layout

\begin_layout Description
./import.txt Hinweise zum Import der Datenbank
\end_layout

\begin_layout Description
./struktur.pdf Informationen zu der Datenbankstruktur
\end_layout

\end_deeper
\begin_layout Description
/doc HTML-Dokumentation des Projektes EpiDeGIS (
\emph on
index.html
\emph default
)
\end_layout

\begin_layout Description
/gis-tag Präsentation, mit der diese Arbeit am 8.
 November auf dem GIS-Tag Unterfranken vorgestellt wurde.
\end_layout

\begin_layout Description
/mapserver 
\end_layout

\begin_deeper
\begin_layout Description
./nrzm.map 
\begin_inset Quotes eld
\end_inset

MapFile
\begin_inset Quotes erd
\end_inset

, die für das epidemiologischen GI-System des NRZM eingesetzt wird 
\end_layout

\end_deeper
\begin_layout Description
/maven Programmdateien und Handbuch für das Maven-Werkzeug
\end_layout

\begin_layout Description
/project EpiDeGIS Projektordner mit den Quellcodes zu allen Teilprojekten
\end_layout

\begin_deeper
\begin_layout Description
./epidegis-db Datenbank-Teilprojekt: implementiert 
\begin_inset Quotes eld
\end_inset

Data Access Objects
\begin_inset Quotes erd
\end_inset

, über die alle anderen Java-Module von EpiDeGIS auf die Datenbank zugreifen.
\end_layout

\begin_layout Description
./epidegis-importer Import-Anwendung: importiert eine CSV-Datei in die Datenbank
 von EpiDeGIS .
\end_layout

\begin_layout Description
./epidegis-satscan SaTScan-Modul: führt das Programm SaTScan anhand von Job-Defin
itionen aus der Datenbank aus und speichert gefundene Cluster.
\end_layout

\begin_layout Description
./epidegis-transfer Transfer-Applikation: stellt eine SSH-Verbindung her,
 um Daten vom NRZM an den Datenserver zu übertragen.
\end_layout

\begin_layout Description
./epidegis-web Webanwendung: implementiert die serverseitige Webapplikation,
 die RIA mit OpenLaszlo, den abstrakten Datentyp einer Karte und die Kommunikati
on mit dem MapServer.
\end_layout

\begin_layout Description
./xdocs enthält Quellen für die HTML-Dokumentation
\end_layout

\end_deeper
\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Datei-Listings
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[caption=Kommentiertes Ausgabeformat von SaTScan,label=lst:satsca
n_out, numbers=none]{./listings/satscan.out.txt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[caption=Beipiel einer Konfigurationsdatei für den MapServer
 mit WMS-Unterstützung und einer Ebene,label=lst:mapserver_simple]{./listings/sim
ple.map}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[caption=MapServer-Datenquelle für die Inzidenz-Ebene,label=lst:i
ncidence_data]{./listings/incidence_data.map}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstinputlisting[caption=Eine abgespeckte Karte in XML-Form,label=lst:map]{./listi
ngs/map.xml}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Abkürzungen
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
AGI Arbeitsgemeinschaft Influenza
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
ANSI American National Standards Institute
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
BMGS Bundesministerium für Gesundheit und Soziale Sicherung
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
CGI Common Gateway Interface
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
CSS Cascading Style Sheets
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
CSV Character Separated Values bzw.
 Comma Separated Values
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
DAO Data Access Objects
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
DBMS Datenbankmanagementsystem
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
ECDC European Centre for Disease Prevention and Control 
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
EpiDeGIS Arbeitstitel für das in dieser Diplomarbeit erstellte Softwaresystem
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
ESRI Environmental Systems Research Institute
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
GIF Graphics Interchange Format
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
GIS Geografisches Informationssystem
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
GUI Graphical User Interface, Grafische Benutzeroberfläche
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
HTML Hypertext Markup Language
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
IDC International Data Corporation
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
IfSG Infektionsschutzgesetz oder Gesetz zur Verhütung und Bekämpfung von
 Infektionskrankheiten beim Menschen
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
ISO International Organization for Standardization
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
JSP JavaServer Pages
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
LLR Log Likelihood Ratio
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
MVC Model View Controller (Architekturmuster)
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
NASA National Aeronautics and Space Administration
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
NRZM Nationales Referenzzentrum für Meningokokken
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
OGC Open Geospatial Consortium
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
ORDBMS objektrelationales Datenbankmanagementsystem
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
OSS Open Source Software
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
RIA(s) Rich Internet Application(s)
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
RKI Robert Koch-Institut
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
SFS Simple Features Specification
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
SMI Swedish Institute for Infectious Disease Control
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
SQL Structured Query Language
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
SVG Scalable Vector Graphics
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
SWF Small Web Format / Shockwave Flash
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
URL Uniform Resource Locator
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
W3C World Wide Web Consortium
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
WMS Web Map Service
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
WWW World Wide Web
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
XML Extensible Markup Language
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
XUL XML User Interface Language
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Addchap
Selbstständigkeitserklärung
\end_layout

\begin_layout Section*
Erklärung
\end_layout

\begin_layout Standard
Ich erkläre hiermit, dass ich die vorliegende Arbeit selbstständig und nur
 unter Verwendung der angegebenen Quellen und Hilfsmittel angefertigt habe.
\newline

\end_layout

\begin_layout Standard
\align left
Würzburg, den 23.
 Dezember 2005
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="1">
<features>
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="1">
<features>
<column alignment="block" valignment="bottom" width="4.5cm">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset

 (Markus Reinhardt)
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
lstlistoflistings
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Standard


\backslash
clearemptydoublepage
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset LatexCommand \bibtex[abbrvdin]{biblio}

\end_inset


\end_layout

\end_body
\end_document
